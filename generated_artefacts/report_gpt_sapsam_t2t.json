{
    "20_ground_truth.json": {
        "0": {
            "text": "The process begins when a problem is recognized, and the customer contacts customer service.\n\nThe customer then describes the problem.\n\nThe consultation team identifies the problem and finds a suitable solution.\n\nNext, the consultation team describes the solution to the customer.\n\nThe customer attempts to fix the problem based on the provided solution.\n\nAn evaluation is made to determine if the solution was helpful.\n\nIf the solution is helpful, the process ends with the problem being resolved.\n\nIf the solution is not helpful, the consultation team requests a new solution.\n\nThe new solution is then evaluated for its helpfulness.\n\nIf the new solution is helpful, the process ends with the problem being resolved.\n\nIf the new solution is not helpful, the consultation team suggests further solutions, and the process ends with the problem being resolved.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Recognize problem and contact customer service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Describe the problem",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Identify the problem and find a suitable solution",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Describe solution",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Fix the problem",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Request new solution",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Suggest further solutions",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Problem resolved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Solution helpful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "New solution helpful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer",
                                "elemRefs": [
                                    "id8",
                                    "id1",
                                    "id2",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Customer Service",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Consultation Team",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id6",
                                    "id7",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id10",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id10",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "yes"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a problem is recognized and communicated to customer service. The customer first recognizes the problem and contacts customer service. Then, the customer describes the problem in detail. \n\nNext, the consultation team identifies the problem and finds a solution. They then describe the solution to the customer. \n\nThe customer attempts to fix the problem based on the provided solution. \n\nAt this point, it is determined whether the solution was helpful. If the solution is helpful, the process ends with the problem being resolved. \n\nIf the solution is not helpful, the customer requests a new solution. The consultation team then suggests further solutions. \n\nThe customer attempts to fix the problem again based on the new suggestions, and the process loops back to determine if the new solution is helpful. This cycle continues until the problem is resolved.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Recognize problem and contact customer service",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Describe the problem",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Identify problem and find solution",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Describe solution",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Fix the problem",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Request new solution",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Suggest further solutions",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Problem recognized and communicated",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Problem resolved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Solution helpful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer Service",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer",
                                "elemRefs": [
                                    "task1",
                                    "task2",
                                    "task5",
                                    "task6"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Consultation Team",
                                "elemRefs": [
                                    "task3",
                                    "task4",
                                    "task7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task5",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway1",
                        "targetRef": "event3",
                        "condition": "yes"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway1",
                        "targetRef": "task6",
                        "condition": "no"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task6",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task7",
                        "targetRef": "task5"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a problem is recognized by the customer. The customer then contacts customer service and describes the problem. The consultation team identifies and finds a solution, which is then described to the customer. The customer attempts to fix the problem using the provided solution. \n\nIf the solution is helpful, the process ends with the problem being resolved. If the solution is not helpful, the customer requests a new solution. The consultation team then evaluates if the new solution is helpful. If the new solution is helpful, the process ends with the problem being resolved. If the new solution is not helpful, the consultation team suggests further solutions, and the process ends with the problem being resolved.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Recognize problem",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Contact customer service",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Describe the problem",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Identify and find solution",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Describe solution",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Fix problem",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Request new solution",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Suggest further solutions",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Problem resolved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Solution helpful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "New solution helpful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer Service Process",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer",
                                "elemRefs": [
                                    "task1",
                                    "task2",
                                    "task3",
                                    "task6"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Consultation Team",
                                "elemRefs": [
                                    "task4",
                                    "task5",
                                    "task7",
                                    "task8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task6",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway1",
                        "targetRef": "event2",
                        "condition": "yes"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway1",
                        "targetRef": "task7",
                        "condition": "no"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task7",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway2",
                        "targetRef": "event2",
                        "condition": "yes"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gateway2",
                        "targetRef": "task8",
                        "condition": "no"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task8",
                        "targetRef": "event2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "14_ground_truth.json": {
        "0": {
            "text": "The process begins with the start of the process. The seller displays items on the webpage. The buyer then purchases an item. The seller receives the buyer's order and sends an order purchase confirmation. Following this, the seller sends the order to the shipping company. The shipping company gets the item and decides on the next action.\n\nAt this point, there is a decision to be made. If the item is delivered, the shipping company tracks the order, and the buyer closes the order, marking the end of the process with the order being delivered.\n\nIf the item is not delivered, another decision is made. If the buyer requests a reimbursement, the seller receives the buyer's decision and reimburses the money. This leads to an escalation, which ends the process.\n\nIf the buyer requests a reshipment, the seller sends the order to the shipping company again, and the shipping company gets the item and decides on the next action, repeating the process from the decision point.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Display items on webpage",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase item",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive buyer's order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send order purchase confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send order to shipping company",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Get item and decide action",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Track order",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Close order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive buyer's decision",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Reimburse money",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send order to shipping company again",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Process start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Order delivered",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Process end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Escalation",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id18",
                        "name": "eBay",
                        "lanes": [
                            {
                                "id": "id19",
                                "name": "Seller",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            },
                            {
                                "id": "id20",
                                "name": "Buyer",
                                "elemRefs": [
                                    "id2",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id21",
                                "name": "Shipping Company",
                                "elemRefs": [
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id16",
                        "targetRef": "id7",
                        "condition": "Delivered"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id16",
                        "targetRef": "id17",
                        "condition": "Not delivered"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id17",
                        "targetRef": "id9",
                        "condition": "Request reimbursement"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id10",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id17",
                        "targetRef": "id11",
                        "condition": "Request reshipment"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id15",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the buyer starting the process on eBay. The first step is to display items on the webpage. The buyer then selects and purchases an item. Once the purchase is made, the seller receives the buyer's order and sends an order confirmation to the buyer. The seller then sends the order to the shipping company.\n\nThe shipping company gets the item and decides what to do next. They check if the item is delivered within the proper dates. If the item is delivered on time, the shipping company tracks the order, and the buyer closes the order, marking the end of the process with the order being delivered.\n\nIf the item is not delivered on time, the buyer decides whether to ask for a reimbursement or a reshipment. This decision is received by the seller. If the buyer opts for a reshipment, the seller sends the order to the shipping company again. If the buyer opts for a money reimbursement, the seller reimburses the money, and the process ends with an escalation due to the delivery issue.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Display items on webpage",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase item",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive buyer's order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send order confirmation to buyer",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send order to shipping company",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Get item and decide what to do",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Track order",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Buyer closes order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Decide to ask for reimbursement or reshipment",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Receive buyer decision",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Reimburse money",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Order Delivered",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Escalation",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Item delivered in proper dates?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Reimbursement or reshipment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "eBay",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Seller",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id10",
                                    "id11"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Buyer",
                                "elemRefs": [
                                    "id2",
                                    "id9",
                                    "id8",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id17"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Shipping Company",
                                "elemRefs": [
                                    "id6",
                                    "id16",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id16",
                        "targetRef": "id7",
                        "condition": "Delivered"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id16",
                        "targetRef": "id9",
                        "condition": "Not Delivered"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id17",
                        "targetRef": "id10",
                        "condition": "Money Reimbursement"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "Reshipment"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, after which items are displayed to the buyer. The buyer then proceeds to purchase an item. Once the purchase is made, the seller receives the buyer's order and sends an order purchase confirmation. Following this, the seller sends the order to the shipping company.\n\nThe shipping company then delivers the item. After the delivery, it is checked whether the item was delivered successfully. If the item is delivered, the order is tracked, and the process ends with the order being closed.\n\nIf the item is not delivered, the buyer decides whether to ask for reimbursement or request a reshipment. The buyer's decision is then received by the seller. If the buyer asks for reimbursement, the seller reimburses the money, and the process ends. If the buyer requests a reshipment, the seller resends the order to the shipping company, and the process continues from sending the order to the shipping company again.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Display items",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase item",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive buyer's order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send order purchase confirmation",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Send order to shipping company",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Deliver item",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Track order",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Decide: Ask for reimbursement or reshipment",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive buyer's decision",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Reimburse money",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Resend order to shipping company",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "close order",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "eid3",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "eid4",
                        "name": "order delivery failed",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gid1",
                        "name": "Item delivered?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid2",
                        "name": "Decision gateway",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pid1",
                        "name": "Seller",
                        "lanes": [
                            {
                                "id": "lid1",
                                "name": "Seller Actions",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pid2",
                        "name": "Buyer",
                        "lanes": [
                            {
                                "id": "lid2",
                                "name": "Buyer Actions",
                                "elemRefs": [
                                    "id2",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pid3",
                        "name": "Shipping Company",
                        "lanes": [
                            {
                                "id": "lid3",
                                "name": "Shipping Actions",
                                "elemRefs": [
                                    "id6",
                                    "gid1"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pid4",
                        "name": "eBay",
                        "lanes": [
                            {
                                "id": "lid4",
                                "name": "Tracking",
                                "elemRefs": [
                                    "id7",
                                    "eid2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "gid1"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "gid1",
                        "targetRef": "id7",
                        "condition": "Delivered"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "eid2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gid1",
                        "targetRef": "id8",
                        "condition": "Not Delivered"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "gid2"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "gid2",
                        "targetRef": "id9",
                        "condition": "Ask for reimbursement"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id10",
                        "targetRef": "eid3"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "gid2",
                        "targetRef": "id11",
                        "condition": "Request reshipment"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "72_ground_truth.json": {
        "0": {
            "text": "The process begins when a patient requests an appointment, describing the problem. The receptionist then verifies the availability of dates within the next 90 days. If dates are available within this period, the receptionist makes the appointment and sends the appointment time and date to the patient. If no dates are available within 90 days, the process ends with the appointment being rejected.\n\nOnce the patient receives the appointment details, they check the appointment data. The patient then confirms whether they can attend the appointment. If the patient confirms the appointment, the receptionist registers the appointment. If the patient does not confirm, the process loops back to the patient requesting an appointment again.\n\nAfter the appointment is registered, the receptionist sends an email with the patient data. The process concludes with the appointment being successfully done.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request appointment describing the problem",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify dates availability within 90 days",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Make appointment and send appointment time and date",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check appointment data",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Register appointment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send email with patient data",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Appointment done",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Appointment rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Dates available within 90 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Patient confirms appointment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Oculist Check",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Patient",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id7",
                                    "id9"
                                ]
                            },
                            {
                                "id": "id14",
                                "name": "Receptionist",
                                "elemRefs": [
                                    "id2",
                                    "id5",
                                    "id6",
                                    "id3",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id1",
                        "condition": "No"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an appointment is required by a patient.\n\nThe patient then requests an appointment, describing the problem.\n\nThe receptionist verifies the available dates.\n\nIf the available dates are within 90 days, the receptionist makes the appointment and sends the details to the patient.\n\nThe patient then checks the appointment data.\n\nIf the patient confirms the appointment, the receptionist receives an email with the patient\u2019s personal data.\n\nThe receptionist registers the appointment and sends an email with the patient data.\n\nThe process ends with the appointment being done.\n\nIf the available dates are not within 90 days, the appointment is rejected, and the process ends.\n\nIf the patient does not confirm the appointment, the process loops back to the patient requiring an appointment.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Require an appointment",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Request an appointment describing the problem",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Verify available dates",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Make the appointment and send to patient",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Check the appointment data",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Receive email with patient\u2019s personal data",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Register the appointment",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Send email with the patient data",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "appointment done",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "appointment rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Are available dates within 90 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Did the patient confirm the appointment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Oculist",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Patient",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Receptionist",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id12",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id12",
                        "targetRef": "id11",
                        "condition": "no"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id13",
                        "targetRef": "id1",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start of booking an appointment. The patient first books an appointment and then requests the appointment. The receptionist then verifies the available dates. If there are available dates, the receptionist makes the appointment and sends the appointment time and date to the patient. The patient then checks the appointment data. If the appointment is confirmed, the receptionist registers the appointment and sends an email with the appointment data, concluding the process with the appointment being done. If the appointment is not confirmed, the patient requests the appointment again. If there are no available dates, the receptionist sends a rejection message, and the process ends with the appointment being done.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Book Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Request Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Verify Available Dates",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Make Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Appointment Time and Date",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check Appointment Data",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Register Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send Email with Appointment Data",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send Rejection Message",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Start Booking",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "Appointment Done",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Available Dates?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "Appointment Confirmed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Oculist Check Appointment",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Patient",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id6"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Receptionist",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "g2",
                        "targetRef": "id4",
                        "condition": "Available dates"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "g2",
                        "targetRef": "id9",
                        "condition": "No available dates"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "g3",
                        "targetRef": "id7",
                        "condition": "Confirmed"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "g3",
                        "targetRef": "id2",
                        "condition": "Not confirmed"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "e2"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "e2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "25_ground_truth.json": {
        "0": {
            "text": "The process begins with the initiation of the process by the credit institution. \n\nThe first step involves preparing the registration report and simultaneously checking against Blue-Sky laws. \n\nOnce these tasks are completed, the process moves to preparing for the issue price determination. \n\nFollowing this, the process branches into two parallel activities: organizing an information event and waiting for the company's registration approval. \n\nOnce both the information event is organized and the company's registration is approved, the issue price is decided. \n\nAfter deciding the issue price, the process checks for the occurrence of any obligations. \n\nIf an obligation occurs, the process proceeds to conclude the contract. \n\nIf no obligation occurs, the process is aborted. \n\nAfter concluding the contract, the stock is offered to the public, and the process ends with the stock being offered.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare registration report",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check against Blue-Sky laws",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare for issue price determination",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Wait for company's registration approval",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Organize information event",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Decide issue price",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Check obligation occurrence",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Conclude contract",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Offer stock to public",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Start process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Process aborted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Stock offered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Obligation occurs?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Credit Institution",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Process Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "event1",
                                    "event2",
                                    "event3",
                                    "gw1"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "event1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id7",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gw1",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gw1",
                        "targetRef": "event2",
                        "condition": "no"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id9",
                        "targetRef": "event3"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when the SEC approval process is started. \n\nThe first step involves preparing the registration report and checking against Blue-Sky laws simultaneously. \n\nOnce both tasks are completed, the process moves forward to prepare for determining the issue price and waiting for the company's registration approval in parallel. \n\nAfter preparing for the issue price, an information event is organized. \n\nOnce the company's registration is approved and the information event is organized, the issue price is decided. \n\nAt this point, a decision is made to check if the obligation really occurs. \n\nIf the obligation occurs, a contract is concluded, and the stock is offered to the public, ending the process with the stock being offered to the public. \n\nIf the obligation does not occur, the process is aborted.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare registration report",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check against Blue-Sky laws",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare for determining issue price",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Wait for company's registration approval",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Organize information event",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Decide issue price",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Check if the obligation really occurs",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Conclude contract",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Offer stock to public",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "SEC approval process started",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Process aborted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Stock offered to public",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "Credit Institution",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Lane 1",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id14",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id14",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id15",
                        "targetRef": "id7",
                        "condition": "Obligation occurs"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id15",
                        "targetRef": "id11",
                        "condition": "Obligation does not occur"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with the start event at the Credit Institution.\n\nFirst, the registration report is prepared and checked against Blue-Sky laws simultaneously.\n\nOnce both tasks are completed, the process continues with preparing for determining the issue price and waiting for the company's registration approval in parallel.\n\nAfter both of these tasks are completed, an information event is organized.\n\nFollowing the organization of the information event, the issue price is decided.\n\nNext, it is checked whether an obligation occurs.\n\nIf an obligation occurs, a contract is concluded, and then the stock is offered to the public, ending the process with the stock being offered.\n\nIf an obligation does not occur, the process is aborted, ending with the process being marked as aborted.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Registration Report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check against Blue-Sky laws",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare for determining issue price",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Wait for company's registration approval",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Organize information event",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Decide issue price",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check whether obligation occurs",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Conclude contract",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Offer stock to public",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Process Aborted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Stock Offered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "Credit Institution",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "General",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id14",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id14",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id15",
                        "targetRef": "id8",
                        "condition": "Obligation occurs"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id15",
                        "targetRef": "id11",
                        "condition": "Obligation does not occur"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "43_ground_truth.json": {
        "0": {
            "text": "The process begins when an order is placed by the customer.\n\nFirst, the order is issued.\n\nNext, the feasibility of the order is checked.\n\nIf the order is not feasible, an escalation occurs, and the process ends.\n\nIf the order is feasible, it is checked whether an offer is available or if it is a repeat order.\n\nIf an offer is available or it is a repeat order, an order is created.\n\nIf an offer is not available, a price calculation is performed.\n\nAfter the price calculation, an offer is created and sent.\n\nThe process then checks if the offer is accepted.\n\nIf the offer is not accepted, the customer is informed that there is no order confirmation.\n\nIf the offer is accepted, an order is created.\n\nThe order is then entered into production planning.\n\nFinally, an order confirmation is sent to the customer, and the process ends with the order confirmation being dispatched.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Issue order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check feasibility",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Perform price calculation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create and send offer",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check if offer accepted",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform customer: No order confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create order",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Enter into production planning",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send order confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Order placed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Escalation: Not feasible",
                        "type": "IntermediateEscalationEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End process: Order confirmation dispatched",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Offer available or repeat order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Offer accepted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "Driller",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Customer",
                                "elemRefs": [
                                    "id1",
                                    "id14",
                                    "id9"
                                ]
                            },
                            {
                                "id": "id19",
                                "name": "Jane Doe",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "id13",
                        "targetRef": "id11",
                        "condition": "Not feasible"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "id13",
                        "targetRef": "id14",
                        "condition": "Feasible"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "id14",
                        "targetRef": "id7",
                        "condition": "Available or repeat order"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "id14",
                        "targetRef": "id3",
                        "condition": "Not available"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "Not accepted"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "id16",
                        "targetRef": "id7",
                        "condition": "Accepted"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an order is placed by the customer.\n\nThe first step is for the customer to issue the order.\n\nNext, Jane Doe checks the feasibility of the order.\n\nIf the order is not feasible, the process ends with the process being aborted.\n\nIf the order is feasible, the process continues to determine whether an offer is available or if it is a repeat order.\n\nIf an offer is not available or it is not a repeat order, a price calculation is performed by the sales team.\n\nFollowing the price calculation, the sales team creates and sends an offer.\n\nThe process then checks if the offer is accepted.\n\nIf the offer is not accepted, the customer is informed that there is no order confirmation.\n\nIf the offer is accepted, the sales team creates the order and enters it into production planning.\n\nAfter the order is created and entered into production planning, the sales team sends the order confirmation.\n\nThe process ends with the dispatch of the order confirmation.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Issue Order",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Check Feasibility",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Perform price calculation",
                        "type": "Service"
                    },
                    {
                        "id": "task4",
                        "name": "Create and send offer",
                        "type": "Service"
                    },
                    {
                        "id": "task5",
                        "name": "Inform customer: no order confirmation",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Create order and enter into production planning",
                        "type": "Service"
                    },
                    {
                        "id": "task7",
                        "name": "Send order confirmation",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Order Placed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Abort Process",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Dispatch Order Confirmation",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Offer or Repeat Order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Offer Accepted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer",
                                "elemRefs": [
                                    "task1"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Driller",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Jane Doe",
                                "elemRefs": [
                                    "task2"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Sales",
                                "elemRefs": [
                                    "task3",
                                    "task4",
                                    "task5",
                                    "task6",
                                    "task7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "event2",
                        "condition": "Not Feasible"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "gateway2",
                        "condition": "Feasible"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway2",
                        "targetRef": "task3",
                        "condition": "Offer not available or not repeat order"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task4",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway3",
                        "targetRef": "task5",
                        "condition": "Offer not accepted"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway3",
                        "targetRef": "task6",
                        "condition": "Offer accepted"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task6",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gateway2",
                        "targetRef": "task6",
                        "condition": "Offer available or repeat order"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task7",
                        "targetRef": "event3"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when an order is placed by the customer.\n\nThe first step is to issue the order.\n\nNext, the feasibility of the order is checked.\n\nIf the order is not feasible, the process is aborted through escalation.\n\nIf the order is feasible, it is determined whether an offer is available or if it is a repeat order.\n\nIf an offer is available or it is a repeat order, the order is created and entered into production planning.\n\nIf no offer is available and it is not a repeat order, a price calculation is performed.\n\nAfter the price calculation, an offer is created and sent.\n\nIf the offer is not accepted, the customer is informed that there is no order confirmation.\n\nIf the offer is accepted, the order is created and entered into production planning.\n\nFollowing this, the order confirmation is sent.\n\nThe process ends with the dispatch of the order confirmation.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Issue the order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check feasibility of the order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Abort process through escalation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Perform price calculation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create and send offer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform no order confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create and enter order into production planning",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send order confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Order placed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Process ends with dispatch of order confirmation",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Offer available or repeat order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "driller",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "customer",
                                "elemRefs": [
                                    "id1",
                                    "id9"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "Jane Doe",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "Order not feasible"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id11",
                        "targetRef": "id12",
                        "condition": "Order feasible"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "Offer available or repeat order"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id12",
                        "targetRef": "id4",
                        "condition": "No offer available, not a repeat order"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "Offer not accepted"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "Offer accepted"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "8_ground_truth.json": {
        "0": {
            "text": "The process begins with the initiation of a loan application. The first step involves performing a BKR check and a Jane Doe check simultaneously. Once both checks are completed, the results are confirmed by risk management. \n\nBased on the assessment result, if the application is rejected, a rejection letter is sent to the client, and the process ends. If the application is accepted, the client is called to complement the information. \n\nIf the client does not pick up the call, a reminder is sent, and the client is called again. If the client picks up the call, a loan offer is created and sent to the client. \n\nAfter sending the loan offer, if two hours pass without a response, a reminder is sent to the client. If the offer is accepted, a welcome letter is sent to the client. \n\nFollowing the acceptance of the offer, the loan application is activated by the finance department. The activation is then validated, and the initial payment is executed. \n\nFinally, the documents are returned to the client, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Perform BKR check",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Perform Jane Doe check",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm credibility check by risk management",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection letter to the client",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Call client to complement information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create and send loan offer to the client",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Remind client",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send welcome letter to the client",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Activate loan application by finance",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Validate activation",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Execute initial payment",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Return documents to client",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "type": "Parallel"
                    },
                    {
                        "id": "id17",
                        "type": "Exclusive",
                        "name": "Assessment result"
                    },
                    {
                        "id": "id18",
                        "type": "Exclusive",
                        "name": "Call result"
                    },
                    {
                        "id": "id19",
                        "type": "Exclusive",
                        "name": "Offer reminder"
                    }
                ],
                "pools": [
                    {
                        "id": "id20",
                        "name": "Risk management",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Risk management",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id16"
                                ]
                            },
                            {
                                "id": "id22",
                                "name": "Senior risk management",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id23",
                        "name": "Administration",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Administration",
                                "elemRefs": [
                                    "id4",
                                    "id8",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id25",
                        "name": "Customer contact",
                        "lanes": [
                            {
                                "id": "id26",
                                "name": "Customer contact",
                                "elemRefs": [
                                    "id5",
                                    "id7",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id27",
                        "name": "Finance",
                        "lanes": [
                            {
                                "id": "id28",
                                "name": "Finance",
                                "elemRefs": [
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id13",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id16",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "name": "Rejected"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "name": "Accepted"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "name": "Not picked up"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id7",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id18",
                        "targetRef": "id6",
                        "name": "Picked up"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id6",
                        "targetRef": "id19"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id19",
                        "targetRef": "id7",
                        "name": "Two hours passed"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id19",
                        "targetRef": "id8",
                        "name": "Offer accepted"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the initiation of a loan application. The first step involves performing a BKR check and a Jane Doe check simultaneously. Once these checks are completed, the results are evaluated to confirm the credibility check.\n\nIf the application is rejected, a rejection letter is sent to the client, and the process ends there. If the application is accepted, the client is called. If the call is not picked up, the client is called again. Once the call is successfully picked up, a loan offer is created.\n\nThe loan offer is then sent to the client. If no response is received within two hours, a reminder is sent to the client. Once the client accepts the offer, the loan application is activated.\n\nThe activation is then validated, followed by the execution of the initial payment. After the initial payment is executed, a welcome letter is sent to the client. Finally, the documents are returned to the client, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Perform BKR Check",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Perform Jane Doe Check",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm Credibility Check",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Send Rejection Letter",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Call Client",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Create Loan Offer",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Send Loan Offer to Client",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Remind Client",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Activate Loan Application",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Validate Activation",
                        "type": "Manual"
                    },
                    {
                        "id": "id11",
                        "name": "Execute Initial Payment",
                        "type": "Manual"
                    },
                    {
                        "id": "id12",
                        "name": "Send Welcome Letter",
                        "type": "Manual"
                    },
                    {
                        "id": "id13",
                        "name": "Return Documents to Client",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "type": "Parallel"
                    },
                    {
                        "id": "id17",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Risk Management",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Risk Management",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id16",
                                    "id17"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Senior Risk Management",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Customer Contact",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Administration",
                                "elemRefs": [
                                    "id4",
                                    "id12",
                                    "id13"
                                ]
                            },
                            {
                                "id": "lane5",
                                "name": "Finance",
                                "elemRefs": [
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id16",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id1",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id17",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id3",
                        "targetRef": "id18"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id18",
                        "targetRef": "id4",
                        "condition": "rejected"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id18",
                        "targetRef": "id5",
                        "condition": "accepted"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id5",
                        "targetRef": "id5",
                        "condition": "call not picked up"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id5",
                        "targetRef": "id6",
                        "condition": "call picked up"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id8",
                        "targetRef": "id8",
                        "condition": "two hours passed, no response"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id8",
                        "targetRef": "id9",
                        "condition": "accepted offer received"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, after which the BKR check and the Jane Doe check are performed in parallel. Once both checks are completed, the credibility check is confirmed. \n\nFollowing the confirmation of the credibility check, an assessment is made. If the assessment is rejected, a rejection letter is sent to the client, and the process ends. If the assessment is accepted, the client is called to complement the information. \n\nIf the call is picked up, a loan offer is created and sent to the client. If the call is not picked up, the client is called again. \n\nAfter the loan offer is sent, a check is made to see if two hours have passed. If two hours have passed, a reminder is sent to the client. If the offer is received within two hours, the process continues with the receipt of the accepted offer. \n\nOnce the offer is accepted, a welcome letter is sent to the client. Following this, the loan application is activated, and the activation is validated. \n\nAfter validation, the initial payment is executed, and the documents are returned to the client. The process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Perform BKR check",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Perform Jane Doe check",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm credibility check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection letter",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Call client to complement information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create and send loan offer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send reminder to client",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Receive accepted offer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send welcome letter",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Activate loan application",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Validate activation",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Execute initial payment",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Return documents to client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "All checks completed?",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Assessment accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Call picked up?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Two hours passed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Loan Application Process",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Risk Management",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Administration",
                                "elemRefs": [
                                    "id4",
                                    "id9",
                                    "id13"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Customer Contact",
                                "elemRefs": [
                                    "id5",
                                    "id7"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Finance",
                                "elemRefs": [
                                    "id8",
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id15",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "rejected"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "accepted"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "call picked up"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "call not picked up"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "two hours passed"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id18",
                        "targetRef": "id8",
                        "condition": "offer received"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id13",
                        "targetRef": "id20"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "11_ground_truth.json": {
        "0": {
            "text": "The process begins with the program start event. The program is then started, followed by a prompt asking the user if they want to start the tutorial. \n\nIf the user chooses not to start the tutorial, the system proceeds with the standard key assignment. If the user chooses to start the tutorial, the tutorial on controller functions is run. \n\nAfter the tutorial is completed, the system checks if the user wants to start the game. If the user does not want to start the game, the process moves to the menu selection. If the user wants to start the game, the system proceeds to the next step.\n\nIn the menu selection, if the user chooses to continue the game, the game continues. If the user chooses to load a saved game, the game data is loaded. If the user chooses to start a new game, the system proceeds to the next step. If the user chooses to access game settings, the game is loaded.\n\nWhen proceeding to the next step, the system generates ambient noise and plays background music in parallel. After generating ambient noise and playing background music, the game is loaded.\n\nFinally, the user is prompted for input, and the process ends with the game beginning.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Start Program",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Ask to Start Tutorial",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Standard Key Assignment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Run Tutorial on Controller Functions",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Continue Game",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Load Game Data",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Proceed to Next Step",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Generate Ambient Noise",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Play Background Music",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Load Game",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Prompt User for Input",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "Program Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "Game Begins",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gid1",
                        "name": "Start Tutorial?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid2",
                        "name": "Tutorial Complete, Start Game?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid3",
                        "name": "Menu Selection",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid4",
                        "name": "Generate Ambient Noise and Play Music",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pid1",
                        "name": "AO-Software",
                        "lanes": [
                            {
                                "id": "lid1",
                                "name": "UI Selection",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "eid1",
                                    "gid1"
                                ]
                            },
                            {
                                "id": "lid2",
                                "name": "Player",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "eid2",
                                    "gid2",
                                    "gid3",
                                    "gid4"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "gid1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "gid1",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "gid1",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "gid2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "gid2",
                        "targetRef": "gid3",
                        "condition": "No"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "gid2",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "gid3",
                        "targetRef": "id5",
                        "condition": "Continue Game"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gid3",
                        "targetRef": "id6",
                        "condition": "Load Saved Game"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "gid3",
                        "targetRef": "id7",
                        "condition": "Start New Game"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "gid3",
                        "targetRef": "id10",
                        "condition": "Access Game Settings"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "gid4"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "gid4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "gid4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id11",
                        "targetRef": "eid2"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the program starting in the UI selection. The player is then prompted to start the program. Following this, the user is asked whether they want to start the tutorial. If the user chooses not to start the tutorial, the standard key assignment is applied. If the user opts to start the tutorial, the tutorial on controller functions begins. After the tutorial, the introduction is completed.\n\nNext, the user is given the option to either continue the game or load saved game data. If the user chooses to continue the game, the game continues. If the user decides to load saved game data, the saved game data is retrieved and loaded. The game system retrieves the saved game data and loads the game.\n\nOnce the game is loaded, the user is prompted for input. The process then ends.\n\nIf the user chooses to start the game after the tutorial, a parallel setup is initiated where ambient noise is generated and background music is played. Both the ambient noise and background music are then integrated into the game system, and the game is loaded. The user is prompted for input, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Program start for the player",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Ask user to start tutorial",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Standard key assignment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Start tutorial on controller functions",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Complete introduction",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Continue game",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Load saved game data",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Retrieve saved game data",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Generate ambient noise",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Play background music",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Load game",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Prompt user for input",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Program start in UI selection",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "Process ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "User wants to start tutorial?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "name": "Next Step",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "name": "User continues game?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw4",
                        "name": "User chooses standard key assignment?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw5",
                        "name": "Parallel setup",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "AO-Software",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "UI selection",
                                "elemRefs": [
                                    "start",
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id12",
                                    "id13"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Game system",
                                "elemRefs": [
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "gw1",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "gw1",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "gw3",
                        "targetRef": "id6",
                        "condition": "Continue game"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gw3",
                        "targetRef": "id7",
                        "condition": "Load saved game"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "gw3",
                        "targetRef": "id3",
                        "condition": "Standard key assignment"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "gw3",
                        "targetRef": "id4",
                        "condition": "Start tutorial"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "gw4"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "gw4",
                        "targetRef": "gw5",
                        "condition": "Start game after tutorial"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "gw4",
                        "targetRef": "gw3",
                        "condition": "Return to menu selection"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "gw5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "gw5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id13",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the program starting in the UI selection. The first step is to start the program for the player. Following this, the user is asked if they want to start the tutorial. \n\nIf the user chooses not to start the tutorial, the process continues with the standard key assignment. If the user chooses to start the tutorial, the tutorial on controller functions begins. After the tutorial on controller functions, the introduction is completed.\n\nNext, the user is presented with game options. If the user chooses to continue the game, the game resumes from the last ended point. If the user chooses to load a saved game, the saved game data is retrieved. If the user chooses to start the tutorial, they are guided through the tutorial on controller functions. If the user chooses the standard key assignment, the process continues with the standard key assignment.\n\nIf the user is guided through the tutorial on controller functions, they are then asked if they want to start the game with the standard key assignment. If the user chooses to start the game with the standard key assignment, the process continues with the standard key assignment. If the user chooses not to start the game with the standard key assignment, the process returns to the game options.\n\nAfter the standard key assignment or the tutorial on controller functions, ambient noise is generated and background music is played in parallel. Once both the ambient noise and background music are generated and played, the game is loaded. After the game is loaded, the user is prompted for input, and the process ends with the game beginning.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Start program for player",
                        "type": "Service"
                    },
                    {
                        "id": "task2",
                        "name": "Ask if user wants to start tutorial",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Begin with standard key assignment",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Start tutorial on controller functions",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Complete introduction",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Choose game options",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Resume game from last ended point",
                        "type": "Service"
                    },
                    {
                        "id": "task8",
                        "name": "Retrieve saved game data",
                        "type": "Service"
                    },
                    {
                        "id": "task9",
                        "name": "Guide through tutorial on controller functions",
                        "type": "User"
                    },
                    {
                        "id": "task10",
                        "name": "Ask if user wants to start game with standard key assignment",
                        "type": "User"
                    },
                    {
                        "id": "task11",
                        "name": "Generate ambient noise",
                        "type": "Service"
                    },
                    {
                        "id": "task12",
                        "name": "Play background music",
                        "type": "Service"
                    },
                    {
                        "id": "task13",
                        "name": "Load game",
                        "type": "Service"
                    },
                    {
                        "id": "task14",
                        "name": "Prompt user for input",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent",
                        "name": "Program start in UI selection",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent",
                        "name": "Game begins",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Tutorial choice?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Game options",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Start game with standard key assignment?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway4",
                        "type": "Parallel"
                    },
                    {
                        "id": "gateway5",
                        "type": "Parallel"
                    },
                    {
                        "id": "gateway6",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "AO-Software",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "task3",
                        "condition": "No"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "task4",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task5",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway2",
                        "targetRef": "task7",
                        "condition": "Continue game"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway2",
                        "targetRef": "task8",
                        "condition": "Load saved game"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway2",
                        "targetRef": "task9",
                        "condition": "Start tutorial"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway2",
                        "targetRef": "task3",
                        "condition": "Standard key assignment"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task9",
                        "targetRef": "task10"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task10",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "gateway3",
                        "targetRef": "task3",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "gateway3",
                        "targetRef": "gateway2",
                        "condition": "No"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "task3",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "task9",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "gateway4",
                        "targetRef": "task11"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "gateway4",
                        "targetRef": "task12"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "task11",
                        "targetRef": "gateway5"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "task12",
                        "targetRef": "gateway5"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "gateway5",
                        "targetRef": "task13"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "task13",
                        "targetRef": "gateway6"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "gateway6",
                        "targetRef": "task14"
                    },
                    {
                        "id": "flow25",
                        "sourceRef": "task14",
                        "targetRef": "endEvent"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "39_ground_truth.json": {
        "0": {
            "text": "The process begins with the start of securing personnel development needs. The first step is to analyze employee data. Once the data is analyzed, three parallel activities are initiated: checking personnel capacity, determining capacity requirements, and identifying training opportunities.\n\nAfter these three tasks are completed, they converge, and the next step is to conduct employee interviews. Following the interviews, three parallel activities are considered: considering training requests, considering improvement suggestions, and allocating training.\n\nThese three activities then converge into a discussion with the department head. After the discussion, the next step is to organize training or continuing education. Finally, the competency profile is updated, and the process ends with the personnel development needs being secured.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze employee data",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check personnel capacity",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Determine capacity requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Identify training opportunities",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct employee interview",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Consider training request",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Consider improvement suggestions",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Allocate training",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Discuss with department head",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Organize training/continuing education",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Update competency profile",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Start securing personnel development needs",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Personnel development needs secured",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "SoKnow Process",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id14",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id14",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id14",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id16",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id16",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id16",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start of securing personnel development needs. The first step is to analyze employee data. Once the data is analyzed, three parallel tasks are initiated: checking personnel capacity, determining capacity requirements, and identifying training opportunities.\n\nAfter these tasks are completed, they converge, and the next step is to conduct employee interviews. Following the interviews, three parallel tasks are initiated: considering training requests, considering improvement suggestions, and allocating training.\n\nOnce these tasks are completed, they converge again, and the next step is to discuss the findings with the department head. After the discussion, the next step is to organize training or continuing education. Finally, the competency profile is updated, and the process ends with the personnel development needs being secured.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze employee data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check personnel capacity",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine capacity requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Identify training opportunities",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct employee interview",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Consider training request",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Consider improvement suggestions",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Allocate training",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Discuss with department head",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Organize training/continuing education",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Update competency profile",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start securing personnel development needs",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "Personnel development needs secured",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "type": "Parallel"
                    },
                    {
                        "id": "gateway2",
                        "type": "Parallel"
                    },
                    {
                        "id": "gateway3",
                        "type": "Parallel"
                    },
                    {
                        "id": "gateway4",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "HR Department",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gateway1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id2",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id3",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id4",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id5",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gateway3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "gateway3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id6",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id7",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id8",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "gateway4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id11",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the HR department securing personnel development needs. Following this, employee data is analyzed. \n\nNext, the process splits into three parallel tasks: checking personnel capacity, determining capacity requirements, and identifying training opportunities. \n\nOnce these tasks are completed, the process converges, and an employee interview is conducted. \n\nAfter the interview, the process splits again into three parallel tasks: considering training requests, considering improvement suggestions, and allocating training. \n\nThese tasks then converge into a discussion with the department head. \n\nFollowing the discussion, training or continuing education is organized. \n\nFinally, the competency profile is updated, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Secure personnel development needs",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Analyze employee data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check personnel capacity",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Determine capacity requirements",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Identify training opportunities",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct employee interview",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Consider training request",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Consider improvement suggestions",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Allocate training",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Discuss with department head",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Organize training/continuing education",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Update competency profile",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "type": "Parallel"
                    },
                    {
                        "id": "gw2",
                        "type": "Parallel"
                    },
                    {
                        "id": "gw3",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pid1",
                        "name": "HR Department",
                        "lanes": [
                            {
                                "id": "lid1",
                                "name": "HR",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "gw1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "gw1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "gw1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gw2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "gw3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "gw3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "gw3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id12",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "77_ground_truth.json": {
        "0": {
            "text": "The process begins when the robot at TAS AG initiates the task by clicking on 'Start'. Following this, the robot clicks on 'Format'. Next, the robot selects the option 'Show and hide'. After that, the robot clicks on 'Show sheet'. Finally, the robot presses the Enter key, which results in the datasheet being opened, marking the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Click on 'Start'",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Click on 'Format'",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Select option 'Show and hide'",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Click on 'Show sheet'",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Press Enter key",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent",
                        "name": "Datasheet Opened",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "TAS AG",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Robot",
                                "elemRefs": [
                                    "startEvent",
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "endEvent"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "endEvent"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when the robot at TAS AG initiates the task by clicking on 'Start'. Following this, the robot clicks on 'Format'. Next, the robot selects 'Show and hide' from the options. After that, the robot clicks on 'Show sheet'. Finally, the robot presses Enter, which results in the datasheet being opened, marking the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Click on 'Start'",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Click on 'Format'",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Select 'Show and hide'",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Click on 'Show sheet'",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Press Enter",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Datasheet opened",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id8",
                        "name": "TAS AG",
                        "lanes": [
                            {
                                "id": "id9",
                                "name": "Robot",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The robot opens the datasheet. Once the datasheet is opened, the robot clicks the Start button. Following this, the robot clicks the Format button. Next, the robot selects the Show and hide option. After that, the robot clicks the Show sheet button. Finally, the robot presses the Enter key, and the process concludes with the datasheet being opened.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Open datasheet",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Click Start",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Click Format",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Select Show and hide",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Click Show sheet",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Press Enter key",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Datasheet opened",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id9",
                        "name": "TAS AG",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Robot",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "21_ground_truth.json": {
        "0": {
            "text": "The process begins with the receipt of a new order at MyMuffin.\n\nOnce the order is received, three tasks are initiated in parallel: preparing the dough, setting up the delivery, and preparing the cooking paper.\n\nAfter the dough is prepared, the delivery is set up, and the cooking paper is ready, the next step is to prepare the muffins.\n\nOnce the muffins are prepared, they are cooked.\n\nAfter cooking, two tasks are initiated in parallel: initiating the payment process and dispatching the muffins.\n\nFinally, the process concludes with the end of Phase 3, marking the completion of both the payment process and the dispatch of the muffins.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Preparing the dough",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Setting up the delivery",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Preparing the cooking paper",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare muffins",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Cook muffins",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Initiate payment process",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch muffins",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Receipt of new order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End of Phase 3",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Phase 1 tasks completed",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "MyMuffin",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Operations",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an order is received at MyMuffin. \n\nUpon receiving the order, three tasks are initiated in parallel: preparing the dough, setting up the delivery, and preparing the cooking paper. \n\nOnce these tasks are completed, the process converges, and the next step is to prepare the muffins. \n\nAfter the muffins are prepared, they are cooked. \n\nFollowing the cooking of the muffins, the process diverges again into two parallel tasks: initiating the payment process and dispatching the muffins. \n\nOnce both the payment process is initiated and the muffins are dispatched, the process converges again and ends with the phase 3 ending.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare dough",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Set up delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare cooking paper",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Cook muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Initiate payment process",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch muffins",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Order received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Phase 3 ended",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Phase 1 start",
                        "type": "Parallel"
                    },
                    {
                        "id": "gateway2",
                        "name": "Phase 1 end",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Phase 3 start",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway4",
                        "name": "Phase 3 end",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "MyMuffin",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Operations",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "event1",
                                    "event2",
                                    "gateway1",
                                    "gateway2",
                                    "gateway3",
                                    "gateway4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "gateway1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gateway1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id1",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id2",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id3",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id5",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gateway3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id6",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id7",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "gateway4",
                        "targetRef": "event2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the receipt of a new order. Upon receiving the order, three tasks are initiated in parallel: preparing the dough, setting up the delivery, and preparing the cooking paper. Once these three tasks are completed, the process continues with the preparation of the muffins. After the muffins are prepared, they are cooked. Following the cooking of the muffins, two tasks are carried out in parallel: initiating the payment process and dispatching the muffins. The process concludes with the end of phase 3, which is reached after both the payment process is initiated and the muffins are dispatched.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare dough",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Set up delivery",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare cooking paper",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare muffins",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Cook muffins",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Initiate payment process",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch muffins",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Receipt of new order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End of phase 3",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Phase 1 Tasks",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "47_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event, after which the purchasing team defines the requirements. Once the requirements are defined, the team selects the licenses. \n\nNext, there is a decision point to determine if the system has executed the license purchase. If the system has executed the purchase, the process proceeds with the system performing the license purchase. If the system has not executed the purchase, the system tests the license purchase instead. \n\nRegardless of the outcome of the decision, the process continues in parallel. The purchasing team agrees on framework contracts and then creates the license purchase agreement. Simultaneously, the system provides the license purchase contract data and updates the contract information. \n\nAfter the contract information is updated, the purchasing team places the order. Following the order placement, the team performs the final delivery acceptance and reviews the framework agreements. The system then updates the system, and the process ends with the license being purchased.\n\nIn parallel, after the system executes the license purchase, it forwards the payment. The system then sends a payment execution message to the accounting/controlling team, which marks the payment as executed, ending this parallel path.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Define requirements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select licenses",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "License purchase",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Test license purchase",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Agree on framework contracts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create license purchase agreement",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Provide license purchase contract data",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Update contract information",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Place order",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Final delivery acceptance",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Review framework agreements",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Update system",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Forward payment",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Send payment execution message to Accounting/Controlling",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "License purchased",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Payment executed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "System executed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id20",
                        "name": "Purchasing Team",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Purchasing Tasks",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5",
                                    "id6",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id22",
                        "name": "System",
                        "lanes": [
                            {
                                "id": "id23",
                                "name": "System Tasks",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id7",
                                    "id8",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id24",
                        "name": "Accounting/Controlling",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Accounting Tasks",
                                "elemRefs": [
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id18",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id18",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id19",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id19",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id12",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id14",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id14",
                        "targetRef": "id22"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the start event, where the requirements are defined. Following this, licenses are selected. The system is then checked to see if it has been executed. \n\nAt this point, a decision is made. If the system has been executed, a license is purchased. If the system has not been executed, a test license is purchased. \n\nRegardless of the decision, the next step is to agree on framework contracts. After agreeing on the framework contracts, a license purchase agreement is created. \n\nThe license purchase contract data is then provided, which leads to two parallel actions: updating the contract information and placing the order. \n\nOnce the order is placed, the final acceptance of delivery is conducted. Following this, the framework agreements are reviewed, and the system is updated. \n\nAfter updating the contract information, payment is forwarded. This is followed by sending a message to Accounting/Controlling. \n\nThe process concludes with the license being purchased and the payment executed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Define requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Select licenses",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Check if system has been executed",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Purchase license",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Purchase test license",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Agree framework contracts",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Create license purchase agreement",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Provide license purchase contract data",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Update contract information",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Place order",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Final acceptance of delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Review framework agreements",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Update system",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Forward payment",
                        "type": "Task"
                    },
                    {
                        "id": "id15",
                        "name": "Send message to Accounting/Controlling",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "License purchased and payment executed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id18",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id18",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id14",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id9",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start of the process by the Purchasing Team. The first step is to define the requirements. Once the requirements are defined, the next step is to select the licenses. After selecting the licenses, the system execution is checked.\n\nAt this point, a decision is made on whether the system has been executed. If the system has been executed, the process continues with the purchase of the license. If the system has not been executed, a test license is bought instead.\n\nRegardless of the decision, the next step is to agree on framework contracts. Following this, a license purchase agreement is created. The process then diverges into two parallel tasks: providing license purchase contract data and updating contract information.\n\nOnce the license purchase contract data is provided, an order is placed. After placing the order, the final acceptance of delivery is performed. The framework agreements are then reviewed, and the system is updated. The process concludes with the end of the process.\n\nAdditionally, there is a service task to forward payment, which sends a message to the Accounting/Controlling department, and this also leads to the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Define requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Select licenses",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Check system execution",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Purchase license",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Buy test license",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Agree on framework contracts",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Create license purchase agreement",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Provide license purchase contract data",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Update contract information",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Place order",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Final acceptance of delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Review framework agreements",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Update system",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Forward payment",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Send message to Accounting/Controlling department",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Start process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "End process",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Has system been executed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id19",
                        "name": "Purchasing Team",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Primary Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id17",
                                    "id18"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id18",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id18",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id37",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "15_ground_truth.json": {
        "0": {
            "text": "The process begins when a request is made to support at Hochschule Mainz Support.\n\nFirst, the support team receives the ticket.\n\nNext, they determine if customer participation is required.\n\nIf customer participation is required, the support team contacts the customer and conducts a detailed interview.\n\nAfter the interview, they connect to the client and solve the problem together.\n\nThey then check if further information is needed.\n\nIf further information is needed, they ask the customer for more details and then solve the problem again.\n\nIf no further information is needed, they proceed to solve the problem directly.\n\nOnce the problem is solved, the support team creates notes for documentation.\n\nFinally, they send a confirmation, and the process ends with the problem being solved.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive Ticket",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Determine Customer Participation",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Contact Customer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct Detailed Interview",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Connect to Client",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Solve Problem Together",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Ask for Further Information",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Solve Problem Again",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Solve Problem",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Create Notes for Documentation",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send Confirmation",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Request to Support",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Problem Solved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Customer Participation Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Further Information Needed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Hochschule Mainz Support",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Support Team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Customer",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id14",
                        "targetRef": "id3",
                        "conditionExpression": "yes"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id14",
                        "targetRef": "id9",
                        "conditionExpression": "no"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id15",
                        "targetRef": "id7",
                        "conditionExpression": "yes"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "conditionExpression": "no"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a ticket is received by the support team at Hochschule Mainz Support.\n\nThe next step is to determine if customer participation is necessary.\n\nIf customer participation is necessary, the customer is contacted.\n\nFollowing this, an interview is conducted with the customer.\n\nAfter the interview, the support team connects to the client.\n\nThe problem is then solved with the customer's involvement.\n\nIf further information is needed, the support team asks the customer for more information and then continues to solve the problem with the customer.\n\nIf no further information is needed, the problem is solved directly.\n\nIf customer participation is not necessary, the problem is solved without the customer's involvement.\n\nOnce the problem is solved, documentation notes are created.\n\nFinally, a completion confirmation is sent, and the process ends with the problem being solved, either with or without the customer's involvement.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive Ticket",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Determine if Customer Participation is Necessary",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Contact Customer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct Interview",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Connect to Client",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Solve Problem with Customer",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Ask for Further Information",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Solve Problem",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Create Documentation Notes",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Send Completion Confirmation",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Solve Problem without Customer",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id_start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id_end1",
                        "name": "Problem Solved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id_end2",
                        "name": "Problem Solved without Customer",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id_gateway1",
                        "name": "Customer Participation Necessary?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id_gateway2",
                        "name": "Further Information Needed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id_pool1",
                        "name": "Hochschule Mainz Support",
                        "lanes": [
                            {
                                "id": "id_lane1",
                                "name": "Support Team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id_start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id_gateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id_gateway1",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id_gateway1",
                        "targetRef": "id11",
                        "condition": "no"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "id_gateway2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id_gateway2",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id_gateway2",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id11",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id10",
                        "targetRef": "id_end1"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id10",
                        "targetRef": "id_end2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a request is made to support at Hochschule Mainz.\n\nFirst, the ticket is received by customer support.\n\nNext, it is determined whether customer participation is necessary.\n\nIf customer participation is necessary, the customer is contacted.\n\nFollowing this, a detailed interview is conducted with the customer.\n\nAfter the interview, a connection to the client is established.\n\nThen, the problem is solved with the customer.\n\nIt is then assessed whether further information is needed.\n\nIf further information is needed, additional information is requested from the customer.\n\nOnce the additional information is received, the problem is solved.\n\nIf customer participation is not necessary, the problem is solved directly.\n\nAfter solving the problem, notes for documentation are created.\n\nFinally, a confirmation of ticket completion is sent, and the process ends with the problem being solved.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive ticket",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Contact customer",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct detailed interview",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Connect to client",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Solve problem with customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Ask for further information from customer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Solve problem",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Create notes for documentation",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Send confirmation of ticket completion",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Request to support",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Problem solved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Further Information Needed",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Customer participation necessary?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Further information needed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "Hochschule Mainz",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Customer Support",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "73_ground_truth.json": {
        "0": {
            "text": "The process begins with the start of the process. The user logs in, and their request is determined. Based on the user's request, the process follows different paths.\n\nIf the user wants to extend media, the process for extending media is started, and the process ends with a confirmation that the media has been extended.\n\nIf the user does not want to extend media, the medium is returned, and the process ends with the medium being returned.\n\nIf the user wants to borrow a medium, they select the desired medium, and a search for the medium is conducted in the database. If the medium is available, the user is identified, and the medium is lent to them, ending the process with the medium being lent.\n\nIf the medium is not available, a message is sent to the library user, and the process checks whether the loan receives confirmation or rejection. If the loan receives confirmation, the reservation process is started, and the process ends with the reservation process being started. If the loan receives rejection, the process ends with the lending process being aborted.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log in user",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Determine user's request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Start process for extending media",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Return medium",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Select desired medium",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Search medium in database",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Identify user",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Lend medium",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send message to library user",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Start reservation process",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start Process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End Process - Media Extended Confirmation",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End Process - Medium Returned",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "End Process - Medium Lent",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "End Process - Reservation Process Started",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "End Process - Lending Process Aborted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Check user's request",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Medium available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Loan receives confirmation or rejection",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "User wants to extend media"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "condition": "User does not want to extend media"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "User wants to borrow a medium"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "Medium available"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id18",
                        "targetRef": "id9",
                        "condition": "Medium not available"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id19",
                        "targetRef": "id10",
                        "condition": "Loan receives confirmation"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id10",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id19",
                        "targetRef": "id16",
                        "condition": "Loan receives rejection"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start of the loan process. The first step is to log in the user. Once the user is logged in, the next step is to determine the user's request.\n\nAt this point, the process diverges based on the user's request. If the user wants to extend media, the process checks if the media can be extended. If the media can be extended, the media extension process is initiated, and the process ends with a media extended confirmation. If the media cannot be extended, the process ends with the return of the medium.\n\nIf the user wants to borrow a medium, the process proceeds to select the desired medium. The system then searches for the medium in the database. If the medium is available, the user is identified, and the medium is lent to the user. The process ends with the end of the loan process. If the medium is not available, an unavailable message is sent to the non-HTW library user, and the process ends with the end of the loan process.\n\nIf the user wants to reserve a medium, the process checks if the reservation can be made. If the reservation can be made, the user receives a loan confirmation, and the process ends with the reservation process started. If the reservation cannot be made, the process is aborted, and it ends with the aborted loan process.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Log in user",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Determine user request",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Initiate media extension process",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Select desired medium",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Search medium in database",
                        "type": "Service"
                    },
                    {
                        "id": "task6",
                        "name": "Identify user",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Lend medium",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Send unavailable message to non-HTW library user",
                        "type": "Service"
                    },
                    {
                        "id": "task9",
                        "name": "Receive loan confirmation",
                        "type": "User"
                    },
                    {
                        "id": "task10",
                        "name": "Aborted lending process",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start Loan Process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_extend_media",
                        "name": "Media Extended Confirmation",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "end_return_medium",
                        "name": "Return of Medium",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "end_borrow",
                        "name": "End Loan Process",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "end_reserve",
                        "name": "Reservation Process Started",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "end_abort",
                        "name": "Aborted Loan Process",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "User Request?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Extend Media?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Borrow Medium?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway4",
                        "name": "Medium Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway5",
                        "name": "Reserve Medium?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "gateway2",
                        "name": "Extend Media"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "gateway3",
                        "name": "Borrow Medium"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway1",
                        "targetRef": "gateway5",
                        "name": "Reserve Medium"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway2",
                        "targetRef": "task3",
                        "name": "Yes"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway2",
                        "targetRef": "end_return_medium",
                        "name": "No"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task3",
                        "targetRef": "end_extend_media"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway3",
                        "targetRef": "task4",
                        "name": "Yes"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway3",
                        "targetRef": "end_return_medium",
                        "name": "No"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task5",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "gateway4",
                        "targetRef": "task6",
                        "name": "Yes"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "gateway4",
                        "targetRef": "task8",
                        "name": "No"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "task8",
                        "targetRef": "end_borrow"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "task6",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "task7",
                        "targetRef": "end_borrow"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "gateway5",
                        "targetRef": "task9",
                        "name": "Yes"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "gateway5",
                        "targetRef": "task10",
                        "name": "No"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "task9",
                        "targetRef": "end_reserve"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "task10",
                        "targetRef": "end_abort"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a user logs in. After logging in, the user's request is determined. If the user wants to extend the media, the process for extending the media is initiated, and the process ends with the media being extended.\n\nIf the user wants to borrow a medium, they select the desired medium, which is then searched in the database. If the medium is available, the user is identified, and the medium is lent to them, ending the process.\n\nIf the medium is not available, an unavailability message is sent. The user then decides whether they want to reserve the medium or not. If the user wants to reserve the medium, the reservation is confirmed, and the reservation process is started, ending the process.\n\nIf the user does not want to reserve the medium, the process is aborted. Additionally, if the loan receives a rejection, the lending process is aborted, and the process ends.\n\nIf the user wants to return the medium, the medium is returned, and the process ends with the medium being returned.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log in user",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Determine user request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Initiate process for extending media",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Return the medium",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Select desired medium",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Search medium in database",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Identify user",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Lend medium",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send unavailability message",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Confirm reservation",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Start reservation process",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Abort lending process",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "Media extended",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "eid3",
                        "name": "Medium returned",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "eid4",
                        "name": "Process ends",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "eid5",
                        "name": "Process aborted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gid1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid5",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "gid1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "gid1",
                        "targetRef": "id3",
                        "condition": "User wants to extend media"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "eid2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "gid1",
                        "targetRef": "gid2",
                        "condition": "User wants to borrow medium"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "gid1",
                        "targetRef": "id4",
                        "condition": "User wants to return medium"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "eid3"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "gid2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "gid3"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "gid3",
                        "targetRef": "id7",
                        "condition": "Medium available"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "gid3",
                        "targetRef": "id9",
                        "condition": "Medium not available"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id8",
                        "targetRef": "eid4"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id9",
                        "targetRef": "gid4"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "gid4",
                        "targetRef": "id10",
                        "condition": "User wants to reserve medium"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "gid4",
                        "targetRef": "eid5",
                        "condition": "User does not want to reserve medium"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id11",
                        "targetRef": "eid4"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "gid4",
                        "targetRef": "id12",
                        "condition": "Loan receives rejection"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id12",
                        "targetRef": "eid5"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "24_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event, indicating the initiation of the content review process.\n\nFirst, the marketing department analyzes the current content.\n\nOnce the analysis is complete, the development department reviews the current content.\n\nFollowing the review, the development department designs and updates the content as necessary.\n\nAfter the design and update, the process splits into two parallel paths. One path involves the development department permanently updating the content, which leads to the website being up-to-date.\n\nSimultaneously, the marketing department evaluates the content.\n\nBased on the evaluation, an exclusive decision is made. If the evaluation is positive, the marketing department informs management, and the process concludes with the website currently needing no improvements.\n\nIf the evaluation is negative, the process loops back to the development department to review the current content again, ensuring continuous improvement and updates.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Analyze current content",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Review current content by development",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Design and update content by development",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Permanently update content",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Evaluate content",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Inform management",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Website up-to-date",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Website currently needing no improvements",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "type": "Parallel"
                    },
                    {
                        "id": "gateway2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "SoKnow Processes",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "task1",
                                    "task5",
                                    "task6"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Development Department",
                                "elemRefs": [
                                    "task2",
                                    "task3",
                                    "task4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task3",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway1",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task4",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task5",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway2",
                        "targetRef": "task6",
                        "condition": "Positive evaluation"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task6",
                        "targetRef": "event3"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway2",
                        "targetRef": "task2",
                        "condition": "Negative evaluation"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the marketing department at SoKnow analyzing the current content. Once the analysis is complete, the development department reviews the content. Following the review, the development department designs new content and updates the existing content. This updated content is then permanently updated on the website.\n\nAfter the content is updated, the process splits into two parallel paths. One path involves the marketing department evaluating the content, while the other path leads directly to the end event where the website is updated.\n\nIf the content is positively evaluated, the marketing department informs management, and the process ends with the conclusion that the website needs no improvements. If the content is negatively evaluated, the process loops back to the development department to review the content again, ensuring continuous improvement until the content meets the required standards.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze current content",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review content",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Design new content and update existing content",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Permanently update content",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Evaluate content",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform Management",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Website updated",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Website needs no improvements",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Evaluate content parallel",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Content positively evaluated?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id7",
                                    "id6"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Development Department",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "positive"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "negative"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the website is identified as outdated. The marketing department starts by analyzing the current content. Once the analysis is complete, the development department reviews the content. Following the review, the development department designs new content and updates the existing content. \n\nAfter the design and update, the process splits into parallel tasks. The development department updates the content permanently, while the marketing department evaluates the content. If the content is updated permanently, the process ends with the website being up-to-date.\n\nIf the marketing department's evaluation leads to a positive outcome, the management is informed, and the process ends with the conclusion that the website needs no improvements. However, if the evaluation is negative, the content review is repeated by the development department, and the process continues from there.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Analyze current content",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Review content",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Design new content and update existing content",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Update content permanently",
                        "type": "Service"
                    },
                    {
                        "id": "task5",
                        "name": "Evaluate content",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Inform management",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Website outdated",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Website up-to-date",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Website needs no improvements",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Parallel Tasks",
                        "type": "Parallel"
                    },
                    {
                        "id": "gateway2",
                        "name": "Evaluate outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "SoKnow Process",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "task1",
                                    "task5"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Development Department",
                                "elemRefs": [
                                    "task2",
                                    "task3",
                                    "task4"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Management",
                                "elemRefs": [
                                    "task6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task3",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway1",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task4",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task5",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway2",
                        "targetRef": "task6",
                        "condition": "Positive evaluation"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task6",
                        "targetRef": "event3"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway2",
                        "targetRef": "task2",
                        "condition": "Negative evaluation"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "9_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event, which triggers the opening of the application process by the student.\n\nNext, the student conducts the application.\n\nOnce the application is conducted, the Department of Admission and Enrollment accepts the applications and provides the applicant files.\n\nThe WI Selection Committee then checks the eligibility of the applicants.\n\nFollowing the eligibility check, the Department of Admission and Enrollment evaluates the results of the admission test and selects applicants for admission.\n\nThe selected applicants then accept their admission.\n\nAfter the acceptance, the Department of Admission and Enrollment enrolls the students and sends the enrollment documents.\n\nThe process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Open application process",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Accept applications and provide applicant files",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check eligibility of applicants",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Evaluate results of admission test and select applicants for admission",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Accept admission",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Enroll students and send enrollment documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id10",
                        "name": "University",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Student",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id12",
                                "name": "Department of Admission and Enrollment",
                                "elemRefs": [
                                    "id3",
                                    "id5",
                                    "id7"
                                ]
                            },
                            {
                                "id": "id13",
                                "name": "WI Selection Committee",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start of the application process. The student conducts the application. Once the application is conducted, the Department of Admission and Enrollment accepts the applications and provides applicant files. The WI Selection Committee then checks the eligibility of the applicants. After checking eligibility, the Department of Admission and Enrollment evaluates the results and selects the applicants who will be admitted. The student then accepts the admission. Following the acceptance of admission, the Department of Admission and Enrollment enrolls the students and sends the enrollment documents. The process concludes with the completion of the application process.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conduct the application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Accept the applications and provide applicant files",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check eligibility of the applicants",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Evaluate results and select applicants who will be admitted",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Accept the admission",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Enroll the students and send enrollment documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start application process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Application process completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id9",
                        "name": "Student",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Student Activities",
                                "elemRefs": [
                                    "id1",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id11",
                        "name": "Department of Admission and Enrollment",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Department Processes",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "WI Selection Committee",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Eligibility Checking",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start of the application process. The student conducts the application, after which the Department of Admission and Enrollment accepts the applications and provides the applicant files. The WI Selection Committee then checks the eligibility of the applicants. Following this, the Department of Admission and Enrollment evaluates the admission test results and selects the applicants. The student then accepts the admission. Finally, the Department of Admission and Enrollment enrolls the students and sends the enrollment documents, completing the application process.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conducts the application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Accept applications and provide applicant files",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check eligibility of applicants",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Evaluate admission test results and select applicants",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Accept admission",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Enroll students and send enrollment documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start application process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Application process completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id9",
                        "name": "University Admission Process",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Student",
                                "elemRefs": [
                                    "id1",
                                    "id5"
                                ]
                            },
                            {
                                "id": "id11",
                                "name": "Department of Admission and Enrollment",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id12",
                                "name": "WI Selection Committee",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event. The first step is to verify the request. Once the request is verified, it is sent for request handling. The order is then received by the 1st Level Support, who logs and categorizes the request. \n\nNext, an authorization check is performed. If the request is authorized, it proceeds to request monitoring and escalation. If the request is not authorized, it loops back to the verification step.\n\nAfter the request monitoring and escalation, the process continues in parallel with the request model execution by the Service Request Fulfillment Group and the request monitoring and escalation by the Incident Manager. These parallel tasks are then merged.\n\nFollowing the merge, the request closure and evaluation take place. A decision is then made to check if there is a problem. If there is no problem, the process moves to request fulfillment support, and the process ends successfully. If there is a problem, the Incident Manager is contacted, and the process ends with a problem.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Verify Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Order for Request Handling",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Log and Categorize Request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Request Monitoring and Escalation",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Request Model Execution",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Request Closure and Evaluation",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Request Fulfillment Support",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Contact Incident Manager",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End Event Success",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End Event Problem",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Authorized?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Merge",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "name": "Problem?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Request Fulfillment Process",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Incident Manager",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id9"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "1st Level Support",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id8"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Service Request Fulfillment Group",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id13",
                        "targetRef": "id5",
                        "condition": "authorized"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id13",
                        "targetRef": "id1",
                        "condition": "not authorized"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id15",
                        "targetRef": "id8",
                        "condition": "no problem"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "problem"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step is to verify the request. Once the request is verified, an order is sent for request handling. The order is then received, and the request is logged and categorized.\n\nNext, it is determined whether the request is authorized. If the request is not authorized, the process loops back to verify the request again. If the request is authorized, it proceeds to either request monitoring and escalation or request model execution.\n\nBoth the request monitoring and escalation and the request model execution tasks lead to a point where the tasks are merged. Following this, the request closure and evaluation take place.\n\nAfter the request closure and evaluation, it is checked if there is a problem with the request. If there is no problem, the process continues to request fulfillment support, which leads to a successful end. If there is a problem, the incident manager is contacted about the problem, and the process ends with a problem.",
            "model": {
                "tasks": [
                    {
                        "id": "id2",
                        "name": "Verify Request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send Order for Request Handling",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Receive Order",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Log and Categorize Request",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Request Monitoring and Escalation",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Request Model Execution",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Request Closure and Evaluation",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Request Fulfillment Support",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Contact Incident Manager About Problem",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id1",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Tasks Merged",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Problem with Request?",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Successful End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "End With Problem",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "name": "Authorized?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Check Problem",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id6",
                        "targetRef": "id2",
                        "condition": "No"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id6",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id6",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id11",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id11",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, after which the request is verified. If the request is authorized, it is sent for request handling. The order is then received and subsequently logged and categorized. If the request is not authorized, it loops back to the verification step.\n\nOnce the request is logged and categorized, it is monitored and escalated if necessary. Following this, the request model is executed. After execution, the process reaches a merge point where it proceeds to request closure and evaluation.\n\nAt this stage, the process checks if there is a problem with the request. If there is no problem, the request fulfillment support is provided, and the process ends successfully. If there is a problem, the incident manager is contacted, and the process ends with a problem.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Verify Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send for Request Handling",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Log and Categorize Request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Request Monitoring and Escalation",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Request Model Execution",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Request Closure and Evaluation",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Request Fulfillment Support",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Contact Incident Manager",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Successful End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End with Problem",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Request Authorized?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Merge Point",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "name": "Problem with Request?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Incident Management",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Incident Manager",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id9"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "1st Level Support",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Service Request Fulfillment Group",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id13",
                        "targetRef": "id1",
                        "condition": "Not Authorized"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id13",
                        "targetRef": "id5",
                        "condition": "Authorized"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id15",
                        "targetRef": "id8",
                        "condition": "No Problem"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "Problem"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "38_ground_truth.json": {
        "0": {
            "text": "The process begins when a customer selects and buys goods online. Following this, the finance department checks if a creditworthiness check is required. If a credit check is required, the finance department requests credit check information and then assesses the customer's creditworthiness. If the customer is not creditworthy, the finance department informs the customer about the rejection, and the process ends. If the customer is creditworthy, or if no credit check is required, the finance department informs the warehouse about the need for shipping. The warehouse then checks the item availability in stock. If the item is not in stock, the warehouse reorders the item and checks the item availability again. If the item is in stock, the warehouse packs and ships the item. Finally, the customer receives a purchase and shipping confirmation, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Customer selects and buys goods online",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Finance department checks if a creditworthiness check is required",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Request credit check information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assess creditworthiness",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Inform customer about rejection",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform warehouse about shipping",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check item availability in stock",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Reorder item",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Pack and ship item",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send purchase and shipping confirmation to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Credit check required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Creditworthy?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Item in stock?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Customer Actions",
                                "elemRefs": [
                                    "id1",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id19",
                        "name": "Finance Department",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Credit Check",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id21",
                        "name": "Warehouse",
                        "lanes": [
                            {
                                "id": "id22",
                                "name": "Shipping and Inventory",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "Not Creditworthy"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "Creditworthy"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id14",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id16",
                        "targetRef": "id8",
                        "condition": "Not in stock"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id16",
                        "targetRef": "id9",
                        "condition": "In stock"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a customer selects and buys goods online. After the purchase, it is checked if a creditworthiness check is required. If a credit check is needed, the necessary information is requested from the customer. Once the information is received, the customer's creditworthiness is assessed. If the customer is deemed creditworthy, the warehouse is informed about the shipping. If the customer is not creditworthy, the customer is informed about the rejection, and the process ends.\n\nIf no credit check is needed, the warehouse is directly informed about the shipping. The warehouse then checks the item availability. If the item is available, it is packed and shipped, and the process ends with a purchase and shipping confirmation. If the item is not available, the item is reordered, and the availability is checked again. This loop continues until the item becomes available, at which point it is packed and shipped, concluding the process with a purchase and shipping confirmation.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select and Buy Goods Online",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check if Creditworthiness Check is Required",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Request Necessary Information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assess Creditworthiness",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Inform Warehouse About Shipping",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform Customer About Rejection",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check Item Availability",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Reorder Item",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Pack and Ship Item",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Purchase and Shipping Confirmation",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Is Credit Check Needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Is Customer Creditworthy?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Is Item Available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "p1lane1",
                                "name": "Customer",
                                "elemRefs": [
                                    "id1"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p2",
                        "name": "Finance Department",
                        "lanes": [
                            {
                                "id": "p2lane1",
                                "name": "Finance",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p3",
                        "name": "Warehouse",
                        "lanes": [
                            {
                                "id": "p3lane1",
                                "name": "Warehouse",
                                "elemRefs": [
                                    "id5",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id13",
                        "targetRef": "id3",
                        "condition": "Credit Check Needed"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id13",
                        "targetRef": "id5",
                        "condition": "No Credit Check Needed"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "Customer Creditworthy"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id14",
                        "targetRef": "id6",
                        "condition": "Customer Not Creditworthy"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id15",
                        "targetRef": "id8",
                        "condition": "Item Not Available"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "Item Available"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the customer selecting and buying goods online. After the purchase, it is checked whether a creditworthiness check is required. If a credit check is needed, the necessary information for the credit check is requested. The finance department then assesses the creditworthiness of the customer. If the customer is not creditworthy, they are informed about the rejection. If the customer is creditworthy, the warehouse is informed about the shipping. If no credit check is needed, the warehouse is directly informed about the shipping.\n\nNext, the warehouse checks if the item is available in stock. If the item is not in stock, a reorder is triggered, and the availability is checked again. If the item is in stock, it is packed and shipped. Finally, the customer is sent a purchase and shipping confirmation, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select and buy goods online",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check if creditworthiness check is required",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Request necessary information for credit check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assess creditworthiness",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Inform warehouse about shipping",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform customer about rejection",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check if item is available in stock",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Trigger reorder",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Pack and ship item",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send purchase and shipping confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "id17",
                        "name": "Finance Department",
                        "lanes": []
                    },
                    {
                        "id": "id18",
                        "name": "Warehouse",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id13",
                        "targetRef": "id3",
                        "condition": "Credit check needed"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id14",
                        "targetRef": "id6",
                        "condition": "Not creditworthy"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "Creditworthy"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id13",
                        "targetRef": "id5",
                        "condition": "No credit check needed"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id15",
                        "targetRef": "id8",
                        "condition": "Not in stock"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "In stock"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "22_ground_truth.json": {
        "0": {
            "text": "The process begins when a patient registers at the hospital.\n\nThe clerk first records the patient data.\n\nFollowing this, the process splits into three parallel tasks: registering the patient's SSN, registering the patient's name, and registering the patient's surname.\n\nOnce all three registration tasks are completed, the process converges.\n\nNext, the clerk prints the referral document.\n\nAfter printing, the record is archived in the file system.\n\nThe process concludes with the registration being completed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record patient data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register patient's SSN",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register patient's name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register patient's surname",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print referral document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Archive record in file system",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Patient registers",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Registration completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Parallel Gateway Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "Parallel Gateway Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Hospital",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Clerk",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the recording of patient data. Once the patient data is recorded, the process splits into three parallel tasks: registering the patient's SSN, registering the patient's name, and registering the patient's surname. These tasks are performed simultaneously. After all three registration tasks are completed, they converge back into a single flow. The next step is to print the referral document. Once the referral document is printed, the record is archived in the file system. The process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record patient data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register patient SSN",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register patient name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register patient surname",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print referral document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Archive record in file system",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Registration parallel tasks",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "Converge registration tasks",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a patient registers. The first step is to record the patient's data. Once the data is recorded, three tasks are initiated in parallel: registering the patient's SSN, registering the patient's name, and registering the patient's surname. \n\nAfter the SSN, name, and surname are registered, these tasks converge, and the next step is to print the referral document. Once the referral document is printed, the record is archived. The process concludes with the registration being completed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record Patient Data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register Patient SSN",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register Patient Name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register Patient Surname",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print Referral Document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Archive Record",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Patient Registers",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Registration Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "58_ground_truth.json": {
        "0": {
            "text": "The process begins when the annual meeting is upcoming at SoKnow.\n\nFirst, invitations are sent to employees by the management.\n\nFollowing this, the management leads the annual planning meeting, and employees participate in the annual planning meeting.\n\nDuring the meeting, the management conducts a review and discussion of the current strategy.\n\nAfter the review, the strategy is reformulated by the management.\n\nThe reformulated strategy is then communicated by the management.\n\nSimultaneously, employees align themselves with the new strategy.\n\nFinally, the management pursues the reformulated strategy, and the process concludes with the annual meeting upcoming.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send invitations to employees",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Lead annual planning meeting",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Participate in annual planning meeting",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct review and discussion of current strategy",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Reformulate strategy",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Align for strategy",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Communicate reformulated strategy",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Pursue reformulated strategy",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Annual meeting upcoming",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Annual meeting upcoming",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id11",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Management",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id7",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id13",
                                "name": "Employees",
                                "elemRefs": [
                                    "id3",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when the annual meeting is upcoming at SoKnow.\n\nFirst, the management sends out invitations for the annual planning meeting.\n\nOnce the invitations are sent, the management leads the annual planning meeting.\n\nDuring the meeting, employees participate actively.\n\nFollowing participation, the management conducts a review and discussion of the current strategy.\n\nSimultaneously, employees align themselves with the strategy.\n\nAfter the review and discussion, the management reformulates the strategy if necessary.\n\nBoth the management and employees then communicate the new strategy.\n\nFinally, the management pursues the strategy, and the process concludes with the annual meeting being completed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send invitations",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Lead annual planning meeting",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Participate in annual planning meeting",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct review and discussion of current strategy",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Reformulate strategy",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Align for strategy",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Communicate strategy",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Pursue strategy",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Annual meeting upcoming",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Annual meeting upcoming",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Management",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id7",
                                    "id8"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Employees",
                                "elemRefs": [
                                    "id3",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the annual meeting is upcoming at SoKnow. The management team starts by sending invitations to employees. Once the invitations are sent, the management leads the annual planning meeting. During this meeting, employees participate actively. Concurrently, the management conducts a review and discussion of the current strategy. Following this review, the strategy is reformulated by the management. The employees then align themselves with the reformulated strategy. After alignment, the management communicates the reformulated strategy to all relevant parties. Finally, the employees pursue the reformulated strategy, and the process concludes with the annual meeting ending.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Send invitations to employees",
                        "type": "Task"
                    },
                    {
                        "id": "task2",
                        "name": "Lead annual planning meeting",
                        "type": "Task"
                    },
                    {
                        "id": "task3",
                        "name": "Participate in annual planning meeting",
                        "type": "Task"
                    },
                    {
                        "id": "task4",
                        "name": "Conduct review and discussion of current strategy",
                        "type": "Task"
                    },
                    {
                        "id": "task5",
                        "name": "Reformulate strategy",
                        "type": "Task"
                    },
                    {
                        "id": "task6",
                        "name": "Align for the strategy",
                        "type": "Task"
                    },
                    {
                        "id": "task7",
                        "name": "Communicate reformulated strategy",
                        "type": "Task"
                    },
                    {
                        "id": "task8",
                        "name": "Pursue reformulated strategy",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Annual meeting upcoming",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Annual meeting ending",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Management",
                                "elemRefs": [
                                    "task1",
                                    "task2",
                                    "task4",
                                    "task5",
                                    "task7"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Employees",
                                "elemRefs": [
                                    "task3",
                                    "task6",
                                    "task8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task2",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task6",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task7",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task8",
                        "targetRef": "event2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "16_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event. The teacher activates the learning progress in selected objects. This is followed by displaying the status of the learning progress through color markings.\n\nSimultaneously, the student clicks on 'Learning Progress' for each object. This action leads to a decision point where it is determined whether the learning progress is set manually.\n\nIf the learning progress is set manually, the student sets the learning progress manually. If the learning progress is not set manually, the teacher sets the learning progress automatically.\n\nIn both cases, the status of the learning progress is displayed through color markings. Finally, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Activate learning progress in selected objects",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Click on 'Learning Progress' for each object",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Set learning progress manually",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Set learning progress automatically",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Display status of learning progress through color markings",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Learning progress set manually?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id9",
                        "name": "Learning Process",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Teacher",
                                "elemRefs": [
                                    "id1",
                                    "id4"
                                ]
                            },
                            {
                                "id": "id11",
                                "name": "Student",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id6",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step involves activating the learning progress in selected objects. Concurrently, the user clicks on 'Learning Progress' for each object. \n\nNext, the process checks whether the learning progress is set manually or automatically. If the learning progress is set manually, the user sets the learning progress manually. If it is set automatically, the user sets the learning progress automatically.\n\nAfter setting the learning progress, the status is displayed through color markings. \n\nFinally, the process evaluates the outcome. Depending on the outcome, the process ends with one of the following conditions: the course is not passed, the task is fully processed, the task is in progress, or the task is not started.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Activate learning progress in selected objects",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Click on 'Learning Progress' for each object",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Set learning progress manually",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Set learning progress automatically",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Display status through color markings",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Learning progress set manually or automatically?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id9",
                        "name": "Outcome?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id6",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id3",
                        "condition": "Manually"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id4",
                        "condition": "Automatically"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id7",
                        "condition": "Course not passed"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id9",
                        "targetRef": "id7",
                        "condition": "Task fully processed"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id9",
                        "targetRef": "id7",
                        "condition": "Task in progress"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id7",
                        "condition": "Task not started"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step is to activate the learning progress in the selected objects. \n\nNext, the status of the learning progress is displayed.\n\nSimultaneously, the user clicks on 'Learning Progress' for each object. \n\nFollowing this, a decision is made on whether the learning progress is set manually or automatically. \n\nIf the learning progress is set manually, the user sets the learning progress manually. \n\nIf the learning progress is set automatically, the user sets the learning progress automatically. \n\nIn both cases, after setting the learning progress, the status of the learning progress is displayed. \n\nFinally, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Activate learning progress in selected objects",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Click on 'Learning Progress' for each object",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Set learning progress manually",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Set learning progress automatically",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Display status of the learning progress",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Learning progress set manually or automatically?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id6",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id8",
                        "targetRef": "id3",
                        "condition": "manually"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id8",
                        "targetRef": "id4",
                        "condition": "automatically"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "70_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event in the service department. The first step is to record the customer application. Once the application is recorded, the order is then recorded. \n\nNext, the process moves to the finance department where the customer data is checked. An exclusive decision is made to determine if the data is correct. \n\nIf the data is correct, the process returns to the service department where the order is released. The released order is then received and further processed. After processing, the order is printed and subsequently forwarded, marking the end of the process with the order being forwarded.\n\nIf the data is incorrect, the order is rejected in the finance department. The customer is then informed about the rejection, and the process ends with the customer being informed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record Customer Application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Record Order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check Customer Data",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Release Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Reject Order",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform Customer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Receive and Further Process Order",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Print Processed Order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Forward Order",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End Inform Customer",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End Forward Order",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Data Correct?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Service Department",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Service",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Finance Department",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Finance",
                                "elemRefs": [
                                    "id3",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id13",
                        "targetRef": "id4",
                        "condition": "Correct"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id13",
                        "targetRef": "id5",
                        "condition": "Incorrect"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event in the service department. The first step is to record the customer application. Once the application is recorded, the next step is to record the order. After recording the order, the process moves to the finance department where the customer data is checked.\n\nAt this point, a decision is made to determine if the customer data is correct. If the data is correct, the order is released. The process then returns to the service department where the order is received and further processed. After processing the order, it is printed and then forwarded to the customer, concluding with the order being forwarded.\n\nIf the customer data is found to be incorrect, the customer is informed, and the process ends with the customer being informed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record customer application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Record order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check customer data",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Release order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Inform customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive and further process order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Print processed order",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Forward customer order",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end1",
                        "name": "Order Forwarded",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "end2",
                        "name": "Customer Informed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Is data correct?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Service Department",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Service",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Finance Department",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Finance",
                                "elemRefs": [
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "id4",
                        "condition": "Correct"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway1",
                        "targetRef": "id5",
                        "condition": "Incorrect"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id8",
                        "targetRef": "end1"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id5",
                        "targetRef": "end2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event in the service department of the finance department.\n\nFirst, the customer application is recorded.\n\nNext, the order is recorded.\n\nThe process then moves to the finance department, where the customer data is checked.\n\nAn exclusive decision is made based on the correctness of the customer data.\n\nIf the customer data is correct, the order is released in the service department.\n\nThe released order is then received and further processed.\n\nFollowing this, the order is printed.\n\nFinally, the customer order is forwarded, and the process ends.\n\nIf the customer data is incorrect, the customer is informed, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record customer application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Record order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check customer data",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Release order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Inform customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive and further process order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Print order",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Forward customer order",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "Pool1",
                        "name": "Finance Department",
                        "lanes": [
                            {
                                "id": "Lane1",
                                "name": "Service Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            },
                            {
                                "id": "Lane2",
                                "name": "Finance Department",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "Pool2",
                        "name": "Customer",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "correct"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "incorrect"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "69_ground_truth.json": {
        "0": {
            "text": "The process begins when a prescription is received at the pharmacy. The first step is to determine if the prescription is for the patient. If it is not, the process ends with the prescription being unfilled. If it is for the patient, the patient shows their Medicare card and prescriptions.\n\nNext, the pharmacist receives and checks the script details. The pharmacist then checks if the prescription is valid. If it is not valid, the process ends with the prescription being unfilled. If it is valid, the pharmacist opens and reviews the patient profile.\n\nThe pharmacist then checks if the patient is suspicious. If the patient is suspicious, the pharmacist contacts the GP for advice. The pharmacist then reviews the advice from the GP, and the process ends with the prescription being unfilled.\n\nIf the patient is not suspicious, the pharmacist checks the patient status. If the patient does not pass the status check, the pharmacist offers alternatives with a lower dosage. The pharmacist then checks if the patient agrees with the alternatives. If the patient does not agree, the process ends with the prescription being unfilled. If the patient agrees, the pharmacist adds a short memo.\n\nIf the patient passes the status check, the pharmacist selects the correct prescribed dosage. The pharmacist then checks the prescription inventory. If the medication is not in stock, the pharmacist informs the patient about alternatives, and the process ends with the prescription being unfilled. If the medication is in stock, the pharmacist double-checks and collects the correct drugs.\n\nNext, the system calculates the Medicare costs waivers and total fees. The system then prints and attaches labels with Consumer Medicine Information (CMI). The pharmacist provides counsel and recommendations to the patient. Finally, the pharmacist processes the payment, and the process ends with the prescription being dispensed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Show Medicare card and prescriptions",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive and check script details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Open and review patient profile",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check if patient is suspicious",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Contact GP for advice",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Review advice from GP",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check patient status",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Offer alternatives with lower dosage",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Add short memo",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Select correct prescribed dosage",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check prescription inventory",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Inform patient about alternatives",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Double-check and collect correct drugs",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Calculate Medicare costs waivers and total fees",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Print and attach labels with CMI",
                        "type": "Service"
                    },
                    {
                        "id": "id16",
                        "name": "Provide counsel and recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Process payment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id18",
                        "name": "Prescription received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Prescription unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Prescription dispensed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Is prescription for patient?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Is prescription valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Is patient suspicious?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Patient pass status check?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Patient agrees with alternatives?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Is medication in stock?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id27",
                        "name": "Pharmacy",
                        "lanes": [
                            {
                                "id": "id28",
                                "name": "Pharmacist",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id17"
                                ]
                            },
                            {
                                "id": "id29",
                                "name": "System",
                                "elemRefs": [
                                    "id14",
                                    "id15"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id18",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id21",
                        "targetRef": "id19",
                        "condition": "No"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id21",
                        "targetRef": "id1",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id22",
                        "targetRef": "id19",
                        "condition": "No"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id22",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id23",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id23",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id6",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id24",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id8",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id25",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id25",
                        "targetRef": "id19",
                        "condition": "No"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id24",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id11",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id26",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id26",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id17",
                        "targetRef": "id20"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when a prescription is received. The first step is to determine if the prescription is for the patient themselves. If the prescription is not for the patient, additional signatures are required, and the process ends there. If the prescription is for the patient, the patient shows their Medicare card and prescriptions.\n\nNext, the pharmacist receives and checks the script details. If the prescription is not valid, the process ends. If the prescription is valid, the pharmacist opens and reviews the patient profile and checks if the patient is suspicious.\n\nIf the patient is suspicious, the pharmacist contacts the GP for advice and receives advice or recommendations from the GP, ending the process there. If the patient is not suspicious, the pharmacist checks the patient's status in person.\n\nIf the status check does not pass, the pharmacist offers alternatives with a lower dosage level. If the patient agrees to the lower dosage, the pharmacist adds a short memo, and the process ends. If the patient does not agree, the process ends there.\n\nIf the status check passes, the pharmacist selects the correct prescribed dosage and checks the inventory. If the medication is out of stock, the pharmacist informs the patient about alternatives. If the medication is in stock, the pharmacist double-checks and collects the correct drugs.\n\nThe pharmacist then calculates Medicare costs waivers and total fees using the pharmacy information system. After that, the pharmacist prints and attaches labels with Consumer Medicine Information (CMI).\n\nThe patient then receives consultation and recommendations, pays the prescription fees, and the dispensing process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Show Medicare card and prescriptions",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive and check script details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Open and review patient profile",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check patient suspicious",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Contact GP for advice",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive advice/recommendation from GP",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check patient's status in person",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Offer alternatives with lower dosage level",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Add a short memo",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Select correct prescribed dosage and check inventory",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Inform patient about alternatives",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Double-check and collect correct drugs",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Calculate Medicare costs waivers and total fees",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Print and attach labels with Consumer Medicine Information (CMI)",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Receive consultation and recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Pay prescription fees",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Prescription received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_dispensing",
                        "name": "Dispensing process ends",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "intermediate_signature",
                        "name": "Additional signatures required",
                        "type": "IntermediateThrowEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Prescription for self?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "name": "Prescription valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "name": "Patient suspicious?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw4",
                        "name": "Status check passed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw5",
                        "name": "Patient agrees to lower dosage?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw6",
                        "name": "Medication in stock?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "patient_pool",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "patient_lane",
                                "name": "Patient Actions",
                                "elemRefs": [
                                    "id1",
                                    "id15",
                                    "id16"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pharmacy_pool",
                        "name": "Pharmacy",
                        "lanes": [
                            {
                                "id": "pharmacist_lane",
                                "name": "Pharmacist",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id14"
                                ]
                            },
                            {
                                "id": "system_lane",
                                "name": "Pharmacy Information System",
                                "elemRefs": [
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "seq1",
                        "sourceRef": "start",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "seq2",
                        "sourceRef": "gw1",
                        "targetRef": "intermediate_signature",
                        "conditionExpression": "prescription is not for the patient themself"
                    },
                    {
                        "id": "seq3",
                        "sourceRef": "intermediate_signature",
                        "targetRef": "end_signature_issue"
                    },
                    {
                        "id": "seq4",
                        "sourceRef": "gw1",
                        "targetRef": "id1",
                        "conditionExpression": "prescription is for the patient themself"
                    },
                    {
                        "id": "seq5",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "seq6",
                        "sourceRef": "id2",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "seq7",
                        "sourceRef": "gw2",
                        "targetRef": "end_invalid",
                        "conditionExpression": "prescription is not valid"
                    },
                    {
                        "id": "seq8",
                        "sourceRef": "gw2",
                        "targetRef": "id3",
                        "conditionExpression": "prescription is valid"
                    },
                    {
                        "id": "seq9",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "seq10",
                        "sourceRef": "id4",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "seq11",
                        "sourceRef": "gw3",
                        "targetRef": "id5",
                        "conditionExpression": "patient is suspicious"
                    },
                    {
                        "id": "seq12",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "seq13",
                        "sourceRef": "id6",
                        "targetRef": "end_advice"
                    },
                    {
                        "id": "seq14",
                        "sourceRef": "gw3",
                        "targetRef": "id7",
                        "conditionExpression": "patient is not suspicious"
                    },
                    {
                        "id": "seq15",
                        "sourceRef": "id7",
                        "targetRef": "gw4"
                    },
                    {
                        "id": "seq16",
                        "sourceRef": "gw4",
                        "targetRef": "id8",
                        "conditionExpression": "status check does not pass"
                    },
                    {
                        "id": "seq17",
                        "sourceRef": "id8",
                        "targetRef": "gw5"
                    },
                    {
                        "id": "seq18",
                        "sourceRef": "gw5",
                        "targetRef": "id9",
                        "conditionExpression": "patient agrees to lower dosage"
                    },
                    {
                        "id": "seq19",
                        "sourceRef": "id9",
                        "targetRef": "end_lower_dosage"
                    },
                    {
                        "id": "seq20",
                        "sourceRef": "gw5",
                        "targetRef": "end_disagree",
                        "conditionExpression": "patient does not agree"
                    },
                    {
                        "id": "seq21",
                        "sourceRef": "gw4",
                        "targetRef": "id10",
                        "conditionExpression": "status check passes"
                    },
                    {
                        "id": "seq22",
                        "sourceRef": "id10",
                        "targetRef": "gw6"
                    },
                    {
                        "id": "seq23",
                        "sourceRef": "gw6",
                        "targetRef": "id11",
                        "conditionExpression": "medication out of stock"
                    },
                    {
                        "id": "seq24",
                        "sourceRef": "gw6",
                        "targetRef": "id12",
                        "conditionExpression": "medication in stock"
                    },
                    {
                        "id": "seq25",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "seq26",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "seq27",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "seq28",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "seq29",
                        "sourceRef": "id16",
                        "targetRef": "end_dispensing"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a prescription is received at the NewTown Health Chemist. The pharmacist first receives the prescription and then determines if it is for a patient. If it is not for a patient, the process ends with the prescription unfilled. If it is for a patient, the pharmacist asks the patient to show their Medicare card and prescriptions.\n\nNext, the pharmacist receives and checks the script details. If the script is not valid, the process ends with the prescription unfilled. If the script is valid, the pharmacist opens and reviews the patient profile and views the prescription information.\n\nIf the prescription information appears suspicious, the pharmacist contacts the GP for advice. The GP provides advice, and the pharmacist confirms the decision. If the decision is to not proceed, the process ends with the prescription unfilled. If the prescription information is not suspicious, the pharmacist checks the patient's status.\n\nIf the status check is not passed, the pharmacist offers alternatives with a lower dosage. If the patient agrees to the alternatives, the pharmacist adds a short memo and proceeds to select the prescribed dosage and check inventory. If the patient does not agree, the process ends with the prescription unfilled. If the status check is passed, the pharmacist directly selects the prescribed dosage and checks inventory.\n\nIf the drugs are in stock, the pharmacist double-checks and collects the correct drugs. If the drugs are out of stock, the process ends with the prescription unfilled. The pharmacist then calculates Medicare cost waivers and total fees, prints and attaches labels with Consumer Medicine Information (CMI), and provides consultation and recommendation to the patient. Finally, the pharmacist processes the payment, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive prescription",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Show Medicare card and prescriptions",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive and check script details",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Open and review patient profile",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "View prescription info",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Contact GP for advice",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Receive doctor's advice",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Confirm decision",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check patient's status",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Offer alternatives with lower dosage",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Add a short memo",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Select prescribed dosage and check inventory",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Double-check and collect correct drugs",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Calculate Medicare costs waivers and total fees",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Print and attach labels with Consumer Medicine Information (CMI)",
                        "type": "Service"
                    },
                    {
                        "id": "id16",
                        "name": "Provide consultation and recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Process payment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event_start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event_end",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event_prescription_unfilled",
                        "name": "Prescription unfilled",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw6",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw7",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw8",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "NewTown Health Chemist Dispensing Process",
                        "lanes": [
                            {
                                "id": "lane_pharmacist",
                                "name": "Pharmacist",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id16",
                                    "id17"
                                ]
                            },
                            {
                                "id": "lane_system",
                                "name": "System",
                                "elemRefs": [
                                    "id14",
                                    "id15"
                                ]
                            }
                        ],
                        "events": [
                            "event_start",
                            "event_end",
                            "event_prescription_unfilled"
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "msg1",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event_start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gw1",
                        "targetRef": "event_prescription_unfilled",
                        "condition": "Not for patient"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gw1",
                        "targetRef": "id2",
                        "condition": "For patient"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gw2",
                        "targetRef": "event_prescription_unfilled",
                        "condition": "Not valid"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gw2",
                        "targetRef": "id4",
                        "condition": "Valid"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id5",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gw3",
                        "targetRef": "id6",
                        "condition": "Suspicious"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gw3",
                        "targetRef": "id9",
                        "condition": "Not suspicious"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id8",
                        "targetRef": "event_prescription_unfilled"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id9",
                        "targetRef": "gw4"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "gw4",
                        "targetRef": "id10",
                        "condition": "Status check not passed"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "gw4",
                        "targetRef": "id12",
                        "condition": "Status check passed"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id10",
                        "targetRef": "gw5"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "gw5",
                        "targetRef": "id11",
                        "condition": "Patient agrees"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "gw5",
                        "targetRef": "event_prescription_unfilled",
                        "condition": "Patient does not agree"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "id12",
                        "targetRef": "gw6"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "gw6",
                        "targetRef": "id13",
                        "condition": "In stock"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "gw6",
                        "targetRef": "event_prescription_unfilled",
                        "condition": "Out of stock"
                    },
                    {
                        "id": "flow25",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow26",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow27",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow28",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow29",
                        "sourceRef": "id17",
                        "targetRef": "event_end"
                    }
                ]
            }
        }
    },
    "27_ground_truth.json": {
        "0": {
            "text": "The process begins when a conflict occurs at SoKnow.\n\nThe employee first seeks a mediator.\n\nNext, HR listens to the employee and schedules an appointment.\n\nThe employee then attends the appointment and describes the conflict.\n\nFollowing this, the mediator seeks conflict resolution.\n\nA check is then made to determine if the conflict has been resolved.\n\nIf the conflict is resolved, the process ends with the conflict being resolved.\n\nIf the conflict is not resolved, HR schedules a new appointment.\n\nThe mediator then seeks conflict resolution again, and the process continues until the conflict is resolved.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Seek mediator",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "HR listens and schedules appointment",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Attend appointment and describe conflict",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Seek conflict resolution",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Schedule new appointment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Conflict occurs",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Conflict resolved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Check if conflict resolved",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id9",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Employee",
                                "elemRefs": [
                                    "id1",
                                    "id3"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "HR",
                                "elemRefs": [
                                    "id2",
                                    "id5"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Mediator",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id8",
                        "targetRef": "id7",
                        "condition": "Conflict resolved"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id8",
                        "targetRef": "id5",
                        "condition": "Conflict not resolved"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a conflict occurs at SoKnow.\n\nThe employee first seeks out a mediator.\n\nThe mediator then listens to the employee and schedules an appointment.\n\nThe employee attends the appointment and describes the conflict.\n\nThe HR department then seeks conflict resolution.\n\nAt this point, it is determined whether the conflict is resolved.\n\nIf the conflict is resolved, the process ends with the conflict being resolved.\n\nIf the conflict is not resolved, a new appointment is scheduled by the HR department.\n\nThe process then loops back to seeking conflict resolution until the conflict is resolved.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Seek out mediator",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Listen to employee and schedule appointment",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Attend appointment and describe conflict",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Seek conflict resolution",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Schedule new appointment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Conflict occurs",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Conflict resolved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Conflict resolved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id9",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Employee",
                                "elemRefs": [
                                    "id1",
                                    "id3"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id2",
                                    "id5",
                                    "id4",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id8",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id8",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a conflict occurs at SoKnow.\n\nThe employee seeks out the mediator.\n\nNext, the HR department listens to the employee and schedules an appointment.\n\nThe employee then attends the appointment and describes the conflict.\n\nThe mediator seeks a solution to the conflict.\n\nAt this point, it is determined whether the conflict is resolved.\n\nIf the conflict is resolved, the process ends with the conflict being resolved.\n\nIf the conflict is not resolved, the HR department schedules a new appointment, and the mediator seeks a solution to the conflict again. This cycle continues until the conflict is resolved.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Seek out the mediator",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "HR listens to employee and schedules appointment",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Attend and describe conflict in appointment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Seek conflict solution",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Schedule new appointment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Conflict occurs",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Conflict resolved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Conflict resolved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id9",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Employee",
                                "elemRefs": [
                                    "id1",
                                    "id3"
                                ]
                            },
                            {
                                "id": "id11",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id2",
                                    "id5"
                                ]
                            },
                            {
                                "id": "id12",
                                "name": "Mediator",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id8",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id8",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "41_ground_truth.json": {
        "0": {
            "text": "The process begins when a task arises in the viticulture process.\n\nFirst, Technical Jane Doe estimates the working time effort required for the task.\n\nNext, she checks the availability of resources.\n\nFollowing this, she selects and contacts a field employee.\n\nAt this point, it is determined whether the employee is reachable.\n\nIf the employee is reachable, the task is assigned to the employee.\n\nIf the employee is not reachable, the process loops back to checking the availability of resources.\n\nOnce the task is assigned, Technical Jane Doe specifies the procedure for task completion.\n\nThe field employee then confirms receipt of the task.\n\nThe field employee processes and completes the task.\n\nAfter completing the task, the field employee makes a completion report.\n\nFinally, Technical Jane Doe documents the completion report, and the process ends with the task being processed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Estimate working time effort",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check availability of resources",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select and contact field employee",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assign task to employee",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Specify procedure for task completion",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm received task",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Process and complete task",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Make completion report",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Document completion report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Task arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "Task processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Employee reachable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Viticulture Process",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Technical Jane Doe",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id9"
                                ]
                            },
                            {
                                "id": "id14",
                                "name": "Field Employee",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Employee reachable"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id10",
                        "targetRef": "id11",
                        "condition": "Employee not reachable"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a task arises in the Technical lane of the Outdoor Operations pool. \n\nFirst, the working time effort for the task is estimated. \n\nNext, the availability of resources is checked. \n\nFollowing this, a field employee is selected and contacted. \n\nAt this point, it is determined whether the employee is reachable. \n\nIf the employee is not reachable, the process ends with the task not being assigned, and the availability of resources is checked again. \n\nIf the employee is reachable, the task is assigned to the employee. \n\nThe procedure for task completion is then specified. \n\nThe field employee confirms receipt of the task. \n\nThe field employee then processes and completes the task. \n\nAfter completing the task, the field employee makes a completion report. \n\nFinally, the completion report is documented, and the process ends with the task being processed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Estimate working time effort",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check availability of resources",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select and contact field employee",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assign task to employee",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Specify procedure for task completion",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm task receipt",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Process and complete task",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Make completion report",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Document completion report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Task arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Task not assigned",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Task processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Is employee reachable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Outdoor Operations",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Technical",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Field Employee",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id13",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id13",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a task arises in the Outdoor Operations department. First, the working time effort for the task is estimated. Following this, the availability of resources is checked. Once resources are confirmed to be available, a field employee is selected and contacted. \n\nAt this point, it is determined whether the employee is reachable. If the employee is not reachable, the process ends with the task not being assigned, and the availability of resources is checked again. If the employee is reachable, the task is assigned to the employee. \n\nNext, the procedure for task completion is specified. The field employee then confirms receipt of the task. The field employee processes and completes the task. After completing the task, the field employee makes a completion report. Finally, the completion report is documented, and the process ends with the task being processed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Estimate working time effort",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check availability of resources",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Select and contact field employee",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Assign task to employee",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Specify procedure for task completion",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm task receipt",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Process and complete task",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Make completion report",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Document completion report",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Task arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Task not assigned",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Task processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Employee reachable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "Outdoor Operations",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Technical Jane Doe",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Field Employee",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "13_ground_truth.json": {
        "0": {
            "text": "The process begins with the creation of a bill of materials in the Warehousing Department of Startup TUd-03. Once the bill of materials is created, goods are ordered. \n\nAfter ordering the goods, it is determined whether the supplier sends an inquiry. If the supplier sends an inquiry, the Specialist Department clarifies the question with the specialist department. Following this, the quantity and quality of the goods are checked. If there is no inquiry from the supplier, the process directly proceeds to checking the quantity and quality of the goods.\n\nIf the delivery does not occur within five working days, the supplier is contacted to check for immediate shipping. If immediate shipping is not possible, the process ends with an escalation of delivery issues. If immediate shipping is possible, the quantity and quality of the goods are checked again.\n\nIf the delivery occurs within the expected timeframe, the quantity and quality of the goods are checked. If the quantity or quality does not meet the standards, a replacement delivery is requested, and the process loops back to checking the quantity and quality of the goods once the replacement delivery is received.\n\nIf the quantity and quality meet the standards, the goods are stored in the Warehousing Department. The process then moves to the Sales Department, where the order is transmitted, the goods are prepared and packaged, and finally, the goods are shipped or issued. The process concludes successfully.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create bill of materials",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Order goods",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Clarify question with specialist department",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Contact supplier to check for immediate shipping",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Check quantity and quality",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Request replacement delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Store goods",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Transmit order",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Prepare and package goods",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Ship or issue goods",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end1",
                        "name": "End with escalation of delivery issues",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "end2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Startup TUd-03",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Warehousing Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id7"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Specialist Department",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Sales Department",
                                "elemRefs": [
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Supplier",
                                "elemRefs": [
                                    "id4",
                                    "id6",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "id3",
                        "condition": "Supplier sends inquiry"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway1",
                        "targetRef": "id5",
                        "condition": "No inquiry"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id5",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway2",
                        "targetRef": "id4",
                        "condition": "Delivery does not occur within five working days"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id4",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway3",
                        "targetRef": "end1",
                        "condition": "Immediate shipping not possible"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway3",
                        "targetRef": "id5",
                        "condition": "Immediate shipping possible"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gateway2",
                        "targetRef": "id5",
                        "condition": "Delivery occurs"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id5",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "gateway4",
                        "targetRef": "id6",
                        "condition": "Quantity or quality does not meet standards"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id6",
                        "targetRef": "id5",
                        "condition": "Await replacement delivery"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "gateway4",
                        "targetRef": "id7",
                        "condition": "Quantity and quality meet standards"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id10",
                        "targetRef": "end2"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the creation of a bill of materials by the Warehousing Department at Startup TUd-03. Once the bill of materials is created, the goods are ordered. \n\nIf the supplier sends an inquiry, the Specialist Department clarifies the inquiry with the supplier. After the inquiry is clarified, the process continues with awaiting delivery. If no inquiry is sent by the supplier, the process directly proceeds to awaiting delivery.\n\nOnce the goods are awaited, the process checks if the delivery occurs within five working days. If the delivery does not occur within five working days, the supplier is contacted for immediate shipping. If immediate shipping is not possible, the process ends with delivery issues being escalated. If immediate shipping is possible, the process returns to awaiting delivery.\n\nIf the delivery occurs within five working days, the quantity and quality of the goods are checked. If the quantity and quality do not meet the standards, a replacement delivery is requested, and the process returns to awaiting delivery. If the quantity and quality meet the standards, the goods are stored.\n\nAfter storing the goods, the order is transmitted, and the goods are prepared and packaged. Finally, the goods are shipped or issued, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create bill of materials",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Order goods",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Clarify inquiry with specialist department",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Await delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Contact supplier for immediate shipping",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Check quantity and quality",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Request replacement delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Store goods",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Transmit order",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Prepare and package goods",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Ship or issue goods",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "end2",
                        "name": "Delivery issues escalated",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Supplier sends inquiry?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Delivery occurs within five working days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Immediate shipping possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway4",
                        "name": "Quantity and quality meet standards?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Startup TUd-03",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Warehousing Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Specialist Department",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Supplier",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "id3",
                        "condition": "Inquiry sent by supplier"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway1",
                        "targetRef": "id4",
                        "condition": "No inquiry"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway2",
                        "targetRef": "id5",
                        "condition": "No delivery within five working days"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id5",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway3",
                        "targetRef": "end2",
                        "condition": "Immediate shipping not possible"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway3",
                        "targetRef": "id4",
                        "condition": "Immediate shipping possible"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gateway2",
                        "targetRef": "id6",
                        "condition": "Delivery occurs within five working days"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id6",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "gateway4",
                        "targetRef": "id7",
                        "condition": "Quantity and quality not met"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id7",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "gateway4",
                        "targetRef": "id8",
                        "condition": "Quantity and quality met"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id11",
                        "targetRef": "end1"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the creation of a bill of materials by the warehousing department at Startup TUd-03. Once the bill of materials is created, the supplier orders the necessary goods. \n\nThe process then checks if the supplier sends an inquiry. If the supplier sends an inquiry, the supplier clarifies any questions with the specialist department and then awaits delivery. If no inquiry is sent, the supplier directly awaits delivery.\n\nUpon awaiting delivery, the process checks if the delivery will be within 5 days. If the delivery is within 5 days, the delivery is received. If the delivery is not within 5 days, the supplier contacts the supplier for immediate shipping. \n\nThe process then checks if immediate shipping is possible. If immediate shipping is not possible, the process ends with delivery issues. If immediate shipping is possible, the supplier awaits delivery again.\n\nOnce the delivery is received, the supplier checks the quantity and quality of the goods. If the quantity and quality do not meet standards, a replacement delivery is requested, and the supplier awaits the replacement delivery. Once the replacement delivery is received, the quantity and quality are checked again.\n\nIf the quantity and quality meet standards, the goods are stored. After storing the goods, the order is transmitted, the goods are prepared and packaged, and finally, the goods are shipped or issued. The process ends successfully.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create bill of materials",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Order goods",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Clarify question with specialist department",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Contact supplier for immediate shipping",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check quantity and quality",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Request replacement delivery",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Store goods",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Transmit order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Prepare and package goods",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Ship or issue goods",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Receive inquiry from supplier",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Delivery awaited",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Delivery received",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Replacement delivery awaited",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id16",
                        "name": "End process with delivery issues",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Process ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Supplier sends inquiry?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Delivery within 5 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Immediate shipping possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Quantity and quality meet standards?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pid1",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "lid1",
                                "name": "Supplier",
                                "elemRefs": [
                                    "id2",
                                    "id12",
                                    "id13",
                                    "id3",
                                    "id19",
                                    "id4",
                                    "id20",
                                    "id16",
                                    "id18",
                                    "id14",
                                    "id5",
                                    "id21",
                                    "id6",
                                    "id15",
                                    "id7",
                                    "id17",
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pid2",
                        "name": "Startup TUd-03",
                        "lanes": [
                            {
                                "id": "lid2",
                                "name": "Warehousing Department",
                                "elemRefs": [
                                    "id1"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id18",
                        "targetRef": "id12",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id18",
                        "targetRef": "id13",
                        "condition": "No"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id13",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id19",
                        "targetRef": "id14",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id19",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id4",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id20",
                        "targetRef": "id16",
                        "condition": "No"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id20",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id5",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id21",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id21",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id15",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id10",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "75_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event, which triggers the grape harvest.\n\nFirst, the field employee receives the field location.\n\nNext, the tools are loaded manually.\n\nThe employee then drives to the field.\n\nUpon arrival, the tools are unloaded manually.\n\nThe grape harvest is conducted by hand.\n\nAfter the harvest, the tools are loaded again manually.\n\nThe employee then drives to the winery.\n\nUpon arrival at the winery, the tools are unloaded again manually.\n\nFinally, the task is completed by the field employee, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Grape harvest",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive field location",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Load tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Drive to field",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Unload tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct grape harvest by hand",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Load tools again",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Drive to winery",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Unload tools again",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Complete task",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Outdoor Operations",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Field Employee",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, indicating the initiation of the grape harvest task.\n\nFirst, the field employee receives the grape harvest task.\n\nNext, the field location information is received.\n\nFollowing this, the tools are loaded.\n\nThe employee then drives to the field.\n\nUpon arrival at the field, the tools are unloaded.\n\nThe grape harvest is conducted by hand.\n\nAfter the harvest, the tools are loaded again.\n\nThe employee then drives to the winery.\n\nUpon arrival at the winery, the tools are unloaded again.\n\nThe process concludes with the end event, marking the completion of the grape harvest task.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Grape harvest task received",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive field location information",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Load tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Drive to the field",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Unload tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct grape harvest by hand",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Load tools again",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Drive to the winery",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Unload tools again",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id_start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id_end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id_pool1",
                        "name": "Field Employee",
                        "lanes": [
                            {
                                "id": "id_lane1",
                                "name": "Outdoor Operations",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id_start",
                                    "id_end"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id_start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id_end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first task is to conduct the grape harvest. Following this, field location information is received. Once the location is known, tools are loaded manually. The next step involves driving to the field. Upon arrival, the tools are unloaded manually. The grape harvest is then conducted by hand. After the harvest, the tools are loaded again manually. The next step is to drive to the winery. Upon arrival at the winery, the tools are unloaded again manually. The process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Grape harvest",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive field location information",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Load tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Drive to field",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Unload tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct grape harvest by hand",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Load tools again",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Drive to winery",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Unload tools again",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sid2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sid3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sid4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sid5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sid6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sid7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sid8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sid9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sid10",
                        "sourceRef": "id9",
                        "targetRef": "eid2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "23_ground_truth.json": {
        "0": {
            "text": "The healthcare process begins with the start event. The doctor first evaluates the patient's condition. Based on this evaluation, laboratory tests are performed. Once the laboratory tests are completed, the doctor treats the patient. Following the treatment, the doctor prescribes the necessary medicines. The prescription is then delivered to the pharmacy. The process concludes with the end event after the prescription has been delivered.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate Condition",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Perform Laboratory Tests",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Treat Patient",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prescribe Medicines",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Deliver Prescription",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Healthcare Process",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Doctor",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Laboratory",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Pharmacy",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the evaluation of the patient's condition by the doctor. Once the patient's condition is evaluated, the patient is sent to the laboratory by the administrative staff. In the laboratory, a technician performs the necessary laboratory testing. After the laboratory tests are completed, the results are sent back to the doctor, who then treats the patient based on the test results. Following the treatment, the doctor prescribes the necessary medicines. The prescription is then delivered to the patient by the administrative staff, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate condition of the patient",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send patient to laboratory",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Perform laboratory testing",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Treat patient based on test results",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prescribe necessary medicines",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Deliver prescription to the patient",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id9",
                        "name": "Hospital",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Doctor",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id5"
                                ]
                            },
                            {
                                "id": "id11",
                                "name": "Technician",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "id12",
                                "name": "Administrative Staff",
                                "elemRefs": [
                                    "id2",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "sid1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sid2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sid3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sid4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sid5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sid6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sid7",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when a patient enters short-term treatment. The doctor first evaluates the condition of the patient. Based on this evaluation, laboratory tests are performed. Once the laboratory tests are completed, the doctor treats the patient based on the test results. Following the treatment, the doctor prescribes the necessary medicines. The process concludes with the prescription being delivered to the patient.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate condition of patient",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Perform laboratory tests",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Treat patient based on test results",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prescribe necessary medicines",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Patient enters short-term treatment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Prescription delivered to patient",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id7",
                        "name": "Treatment Process",
                        "lanes": [
                            {
                                "id": "id8",
                                "name": "Doctor",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id9",
                                "name": "Laboratory",
                                "elemRefs": [
                                    "id2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "17_ground_truth.json": {
        "0": {
            "text": "The process begins with the user logging on to the email provider's website. After successfully logging in, the user chooses a package. At this point, a decision is made to check if a personal account is available. If a personal account is not available, the process ends with the notification that the private account is unavailable.\n\nIf a personal account is available, the user proceeds to provide personal information. This includes entering full names and uploading a photo ID. Once the personal data is provided, the user confirms the personal data. Following this confirmation, a new email ID and password are generated by the system. The process concludes with the creation of the private email.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log on to email provider's website",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Choose a package",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Provide personal information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter full names",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Upload photo ID",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm personal data",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Generate new email ID and password",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Private account unavailable",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Private email created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "Personal account not available"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "Personal account available"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when there is a need for an email account. The user logs on to the email provider's website. After logging in, the user chooses a package. The process then checks if a personal account is available. If a personal account is not available, the process ends with the notification that a private account is unavailable. If a personal account is available, the user proceeds to enter their full names and upload a photo ID. After entering the personal data and uploading the photo ID, the user confirms the personal data, and a new email ID and password are generated. The process concludes with the creation of a private email.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Log on to the email provider's website",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Choose a package",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Private account is available",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Enter full names and upload photo ID",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Confirm personal data and generate new email ID and password",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent",
                        "name": "Email account needed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent1",
                        "name": "Private account unavailable",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "endEvent2",
                        "name": "Private email created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Personal account available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "endEvent1",
                        "condition": "No"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "task3",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task5",
                        "targetRef": "endEvent2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a user logs on to the email provider's website. \n\nNext, the user chooses a package. \n\nAt this point, the system checks if a personal account is available. \n\nIf a personal account is not available, the process ends with the notification that the private account is unavailable. \n\nIf a personal account is available, the user proceeds to enter their full names. \n\nFollowing this, the user uploads a photo ID. \n\nThe user then confirms their personal data. \n\nAfter the personal data is confirmed, the system generates a new email ID and password. \n\nThe process concludes with the creation of the private email.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log on to email provider's website",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Choose a package",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter full names",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Upload photo ID",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Confirm personal data",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Generate new email ID and password",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Private account unavailable",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Private email created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Email Account Creation Portal",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "User",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            },
                            {
                                "id": "id13",
                                "name": "System",
                                "elemRefs": [
                                    "id6",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id8",
                        "condition": "Personal account not available"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "Personal account available"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "59_ground_truth.json": {
        "0": {
            "text": "The process begins when the customer starts by filling out a credit application. Once the application is filled out, it is sent to the mediation agency. The mediation agency then forwards the application to both Bank A and Bank B.\n\nAt Bank B, the loan amount is checked first. If the customer's income is not within the range of \u20ac2,000 to \u20ac100,000, the application is rejected. If the income is within the specified range, the process checks if the loan amount is greater than 20 times the monthly income. If it is, the application is rejected. If the loan amount is less than or equal to 20 times the monthly income, the interest rate is determined, and a credit report is sent to the mediation agency.\n\nSimultaneously, at Bank A, the loan amount is checked. If the loan amount is greater than 20 times the monthly income, the application is rejected. If the loan amount is less than or equal to 20 times the monthly income, an interest rate of 20% is estimated, and a credit report is sent to the mediation agency.\n\nThe mediation agency then forwards either the rejection or the credit report from both banks to the customer. The process concludes when the customer receives the forwarded information.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fill out credit application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send application to mediation agency",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Forward application to Bank A and Bank B",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Check loan amount (Bank B)",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Check income range (Bank B)",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Reject application (Bank B)",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check if loan amount > 20 times monthly income (Bank B)",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Determine interest rate (Bank B)",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Send credit report to mediation agency (Bank B)",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Check loan amount (Bank A)",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Reject application (Bank A)",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Estimate 20% interest (Bank A)",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Send credit report to mediation agency (Bank A)",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Forward rejection or credit report to customer",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Customer income range?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Loan amount > 20 times monthly income? (Bank B)",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Loan amount > 20 times monthly income? (Bank A)",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer",
                                "elemRefs": [
                                    "id1",
                                    "id14"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Mediation Agency",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Mediation Agency",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id14"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Bank A",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Bank A",
                                "elemRefs": [
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool4",
                        "name": "Bank B",
                        "lanes": [
                            {
                                "id": "lane4",
                                "name": "Bank B",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "gateway1",
                                    "gateway2",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id4",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway1",
                        "targetRef": "id6",
                        "condition": "Income not within \u20ac2,000 - \u20ac100,000"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway1",
                        "targetRef": "id7",
                        "condition": "Income within \u20ac2,000 - \u20ac100,000"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id7",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway2",
                        "targetRef": "id6",
                        "condition": "Loan amount > 20 times monthly income"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway2",
                        "targetRef": "id8",
                        "condition": "Loan amount <= 20 times monthly income"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id10",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "gateway3",
                        "targetRef": "id11",
                        "condition": "Loan amount > 20 times monthly income"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "gateway3",
                        "targetRef": "id12",
                        "condition": "Loan amount <= 20 times monthly income"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id9",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "id14",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when the customer starts by filling out a credit application. Once the application is filled out, it is received by the mediation agency. The mediation agency then forwards the application to both Bank A and Bank B simultaneously.\n\nAt Bank B, the loan amount is checked first. Following this, the income is checked to see if it falls between 2000 and 100000. If the income is not within this range, a rejection is sent to the customer. If the income is within the range, the loan amount is further checked to see if it is greater than 20 times the monthly income. If the loan amount is greater than 20 times the monthly income, a rejection is sent to the customer. If the loan amount is not greater than 20 times the monthly income, the interest rate is determined, and a credit report is sent to the customer.\n\nAt Bank A, the loan amount is checked first. If the loan amount is greater than 20 times the monthly income, a rejection is sent to the customer. If the loan amount is not greater than 20 times the monthly income, an interest rate of 20% per year is estimated, and a credit report is sent to the customer.\n\nFinally, the mediation agency forwards either the rejection or the credit report from both banks to the customer, and the loan process is completed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fill out credit application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive application",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Forward application to banks",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Check loan amount (Bank B)",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Check income between 2000 and 100000",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Check loan amount is greater than 20 times monthly income (Bank B)",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Interest rate determination (Bank B)",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Send rejection (Bank B)",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Send credit report (Bank B)",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Check loan amount (Bank A)",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Estimate 20% interest per year (Bank A)",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Send rejection (Bank A)",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Send credit report (Bank A)",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Forward rejection or credit report to customer",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Loan process completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "type": "Parallel"
                    },
                    {
                        "id": "id19",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "id1",
                                    "id15",
                                    "id16"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Mediation Agency",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Mediation Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id14"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Bank A",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Bank A Lane",
                                "elemRefs": [
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool4",
                        "name": "Bank B",
                        "lanes": [
                            {
                                "id": "lane4",
                                "name": "Bank B Lane",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sid1",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sid2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sid3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sid4",
                        "sourceRef": "id3",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sid5",
                        "sourceRef": "id18",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sid6",
                        "sourceRef": "id18",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sid7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sid8",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sid9",
                        "sourceRef": "id17",
                        "targetRef": "id8",
                        "condition": "Income not in range"
                    },
                    {
                        "id": "sid10",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "Income in range"
                    },
                    {
                        "id": "sid11",
                        "sourceRef": "id6",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sid12",
                        "sourceRef": "id19",
                        "targetRef": "id9",
                        "condition": "Loan amount not greater than 20 times income"
                    },
                    {
                        "id": "sid13",
                        "sourceRef": "id19",
                        "targetRef": "id8",
                        "condition": "Loan amount greater than 20 times income"
                    },
                    {
                        "id": "sid14",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sid15",
                        "sourceRef": "id10",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sid16",
                        "sourceRef": "id22",
                        "targetRef": "id11",
                        "condition": "Loan amount not greater than 20 times income"
                    },
                    {
                        "id": "sid17",
                        "sourceRef": "id22",
                        "targetRef": "id12",
                        "condition": "Loan amount greater than 20 times income"
                    },
                    {
                        "id": "sid18",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sid19",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sid20",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sid21",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the customer starts by filling out a credit application. Once the application is filled out, it is forwarded to both Bank A and Bank B by the mediation agency.\n\nAt Bank A, the loan amount is checked. Simultaneously, at Bank B, the customer's income is checked. If the income is not in the acceptable range, Bank B sends a rejection to the mediation agency. If the income is in the acceptable range, Bank B checks the loan amount. If the loan amount is greater than 20 times the customer's monthly income, Bank B sends a rejection to the mediation agency. If the loan amount is not greater than 20 times the customer's monthly income, Bank B determines the interest rate and then sends the credit report to the mediation agency.\n\nMeanwhile, at Bank A, after checking the loan amount, if the loan amount is greater than 20 times the customer's monthly income, Bank A sends a rejection to the mediation agency. If the loan amount is not greater than 20 times the customer's monthly income, Bank A determines the interest rate and then sends the credit report to the mediation agency.\n\nFinally, the mediation agency forwards the credit reports or rejections from both banks to the customer, completing the loan process.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fill out credit application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Forward application to Bank A and Bank B",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check loan amount at Bank A",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check customer's income at Bank B",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check loan amount at Bank B",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Determine interest rate at Bank B",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Determine interest rate at Bank A",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send credit report from Bank A",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send credit report from Bank B",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send rejection from Bank B",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send rejection from Bank A",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Forward credit reports or rejections to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "Loan process completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Income check",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "name": "Loan amount greater than 20 times monthly income (Bank B)",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "name": "Loan amount greater than 20 times monthly income (Bank A)",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "customer",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "customer_lane",
                                "name": "Customer",
                                "elemRefs": [
                                    "id1",
                                    "id12",
                                    "start",
                                    "end"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "mediation_agency",
                        "name": "Mediation Agency",
                        "lanes": [
                            {
                                "id": "mediation_agency_lane",
                                "name": "Mediation Agency",
                                "elemRefs": [
                                    "id2"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "bank_a",
                        "name": "Bank A",
                        "lanes": [
                            {
                                "id": "bank_a_lane",
                                "name": "Bank A",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id9",
                                    "gw3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "bank_b",
                        "name": "Bank B",
                        "lanes": [
                            {
                                "id": "bank_b_lane",
                                "name": "Bank B",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id10",
                                    "id11",
                                    "gw1",
                                    "gw2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id6",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "gw1",
                        "targetRef": "id7",
                        "condition": "Income not in range"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "gw1",
                        "targetRef": "id8",
                        "condition": "Income in range"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id8",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "gw2",
                        "targetRef": "id7",
                        "condition": "Loan amount greater than 20 times"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gw2",
                        "targetRef": "id10",
                        "condition": "Loan amount not greater than 20 times"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id3",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "gw3",
                        "targetRef": "id9",
                        "condition": "Loan amount greater than 20 times"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "gw3",
                        "targetRef": "id4",
                        "condition": "Loan amount not greater than 20 times"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id12",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "71_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event. The first task is to create a booking system. Once the booking system is created, it is then started. After starting the booking system, the next step is to read the payment. Following this, payment automation is initiated.\n\nAt this point, a decision is made to check if the payment has been made. If the payment has been made, the payment is booked, and the process ends with the payment being confirmed. If the payment has not been made, a reminder is sent.\n\nAfter sending the reminder, another decision is made to check if the payment has been made after the reminder. If the payment is made after the reminder, the payment is booked, and the process ends with the payment being confirmed. If the payment is still not made after the reminder, a written dunning procedure is initiated.\n\nThe written dunning procedure is then reviewed. If the review is successful, the process ends with the reminder notice being sent. If the review is not successful, the reminder notice is correctly filled out, and the review process is repeated until it is successful.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create booking system",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Start booking system",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Read payment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Initiate payment automation",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Send reminder",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Book payment",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Initiate written dunning procedure",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Review reminder notice",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Correctly fill out reminder notice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "Payment confirmed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "eid3",
                        "name": "Reminder notice sent",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gid1",
                        "name": "Payment made?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid2",
                        "name": "Payment made after reminder?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid3",
                        "name": "Review successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Accounting and Controlling",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Accounting",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "eid1",
                                    "eid2",
                                    "gid1",
                                    "gid2"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Controlling",
                                "elemRefs": [
                                    "id7",
                                    "id8",
                                    "id9",
                                    "eid3",
                                    "gid3"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "gid1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "gid1",
                        "targetRef": "id6",
                        "name": "Payment made"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "eid2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "gid1",
                        "targetRef": "id5",
                        "name": "Payment not made"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "gid2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gid2",
                        "targetRef": "id6",
                        "name": "Payment made after reminder"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "eid2"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "gid2",
                        "targetRef": "id7",
                        "name": "Payment not made after reminder"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "gid3"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "gid3",
                        "targetRef": "eid3",
                        "name": "Review successful"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "gid3",
                        "targetRef": "id9",
                        "name": "Review not successful"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id9",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the creation of a booking system. Once the booking system is created, it is started, and the payment is read. Following this, payment automation is initiated.\n\nA decision is then made to determine if the payment has been made. If the payment has been made, the payment is booked, and the process ends with the payment being confirmed.\n\nIf the payment has not been made, a reminder is sent. After sending the reminder, another decision is made to check if the payment has been made after the reminder. If the payment is made after the reminder, the payment is booked, and the process ends with the payment being confirmed.\n\nIf the payment is still not made after the reminder, a written dunning procedure is initiated. The reminder notice is then reviewed. A decision is made to check if the review was successful. If the review is successful, the reminder notice is sent, and the process ends with the reminder notice being sent.\n\nIf the review is not successful, the reminder notice is correctly filled out and reviewed again. This loop continues until the review is successful, at which point the reminder notice is sent, and the process ends with the reminder notice being sent.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create booking system",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Start booking system and read payment",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Initiate payment automation",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Book payment",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Send reminder",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Initiate written dunning procedure",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Review reminder notice",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Correctly fill out and review reminder notice again",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send reminder notice",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End - Payment Confirmed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End - Reminder Notice Sent",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Decision: Payment Made?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Decision: Payment Made After Reminder?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Decision: Review Successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Accounting and Controlling",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Accounting",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id13",
                        "targetRef": "id4",
                        "condition": "Payment made"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id13",
                        "targetRef": "id5",
                        "condition": "Payment not made"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "Payment made after reminder"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id14",
                        "targetRef": "id6",
                        "condition": "Payment not made after reminder"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "Review successful"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id15",
                        "targetRef": "id8",
                        "condition": "Review not successful"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step is to create a booking system. Once the booking system is created, it is then started. Following this, the payment is read. After reading the payment, payment automation is initiated.\n\nNext, it is checked whether the payment has been made. If the payment has been made, the payment is booked, and the process ends with a confirmation that the payment has been made.\n\nIf the payment has not been made, a reminder is sent. After sending the reminder, it is checked again whether the payment has been made after the reminder. If the payment has been made after the reminder, the payment is booked, and the process ends with a confirmation that the payment has been made.\n\nIf the payment has still not been made after the reminder, a written dunning procedure is initiated. The reminder notice is then reviewed. If the review is successful, the process ends with a confirmation that the reminder notice has been sent.\n\nIf the review is not successful, the reminder notice is filled out and reviewed again. This cycle of filling out and reviewing the reminder notice continues until the review is successful, at which point the process ends with a confirmation that the reminder notice has been sent.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create booking system",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Start booking system",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Read payment",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Initiate payment automation",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Book payment",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Send reminder",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Initiate written dunning procedure",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Review reminder notice",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Fill out and review reminder notice",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Payment made confirmation",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Reminder notice sent confirmation",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Payment made?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Payment made after reminder?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Review successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "Accounting and Controlling",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Administrative",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id13",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id14",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id9",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id15",
                        "targetRef": "id12",
                        "condition": "yes"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "26_ground_truth.json": {
        "0": {
            "text": "The process begins when a late payment is received by the finance department at SoKnown. The first step is to inform management about the late payment. Following this, it is checked whether a reminder has already been sent to the customer company.\n\nIf a reminder has not been sent, a reminder is created and sent to the customer company. After sending the reminder, it is checked if the payment has been made. If the payment is made, the payment is posted, and the process ends with the payment being processed. If the payment is not made, another reminder is created and sent, and the process loops back to check if the payment has been made again. If the third reminder is unsuccessful, the finance department is notified.\n\nIf a reminder has already been sent, an inquiry is made with the customer. This involves sending an inquiry email to the customer company. Upon receiving a response, it is checked whether the response has been received. If a response is received, an online banking check is performed to verify the payment. If the payment is verified, the payment is posted, and the process ends with the payment being processed.\n\nIf no response is received from the customer, the legal department is notified, and legal assistance is requested from an external lawyer. The external lawyer then runs the reminder process, and the process ends with the payment being processed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Inform management",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check if reminder has been sent",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Inquire with customer",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send inquiry email to customer company",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Perform online banking check",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Notify lawyer",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Request legal assistance from external lawyer",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Run reminder process",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Create and send reminder to customer company",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Check if payment is made",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Create another reminder",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Notify finance department",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Post payment",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Late payment received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Payment processed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Response received",
                        "type": "IntermediateEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id20",
                        "name": "SoKnown",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Finance Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id17",
                                    "id18",
                                    "id19"
                                ]
                            },
                            {
                                "id": "id22",
                                "name": "Legal Department",
                                "elemRefs": [
                                    "id9",
                                    "id11",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id23",
                                "name": "External Lawyer",
                                "elemRefs": [
                                    "id7"
                                ]
                            },
                            {
                                "id": "id24",
                                "name": "Customer",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id23"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id17",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id16",
                        "targetRef": "id18",
                        "condition": "Response received"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id18",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id18",
                        "targetRef": "id6",
                        "condition": "No response"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id10",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id19",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id19",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id11",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id45",
                        "targetRef": "id12",
                        "condition": "Third reminder unsuccessful"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when a late payment is received. The finance department is first informed about the late payment. Following this, it is checked whether a reminder has already been sent. If a reminder has been sent, an inquiry is made with the customer, and an inquiry email is sent to the customer. If a response is received from the customer, an online banking check is performed, and the payment is posted, concluding the process with the payment being processed.\n\nIf no response is received from the customer, the lawyer is notified, and a request for legal assistance is sent. The reminder process is then run, and the process ends.\n\nIf no reminder has been sent initially, a reminder is created and sent. It is then checked if the payment has been made. If the payment has been made, the payment is posted, and the process ends with the payment being processed. If the payment has not been made, another reminder is created. It is then checked if the third reminder was unsuccessful. If the third reminder was unsuccessful, the finance department is notified, and the lawyer is notified again. The lawyer is then notified once more, and the process loops back to notifying the lawyer and sending a request for legal assistance. If the third reminder was successful, the process loops back to checking if a reminder has been sent.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Inform management",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check if reminder has been sent",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Make inquiry with customer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send inquiry email to customer",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Perform online banking check",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Post payment",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Notify lawyer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send request for legal assistance",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Run reminder process",
                        "type": "SubProcess"
                    },
                    {
                        "id": "id10",
                        "name": "Create and send reminder",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check if payment has been made",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Create another reminder",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Notify finance department",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Notify lawyer again",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Late payment received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "Payment processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Reminder sent?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "name": "Response received?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "name": "Payment made?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw4",
                        "name": "Third reminder unsuccessful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "SoKnown Process",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Finance Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id13"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Customer Company",
                                "elemRefs": [
                                    "id3",
                                    "id4"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Legal Department",
                                "elemRefs": [
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gw1",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id4",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gw2",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gw2",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id9",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "gw1",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id11",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "gw3",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "gw3",
                        "targetRef": "id12",
                        "condition": "no"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id12",
                        "targetRef": "gw4"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "gw4",
                        "targetRef": "gw1",
                        "condition": "no"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "gw4",
                        "targetRef": "id13",
                        "condition": "yes"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a late payment is received by the finance department at SoKnown Company. The first step is to inform management about the late payment. Following this, it is checked whether a reminder has already been sent.\n\nIf no reminder has been sent, a reminder is created and then sent to the customer. After sending the reminder, it is checked if the payment has been made. If the payment has been made, the payment is posted, and the process ends with the payment being processed. If the payment has not been made, another reminder is created, and it is checked if this is the third reminder.\n\nIf it is the third reminder, the finance department is notified, and the lawyer is notified again. If it is not the third reminder, the process loops back to creating and sending another reminder.\n\nIf a reminder has already been sent, an inquiry is made with the customer. An inquiry email is sent, and it is checked if a response has been received. If a response is received, an online banking check is performed. If the payment is confirmed, the payment is posted, and the process ends with the payment being processed. If no response is received, the lawyer is notified, and a request for legal assistance is sent. The reminder process is then run again, and the payment is posted, ending the process with the payment being processed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Inform management",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check if reminder sent",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Make inquiry with customer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send inquiry email",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Online banking check",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Notify lawyer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send request for legal assistance",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Run reminder process",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Create reminder",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send reminder",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check if payment made",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Create another reminder",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Notify finance department",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Notify lawyer again",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Post payment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start1",
                        "name": "Late payment received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end1",
                        "name": "Payment processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Reminder sent?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "name": "Response received?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "name": "Payment made?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw4",
                        "name": "Third reminder?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "SoKnown Company",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Finance Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "start1",
                                    "end1",
                                    "gw1",
                                    "gw2",
                                    "gw3",
                                    "gw4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "gw1",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "gw1",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gw2",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "gw2",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id15",
                        "targetRef": "end1"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id11",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "gw3",
                        "targetRef": "id15",
                        "condition": "yes"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "gw3",
                        "targetRef": "id12",
                        "condition": "no"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id12",
                        "targetRef": "gw4"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "gw4",
                        "targetRef": "id13",
                        "condition": "yes"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "gw4",
                        "targetRef": "id14",
                        "condition": "yes"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "gw4",
                        "targetRef": "id9",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "68_ground_truth.json": {
        "0": {
            "text": "The process begins when a request for sample products is made. The warehouse supervisor evaluates the sample products. If the sample meets the requirements, the supervisor selects the product and sends a purchase order. If the sample does not meet the requirements, the product specifications are adjusted, and a new sample is requested.\n\nOnce the purchase order is sent, the stock availability is checked. If the stock is available, the supplier sends the product to the warehouse. If the stock is not available, the supplier restocks the inventory and the stock availability is checked again.\n\nWhen the product is sent to the warehouse, it is received by the warehouse supervisor, who then checks if the order matches the physical product. If the order matches, the supervisor sends a payment authorization. If the order does not match, the supervisor requests the missing products and checks the stock availability again.\n\nAfter the payment authorization is sent, the supplier processes the payment and notifies the supplier after the payment is completed. The process ends when the products match the order.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate sample products",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select product and send purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Adjust product specifications and request new sample",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check stock availability",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send product to warehouse",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Restock inventory",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Receive product",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check if order matches",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send payment authorization",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Process payment",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Request missing products",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Request for sample products made",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Products match",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Supplier notified after payment",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Sample meets requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Stock available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Order matches with physical product?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id18",
                        "name": "FMCG Company",
                        "lanes": [
                            {
                                "id": "id19",
                                "name": "Warehouse Supervisor",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id11"
                                ]
                            },
                            {
                                "id": "id20",
                                "name": "Supplier",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id17",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id17",
                        "targetRef": "id11",
                        "condition": "no"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id14",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, after which the warehouse supervisor requests sample products from the supplier. The supplier then provides the sample products. The warehouse supervisor evaluates the sample products. If the sample meets the requirements, the warehouse supervisor selects the product and sends a purchase order. If the sample does not meet the requirements, the warehouse supervisor adjusts the product specifications and requests the supplier to provide new sample products.\n\nOnce the purchase order is sent, the supplier checks stock availability. If the stock is available, the supplier sends the product to the warehouse supervisor. If the stock is not available, the supplier restocks the inventory and then checks stock availability again. After the product is sent, the warehouse supervisor receives the product and checks it against the order. If the order and the physical product match, the warehouse supervisor sends a payment authorization. If they do not match, the warehouse supervisor requests the missing products, and the supplier checks stock availability again.\n\nAfter the payment authorization is sent, the payment is processed. Finally, the supplier is notified, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request sample products",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Provide sample products",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate sample products",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Adjust product specifications",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Select product and send purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check stock availability",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Restock inventory",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send product to warehouse supervisor",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive product",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check products against order",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Request missing products",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Send payment authorization",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Process payment",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Notify supplier",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "idE1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "idE2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idG1",
                        "name": "Sample meets requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idG2",
                        "name": "Stock available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idG3",
                        "name": "Order and physical product match?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "idP1",
                        "name": "FMCG Company",
                        "lanes": [
                            {
                                "id": "idL1",
                                "name": "Warehouse Supervisor",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id5",
                                    "id9",
                                    "id10",
                                    "id12"
                                ]
                            },
                            {
                                "id": "idL2",
                                "name": "Supplier",
                                "elemRefs": [
                                    "id2",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id13",
                                    "id14"
                                ]
                            }
                        ],
                        "boundaries": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "idSF1",
                        "sourceRef": "idE1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "idSF2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "idSF3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "idSF4",
                        "sourceRef": "id3",
                        "targetRef": "idG1"
                    },
                    {
                        "id": "idSF5",
                        "sourceRef": "idG1",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "idSF6",
                        "sourceRef": "idG1",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "idSF7",
                        "sourceRef": "id4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "idSF8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "idSF9",
                        "sourceRef": "id6",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "idSF10",
                        "sourceRef": "id6",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "idSF11",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    },
                    {
                        "id": "idSF12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "idSF13",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "idSF14",
                        "sourceRef": "id10",
                        "targetRef": "idG3"
                    },
                    {
                        "id": "idSF15",
                        "sourceRef": "idG3",
                        "targetRef": "id12",
                        "condition": "yes"
                    },
                    {
                        "id": "idSF16",
                        "sourceRef": "idG3",
                        "targetRef": "id11",
                        "condition": "no"
                    },
                    {
                        "id": "idSF17",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "idSF18",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "idSF19",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "idSF20",
                        "sourceRef": "id14",
                        "targetRef": "idE2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the FMCG company initiates the process to request sample products from the supplier. The supplier then provides the sample products. Once the samples are received, they are evaluated by the warehouse team.\n\nIf the sample meets the requirements, the warehouse team selects the product and sends a purchase order to the supplier. The supplier then checks the stock availability. If the stock is available, the supplier sends the product to the warehouse. If the stock is not available, the supplier restocks the inventory and checks the stock availability again.\n\nOnce the product is sent to the warehouse, the warehouse team receives the product and checks if the order and the physical product match. If they match, the warehouse team sends a payment authorization to the supplier. If they do not match, the warehouse team requests the missing products from the supplier, and the supplier checks the stock availability again.\n\nAfter the payment authorization is sent, the supplier processes the payment and notifies the warehouse team. The process ends once the supplier has been notified. If at any point the sample does not meet the requirements, the warehouse team adjusts the product specifications and requests the supplier to resend the sample products, after which the evaluation process is repeated.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request Sample Products",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Provide Sample Products",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate Sample",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Select Product and Send Purchase Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Adjust Product Specifications",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check Stock Availability",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Resend Sample Products",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send Product to Warehouse",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Restock Inventory",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Receive Product",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check Order and Physical Product",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Request Missing Products",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send Payment Authorization",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Process Payment",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Notify Supplier",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start-event",
                        "name": "Start Process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "sample-meets-requirements",
                        "name": "Does Sample Meet Requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "sample-does-not-meet-requirements",
                        "name": "Does Sample Not Meet Requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "stock-available",
                        "name": "Is Stock Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "order-product-match",
                        "name": "Do Order and Product Match?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "end-process",
                        "name": "End Process",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Sample Meets Requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Stock Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Order and Product Match?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "FMCG Company",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Warehouse",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Supplier",
                                "elemRefs": [
                                    "id2",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id13",
                                    "id14",
                                    "id15"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "seq1",
                        "sourceRef": "start-event",
                        "targetRef": "id1"
                    },
                    {
                        "id": "seq2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "seq3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "seq4",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "seq5",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "name": "Yes"
                    },
                    {
                        "id": "seq6",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "name": "No"
                    },
                    {
                        "id": "seq7",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "seq8",
                        "sourceRef": "id7",
                        "targetRef": "id3"
                    },
                    {
                        "id": "seq9",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "seq10",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "seq11",
                        "sourceRef": "id17",
                        "targetRef": "id8",
                        "name": "Yes"
                    },
                    {
                        "id": "seq12",
                        "sourceRef": "id17",
                        "targetRef": "id9",
                        "name": "No"
                    },
                    {
                        "id": "seq13",
                        "sourceRef": "id9",
                        "targetRef": "id6"
                    },
                    {
                        "id": "seq14",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "seq15",
                        "sourceRef": "id10",
                        "targetRef": "id18"
                    },
                    {
                        "id": "seq16",
                        "sourceRef": "id18",
                        "targetRef": "id13",
                        "name": "Yes"
                    },
                    {
                        "id": "seq17",
                        "sourceRef": "id18",
                        "targetRef": "id12",
                        "name": "No"
                    },
                    {
                        "id": "seq18",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "seq19",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "seq20",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "seq21",
                        "sourceRef": "id15",
                        "targetRef": "end-process"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "40_ground_truth.json": {
        "0": {
            "text": "The process begins when an application is received by the recruitment department at ADOmoney Bank. The first step is to review the application documents. Following this, a preselection is conducted to determine the initial suitability of the applicant.\n\nIf the applicant is rejected during the preselection, a rejection is created and sent to the applicant, concluding the process with the applicant being rejected after preselection.\n\nIf the applicant passes the preselection, the documents are examined in detail. The next step is to check if the application is for a key position. If it is, a telephone interview is conducted. If it is not, an appointment for a personal interview is communicated to the applicant via email.\n\nOnce a suitable date is found, the appointment and documents are forwarded to the relevant department. The personal interview is then conducted. After the personal interview, it is checked if the applicant is suitable for the assessment center.\n\nIf the applicant is suitable for the assessment center, a parallel process begins where an appointment for the assessment center is scheduled, and the assessment center is planned and prepared. The assessment center is then conducted.\n\nAfter the assessment center, a vote on the applicant is taken. If the applicant is not suitable for the assessment center, the vote on the applicant is taken directly after the personal interview.\n\nBased on the vote, if the applicant is accepted, an acceptance letter is drafted and sent to the applicant, concluding the process with the applicant being accepted. If the applicant is rejected, a rejection letter is drafted and sent to the applicant, concluding the process with the applicant being rejected after the assessment center.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Review application documents",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct preselection",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create rejection after preselection",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection to applicant",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Examine documents in detail",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check if application is for a key position",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct telephone interview",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Communicate appointment for personal interview via email",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Forward appointment and documents to relevant department",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Conduct personal interview",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check if applicant is suitable for assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Schedule appointment for assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Plan and prepare assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Conduct assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Vote on applicant",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Draft acceptance letter",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Send acceptance letter to applicant",
                        "type": "Service"
                    },
                    {
                        "id": "id18",
                        "name": "Draft rejection letter",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Send rejection letter to applicant",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id20",
                        "name": "Application received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Applicant rejected after preselection",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Suitable date found",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id23",
                        "name": "Vote on applicant taken",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id24",
                        "name": "Applicant accepted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id25",
                        "name": "Applicant rejected after assessment center",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id26",
                        "name": "Preselection outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Application for key position?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Suitable for assessment center?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "type": "Parallel"
                    },
                    {
                        "id": "id30",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id31",
                        "name": "ADOmoney Bank",
                        "lanes": [
                            {
                                "id": "id32",
                                "name": "Recruitment Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id17",
                                    "id18",
                                    "id19",
                                    "id20",
                                    "id21",
                                    "id22",
                                    "id23",
                                    "id24",
                                    "id25",
                                    "id26",
                                    "id27",
                                    "id28",
                                    "id29",
                                    "id30"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id20",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id26"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id26",
                        "targetRef": "id3",
                        "condition": "reject"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id4",
                        "targetRef": "id21"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id26",
                        "targetRef": "id5",
                        "condition": "proceed"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id27"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id27",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id27",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id8",
                        "targetRef": "id22"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id22",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id11",
                        "targetRef": "id28",
                        "condition": "yes"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id28",
                        "targetRef": "id29"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id29",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id29",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "id14",
                        "targetRef": "id23"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "id11",
                        "targetRef": "id23",
                        "condition": "no"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "id23",
                        "targetRef": "id30"
                    },
                    {
                        "id": "flow25",
                        "sourceRef": "id30",
                        "targetRef": "id16",
                        "condition": "accept"
                    },
                    {
                        "id": "flow26",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow27",
                        "sourceRef": "id17",
                        "targetRef": "id24"
                    },
                    {
                        "id": "flow28",
                        "sourceRef": "id30",
                        "targetRef": "id18",
                        "condition": "reject"
                    },
                    {
                        "id": "flow29",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "flow30",
                        "sourceRef": "id19",
                        "targetRef": "id25"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an application is received by the recruitment department at ADOmoney Bank. The first step is to review the application documents and conduct a preselection. Based on the preselection result, if the applicant is rejected, a rejection letter is created and sent to the applicant, and the process ends with the applicant being rejected after preselection.\n\nIf the applicant proceeds past the preselection, the application documents are examined in detail. The next step is to determine if the application is for a key position. If it is, a telephone interview is conducted. If it is not, an appointment for a personal interview is communicated to the applicant via email.\n\nAfter the telephone interview, or if the application is not for a key position, the appointment for the personal interview is communicated via email. The process then checks if a suitable date for the interview has been found. If not, the appointment communication step is repeated. If a suitable date is found, the appointment and documents are forwarded to the relevant department.\n\nThe personal interview is then conducted. Following the interview, a decision is made on whether the applicant is suitable for the assessment center. If the applicant is suitable, an appointment for the assessment center is scheduled, and the assessment center is planned. The assessment center is then conducted.\n\nAfter the assessment center, a vote on the applicant is taken. Based on the vote, if the applicant is accepted, an acceptance letter is drafted and sent to the applicant. If the applicant is not accepted, a rejection letter is drafted and sent to the applicant. The process ends after either the acceptance or rejection letter is sent.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Review application documents and conduct preselection",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Examine application documents in detail",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct telephone interview",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Communicate appointment for personal interview via email",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Forward appointment and documents to relevant department",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct personal interview",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Decide if applicant is suitable for assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Schedule appointment for assessment center and plan assessment center",
                        "type": "Parallel"
                    },
                    {
                        "id": "id9",
                        "name": "Conduct assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Vote on applicant",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Draft and send acceptance letter",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Draft and send rejection letter",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Create rejection after preselection and send to applicant",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Application received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Applicant rejected after preselection",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "End process",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Preselection result",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Application for key position?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Suitable date found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Suitable for assessment center?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Applicant accepted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id22",
                        "name": "ADOmoney Bank",
                        "lanes": [
                            {
                                "id": "id23",
                                "name": "Recruitment Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            },
                            {
                                "id": "id24",
                                "name": "Relevant Department",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sid1",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sid2",
                        "sourceRef": "id1",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sid3",
                        "sourceRef": "id17",
                        "targetRef": "id13",
                        "condition": "Rejection"
                    },
                    {
                        "id": "sid4",
                        "sourceRef": "id17",
                        "targetRef": "id2",
                        "condition": "Proceed"
                    },
                    {
                        "id": "sid5",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sid6",
                        "sourceRef": "id2",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sid7",
                        "sourceRef": "id18",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "sid8",
                        "sourceRef": "id18",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "sid9",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sid10",
                        "sourceRef": "id4",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sid11",
                        "sourceRef": "id19",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "sid12",
                        "sourceRef": "id19",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "sid13",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sid14",
                        "sourceRef": "id6",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sid15",
                        "sourceRef": "id20",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "sid16",
                        "sourceRef": "id20",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "sid17",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sid18",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sid19",
                        "sourceRef": "id10",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sid20",
                        "sourceRef": "id21",
                        "targetRef": "id11",
                        "condition": "Yes"
                    },
                    {
                        "id": "sid21",
                        "sourceRef": "id21",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "sid22",
                        "sourceRef": "id11",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sid23",
                        "sourceRef": "id12",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when an application is received by the recruitment department at ADOmoney Bank. The first step is to review the application documents. Following this, a preselection is conducted. If the applicant does not pass the preselection, a rejection is created, and the process ends with the applicant being rejected after preselection.\n\nIf the applicant passes the preselection, the application documents are examined in detail. At this point, it is determined whether the position is a key position. If it is a key position, a telephone interview is conducted. If it is not a key position, an appointment for a personal interview is communicated via email.\n\nAfter the telephone interview, the appointment for the personal interview is communicated via email. Once a suitable date is found, the appointment and documents are forwarded to the relevant department. The personal interview is then conducted.\n\nFollowing the personal interview, a decision is made on the applicant's suitability for the assessment center. If the applicant is deemed suitable, the process continues with scheduling an appointment for the assessment center and planning and preparing the assessment center. The assessment center is then conducted.\n\nAfter the assessment center, a vote on the applicant is taken. Based on the vote, if the applicant is accepted, an acceptance letter is drafted, and the process ends with the applicant being accepted. If the applicant is rejected, a rejection letter is drafted, and the process ends with the applicant being rejected after the assessment center.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Review application documents",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct preselection",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create rejection after preselection",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Examine application documents in detail",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct telephone interview",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Communicate appointment for personal interview via email",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Forward appointment and documents to relevant department",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Conduct personal interview",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Decide on suitability for assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Schedule appointment for assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Plan and prepare assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Conduct assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Vote on the applicant",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Draft acceptance letter",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Draft rejection letter",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Application received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Applicant rejected after preselection",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Suitable date found",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Accepted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Rejected after assessment center",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Key position?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id24",
                        "name": "ADOmoney Bank",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Recruitment Department",
                                "elemRefs": [
                                    "id16",
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id21",
                                    "id5",
                                    "id6",
                                    "id18",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id22",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id23",
                                    "id14",
                                    "id15",
                                    "id17",
                                    "id19",
                                    "id20"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id21",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id21",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id18",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id22",
                        "condition": "yes"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id9",
                        "targetRef": "id13",
                        "condition": "no"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id22",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id22",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id13",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id23",
                        "targetRef": "id14",
                        "condition": "accepted"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id23",
                        "targetRef": "id15",
                        "condition": "rejected"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id14",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id15",
                        "targetRef": "id20"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "90_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event. The first task is to claim revenue. Following this, a decision is made on whether to ensure self-financing or to receive funding amounts. If the decision is to ensure self-financing, the process continues with ensuring self-financing. If the decision is to receive funding, the process continues with receiving funding amounts. \n\nBoth paths converge at a parallel decision point, where two tasks are initiated simultaneously: gaining a high market share in open-source solutions and generating revenue through additional services. \n\nAfter these tasks, another parallel decision point is reached, leading to the organization of training units and the performance of consulting services. \n\nThe consulting services task leads to generating follow-up projects, which then concludes with an end event. \n\nSimultaneously, the organization of training units also concludes with a separate end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Claim Revenue",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Ensure Self-Financing",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Receive Funding Amounts",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Gain High Market Share in Open-Source Solutions",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Generate Revenue through Additional Services",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Organize Training Units",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Perform Consulting Services",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Generate Follow-Up Projects",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Self-Finance or Receive Funding?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Decision",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Parallel Tasks",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "SoKonow",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Strategy Process",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id12",
                                    "id13",
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id12",
                        "targetRef": "id2",
                        "condition": "Self-Financing"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Receive Funding"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the start event at SoKonow.\n\nThe first step is to claim revenue.\n\nNext, a decision is made on whether to proceed with self-financing or funding.\n\nRegardless of the decision, the process continues with two parallel tasks: gaining a high market share in open-source solutions and generating revenue through additional services.\n\nOnce these tasks are completed, another parallel set of tasks is initiated: organizing training units and performing consulting services.\n\nAfter the consulting services are performed, follow-up projects are generated.\n\nFinally, the process concludes with the revenue being claimed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Claim Revenue",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Gain High Market Share in Open-Source Solutions",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Generate Revenue through Additional Services",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Organize Training Units",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Perform Consulting Services",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Generate Follow-Up Projects",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "Revenue Claimed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gid1",
                        "name": "Self-Financing or Funding?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid2",
                        "name": "Parallel Tasks",
                        "type": "Parallel"
                    },
                    {
                        "id": "gid3",
                        "name": "Training and Consulting",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pid1",
                        "name": "SoKonow",
                        "lanes": [
                            {
                                "id": "lid1",
                                "name": "Strategy Process",
                                "elemRefs": [
                                    "id1",
                                    "gid1",
                                    "gid2",
                                    "id2",
                                    "id3",
                                    "gid3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "eid1",
                                    "eid2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "gid1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "gid1",
                        "targetRef": "gid2",
                        "condition": "Self-Financing"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "gid1",
                        "targetRef": "gid2",
                        "condition": "Funding"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "gid2",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "gid2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id2",
                        "targetRef": "gid3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id3",
                        "targetRef": "gid3"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "gid3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gid3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "eid2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event at SoKonow.\n\nThe first step is to claim revenue.\n\nNext, a decision is made on whether to ensure self-financing or to receive funding amounts.\n\nRegardless of the decision, the process continues with parallel activities to gain a high market share in open-source solutions and to generate revenue through additional services.\n\nOnce both activities are completed, the process proceeds with organizing training units and performing consulting services in parallel.\n\nAfter performing consulting services, follow-up projects are generated.\n\nFinally, the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Claim Revenue",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Gain high market share in open-source solutions",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Generate revenue through additional services",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Organize training units",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Perform consulting services",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Generate follow-up projects",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Self-financing or funding amounts",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Parallel Activities",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel Activities",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "SoKonow",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Strategy Process",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id10",
                        "condition": "Ensure Self-financing"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id10",
                        "condition": "Receive Funding Amounts"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "74_ground_truth.json": {
        "0": {
            "text": "The process begins when a student starts their search for books at a PC in the library. After finding the desired books, the student proceeds to the checkout counter. At the checkout counter, a library staff member checks the student's ID. If the ID is valid, the student receives the books and then leaves the library. If the ID is not valid, the student leaves the library without the books.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search for books at PC",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Go to checkout counter",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check student's ID",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Receive books",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Leave library",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Leave library without books",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Is ID valid?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id9",
                        "name": "Library Process",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Student",
                                "elemRefs": [
                                    "id1",
                                    "id2"
                                ]
                            },
                            {
                                "id": "id11",
                                "name": "Library Staff",
                                "elemRefs": [
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id4",
                        "condition": "valid"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id8",
                        "targetRef": "id7",
                        "condition": "not valid"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a student initiates the search for books on a PC. After searching for books on the PC, the student continues to search for books manually. Once the student has found the books, the library staff checks the student's ID. The process then reaches a decision point where the validity of the student's ID is assessed. If the ID is valid, the process concludes successfully. If the ID is not valid, the process ends without success.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search for books on PC",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Search for books",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check student's ID",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id4",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Is ID valid?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id8",
                        "name": "Library Process",
                        "lanes": [
                            {
                                "id": "id9",
                                "name": "Student",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id10",
                                "name": "Library Staff",
                                "elemRefs": [
                                    "id3",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id4",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id5",
                        "condition": "valid"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id7",
                        "targetRef": "id6",
                        "condition": "not valid"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a student enters the library. The student first searches for books on a PC. After finding the desired books, the student proceeds to the checkout counter. At the checkout counter, a library staff member checks the student's ID. If the ID is valid, the student receives the books and then leaves the library. If the ID is not valid, the student leaves the library without receiving the books.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search for books on PC",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Go to checkout counter",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check student's ID",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Receive books",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Student enters library",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Leave library",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "ID valid?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id8",
                        "name": "Library Process",
                        "lanes": [
                            {
                                "id": "id9",
                                "name": "Student",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4"
                                ]
                            },
                            {
                                "id": "id10",
                                "name": "Library Staff",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id4",
                        "condition": "Valid"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id7",
                        "targetRef": "id6",
                        "condition": "Not valid"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "49_ground_truth.json": {
        "0": {
            "text": "The process begins when the customer places an order for food. The order is then communicated to the waiter. The waiter sends the order to the sous chef in the kitchen. The sous chef manages the order of cooking and then the chef starts cooking the food. Once the food is cooked, it is sent to the sous chef for checking. The sous chef checks the food and then calls the waiter to grab the food. The waiter then sends and communicates the food to the customer. Finally, the customer receives and enjoys the food, marking the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Place order for food",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Communicate order to waiter",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send order to sous chef",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Manage order of cooking",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Start cooking food",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send food to sous chef for checking",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check food",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Call waiter to grab food",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send and communicate food to customer",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Receive and enjoy food",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "customer",
                                "elemRefs": [
                                    "id1",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Waiter",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "waiter",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Kitchen",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "sous chef",
                                "elemRefs": [
                                    "id4",
                                    "id7",
                                    "id6"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "chef",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a customer places an order at the restaurant. The order is then communicated to the waiter. The waiter sends the order to the sous chef in the kitchen. The kitchen staff manages the order of cooking and starts cooking the food. Once the food is ready, it is sent for checking. The food is checked and the waiter is notified. The waiter then sends the food to the customer. Finally, the customer receives and enjoys the food, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Communicate Order to Waiter",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send Order to Sous Chef",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Manage Order of Cooking",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Start Cooking",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Food for Checking",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check Food and Notify Waiter",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send Food to Customer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive and Enjoy Food",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "p1",
                        "name": "Restaurant",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "Customer",
                                "elemRefs": [
                                    "id1",
                                    "id9"
                                ]
                            },
                            {
                                "id": "l2",
                                "name": "Waiter",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id8"
                                ]
                            },
                            {
                                "id": "l3",
                                "name": "Kitchen",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a customer places an order for food. The order is then communicated to the waiter. The waiter sends the order to the sous chef, who manages the order of cooking. The chef starts cooking the food. Once the food is cooked, it is sent to the sous chef for checking. The sous chef checks the food and then calls the waiter to grab the food. The waiter sends the food to the customer. Finally, the customer receives and enjoys the food, marking the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Place order for food",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Communicate order to waiter",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send order to sous chef",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Manage order of cooking",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Start cooking food",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send food to sous chef for checking",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check food",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Call waiter to grab food",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send food to customer",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Receive and enjoy food",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Restaurant Process",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer",
                                "elemRefs": [
                                    "id1",
                                    "id10"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Waiter",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id8",
                                    "id9"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Sous Chef",
                                "elemRefs": [
                                    "id4",
                                    "id7"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Chef",
                                "elemRefs": [
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "2_ground_truth.json": {
        "0": {
            "text": "The process begins when parts are required in the department at ACME AG. The first step is to check if the parts are in stock. If the parts are in stock, they are retrieved from storage, and the process ends with the parts being retrieved from storage. If the parts are not in stock, the requirements are specified and quantified. Following this, a purchase order is completed. The purchase order is then checked by central purchasing. If the vendor is known, an order template is created from the purchase order. If the vendor is not known, a new vendor is created. After the order template is created, the purchase order is approved by the approver. Following approval, the receipt of goods takes place by central purchasing and the process ends with the parts being procured. In the event of an escalation with delivery problems during the receipt of goods, the order status is adjusted and the process will end with the order being cancelled due to delivery issues.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check if the parts are in stock",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve parts from storage",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and quantify requirements",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Complete a purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create order template from purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create vendor",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Approve purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receipt of goods",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Adjust order status",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Parts required",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Parts retrieved from storage",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Parts procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Cancelled due to delivery issues",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Delivery problems",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Vendor known?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id18",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id19",
                                "name": "Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id11",
                                    "id12",
                                    "id16"
                                ]
                            },
                            {
                                "id": "id20",
                                "name": "Central Purchasing",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id9",
                                    "id10",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id17"
                                ]
                            },
                            {
                                "id": "id21",
                                "name": "Approver",
                                "elemRefs": [
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id16",
                        "targetRef": "id2",
                        "condition": "Parts in stock"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id16",
                        "targetRef": "id3",
                        "condition": "Parts not in stock"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id17",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id9",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id15",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event in the department at ACME AG. The first task is to check if the parts are in stock. If the parts are in stock, they are retrieved from storage, and the process ends with the parts being retrieved. If the parts are not in stock, the requirements are specified and quantified. Following this, a purchase order is completed. The purchase order is then checked by central purchasing. If the vendor is known, an order template is created from the purchase order. If the vendor is not known, a new vendor is created. After the order template is created, the purchase order is approved by the approver. Following approval, the receipt of goods takes place by central purchasing. If there is an escalation, the order status is adjusted, and the process ends with the order being cancelled due to delivery issues. If there is no escalation, the process ends with the parts being procured.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check if parts are in stock",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve parts from storage",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and quantify requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Complete purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check purchase order by central purchasing",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create order template from purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create new vendor",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Approve purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receipt of goods by central purchasing",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Adjust order status",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Parts retrieved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Parts procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Order cancelled due to delivery issues",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Parts in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Vendor known?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Escalation?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id18",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id19",
                                "name": "Department",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id11"
                                ]
                            },
                            {
                                "id": "id20",
                                "name": "Central Purchasing",
                                "elemRefs": [
                                    "id5",
                                    "id9",
                                    "id10",
                                    "id13",
                                    "id16",
                                    "id17"
                                ]
                            },
                            {
                                "id": "id21",
                                "name": "Approver",
                                "elemRefs": [
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "name": "Yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "name": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "name": "Yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id16",
                        "targetRef": "id7",
                        "name": "No"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id17",
                        "targetRef": "id10",
                        "name": "Yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id17",
                        "targetRef": "id13",
                        "name": "No"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event at ACME AG. The first task is to check if the parts are in stock. If the parts are in stock, they are retrieved from storage, and the process ends with the parts being retrieved from storage. If the parts are not in stock, the requirements are specified and quantified. Following this, a purchase order is completed. The purchase order is then checked by central purchasing. If the vendor is known, an order template is created. If the vendor is not known, a new vendor is created, and then the order template is created. After the order template is created, the purchase order is approved by the approver. Following approval, the receipt of goods takes place by central purchasing, and the process ends with the parts being procured. In the event of an escalation with delivery problems during the receipt of goods, the order status is adjusted, and the process will end with the order being cancelled due to delivery issues.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check if parts are in stock",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve parts from storage",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and quantify requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Complete purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create order template",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create new vendor",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Approve purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receipt of goods",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Adjust order status",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Parts retrieved from storage",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Parts procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Order cancelled due to delivery issues",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Delivery problems",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Parts in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Vendor known?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id18",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id19",
                                "name": "Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id11",
                                    "id12",
                                    "id16"
                                ]
                            },
                            {
                                "id": "id20",
                                "name": "Central Purchasing",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id9",
                                    "id10",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id17"
                                ]
                            },
                            {
                                "id": "id21",
                                "name": "Approver",
                                "elemRefs": [
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id16",
                        "targetRef": "id2",
                        "condition": "Parts in stock"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id16",
                        "targetRef": "id3",
                        "condition": "Parts not in stock"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "Vendor known"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id17",
                        "targetRef": "id7",
                        "condition": "Vendor not known"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id15",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "61_ground_truth.json": {
        "0": {
            "text": "The process begins with the application for IMIS. The first step is to go to the FH-SWF website. Next, the search criteria are defined. The applicant then selects the Master Study Course, selects Informatics and Digitalisation, and selects Campus Soest. Following this, the applicant clicks on 'Find a Study Course' and then clicks on 'Learn more' on the IMIS banner. The applicant then selects the Master Study Course and clicks on 'See how to apply here'.\n\nAt this point, the process checks if the applicant is an EU applicant. If the applicant is not an EU applicant, they apply via Uni-Assist, check the application procedure, and send the required documents to Uni-Assist. They then wait to get a decision within 10-12 weeks.\n\nIf the applicant is an EU applicant, they apply via the FH-SWF Online Portal and send the required documents and contact the IMIS office. If the applicant is an FH-SWF student or graduate, they apply via the FH-SWF Online Portal and contact the IMIS office. In both cases, they wait to get a decision within 4-6 weeks.\n\nThe process concludes with the receipt of an admission or rejection letter.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Go to the fh-swf website",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Define search criteria",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Master Study Course, Select Informatics and Digitalisation, Select Campus Soest",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Click on 'Find a Study Course'",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Click on 'Learn more' on IMIS banner",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Select Master Study Course and Click on 'See how to apply here'",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Apply via Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check the application procedure and send required documents to Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Wait to get a decision within 10-12 weeks",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Apply via the FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send required documents and contact the IMIS office",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Apply via the FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Contact the IMIS office",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Wait to get a decision within 4-6 weeks",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Application for IMIS",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "Receipt of admission/rejection letter",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "EU applicant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "name": "FH-SWF student or graduate?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Undergraduate Student",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Application Process",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "gw1",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "gw2",
                                    "id14",
                                    "start",
                                    "end"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "gw1",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "gw1",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "gw1",
                        "targetRef": "gw2",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "gw2",
                        "targetRef": "id12",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id9",
                        "targetRef": "end"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id14",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with an undergraduate student initiating an application for the IMIS program. The student first goes to the FH-SWF website and defines their search criteria. They then simultaneously select the Master Study Course, select Informatics and Digitalisation as the subject area, and select Campus Soest. After these selections, the student clicks on 'Find a Study Course' and then clicks on 'Learn more' on the IMIS banner. The student then selects the Master Study Course and clicks on 'See how to apply here'.\n\nNext, the student determines if they are an EU applicant. If the student is a non-EU applicant, they apply via Uni-Assist, check the application procedure, and send the required documents to Uni-Assist. They then wait for a decision, which takes 10-12 weeks, and the process ends with the receipt of an admission or rejection letter.\n\nIf the student is an EU applicant, they determine if they are an FH-SWF student or graduate. If they are not an FH-SWF student or graduate, they apply via the FH-SWF Online Portal, send the required documents, and contact the IMIS office. They then wait for a decision, which takes 4-6 weeks, and the process ends with the receipt of an admission or rejection letter.\n\nIf the student is an FH-SWF student or graduate, they follow the same steps as other EU applicants: applying via the FH-SWF Online Portal, sending the required documents, and contacting the IMIS office. They then wait for a decision, which takes 4-6 weeks, and the process ends with the receipt of an admission or rejection letter.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Go to FH-SWF website",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Define search criteria",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Select Informatics and Digitalisation as subject area",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Select Campus Soest",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Click on 'Find a Study Course'",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Click on 'Learn more' on IMIS banner",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Select the Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Click on 'See how to apply here'",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Determine if EU Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Apply via Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Check application procedure and send required documents to Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Wait for decision (10-12 weeks)",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Apply via FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Send required documents and contact IMIS office",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Wait for decision (4-6 weeks)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "idStart",
                        "name": "Application for IMIS",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "idEnd",
                        "name": "Receipt of admission/rejection letter",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idGateway1",
                        "name": "Select simultaneously",
                        "type": "Parallel"
                    },
                    {
                        "id": "idGateway2",
                        "name": "EU Applicant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idGateway3",
                        "name": "FH-SWF Student/Graduate?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Undergraduate Student",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "idStart",
                                    "idEnd",
                                    "idGateway1",
                                    "idGateway2",
                                    "idGateway3"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "idStart",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "idGateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "idGateway1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "idGateway1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "idGateway1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id10",
                        "targetRef": "id11",
                        "condition": "Non-EU Applicant"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id13",
                        "targetRef": "idEnd"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id10",
                        "targetRef": "idGateway3",
                        "condition": "EU Applicant"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "idGateway3",
                        "targetRef": "id14",
                        "condition": "Not FH-SWF Student/Graduate"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "idGateway3",
                        "targetRef": "id14",
                        "condition": "FH-SWF Student/Graduate"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "id16",
                        "targetRef": "idEnd"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when an undergraduate student decides to apply for the IMIS program. The first step is to go to the FH-SWF website. Once there, the student defines their search criteria. They then select the Master Study Course and choose Informatics and Digitalisation as the subject area. Next, the student selects Campus Soest and clicks on 'Find a Study Course'. After this, they click on 'Learn more' on the IMIS banner and select the Master Study Course. The student then clicks on 'See how to apply here'.\n\nAt this point, the student must determine if they are an EU applicant or not. If the student is a non-EU/international applicant, they apply via Uni-Assist, check the application procedure, and send the required documents to Uni-Assist. They then wait for a decision, which takes approximately 10-12 weeks. The process ends with the receipt of an admission or rejection letter.\n\nIf the student is an EU applicant, they must determine if they are an FH-SWF student or graduate. If they are not an FH-SWF student or graduate, they apply via the FH-SWF Online Portal, send the required documents, and contact the IMIS office. They then wait for a decision, which takes approximately 4-6 weeks. The process ends with the receipt of an admission or rejection letter.\n\nIf the student is an FH-SWF student or graduate, they send the required documents and contact the IMIS office directly. They then wait for a decision, which takes approximately 4-6 weeks. The process ends with the receipt of an admission or rejection letter.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Go to fh-swf website",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Define search criteria",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Select Informatics and Digitalisation as subject area",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Select Campus Soest",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Click on 'Find a Study Course'",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Click on 'Learn more' on IMIS banner",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Select the Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Click on 'See how to apply here'",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Determine if EU applicant",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Apply via Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Check application procedure and send documents to Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Wait for decision (10-12 weeks)",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Apply via FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Send required documents and contact IMIS office",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Wait for decision (4-6 weeks)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Application for IMIS by Undergraduate Student",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Receipt of admission/rejection letter",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id19",
                        "name": "Determine EU or non-EU applicant",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Is FH-SWF student/graduate",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id19",
                        "targetRef": "id11",
                        "condition": "Non-EU/International Applicant"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id19",
                        "targetRef": "id20",
                        "condition": "EU Applicant"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id13",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id20",
                        "targetRef": "id14",
                        "condition": "Non-FH-SWF student/graduate"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id20",
                        "targetRef": "id15",
                        "condition": "FH-SWF student/graduate"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id16",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "33_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event, which triggers the analysis of technology needs. Once the technology needs are analyzed, the process splits into two parallel tasks: conducting a market analysis and generating ideas. Both tasks are performed simultaneously.\n\nAfter the market analysis is conducted and ideas are generated, the process converges, and the ideas are reviewed. Following the review of ideas, the next step is to pass the idea to project management.\n\nAt this point, a decision is made on whether to approve the idea. If the idea is approved, it is noted, and the process ends. If the idea is rejected, the process also ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze technology needs",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct market analysis",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Generate ideas",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review ideas",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Pass idea to project management",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Approve idea",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Reject idea",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Note approval",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Approve idea?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "approve"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "reject"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the analysis of technology needs by an employee at SoKnow. Following this, the process splits into parallel paths. One path involves conducting a market analysis, while the other involves generating ideas. \n\nThe results of the market analysis are then passed to project management. Simultaneously, the generated ideas are reviewed by the employee. After the review, the ideas are also passed to project management.\n\nProject management then makes an approval decision. If the idea is not approved, the process ends with the idea being rejected. If the idea is approved, the approval is noted, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze technology needs",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct market analysis",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Generate ideas",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review ideas",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Pass idea to project management",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Approve idea",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Reject idea",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Note approval",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Approval decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel processing",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "Employee",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4"
                                ]
                            },
                            {
                                "id": "l2",
                                "name": "Project Management",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "Not approved"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id11",
                        "targetRef": "id8",
                        "condition": "Approved"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event at SoKnow.\n\nFirst, an employee analyzes the technology needs.\n\nFollowing this, the employee conducts a market analysis.\n\nSimultaneously, developers generate ideas based on the technology needs.\n\nThe generated ideas are then reviewed by the employee.\n\nAfter the review, the ideas are passed to project management.\n\nProject management then makes an approval decision.\n\nIf the idea is approved, the approval is noted, and the process ends.\n\nIf the idea is not approved, the idea is rejected, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze technology needs",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct market analysis",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Generate ideas",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review ideas",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Pass idea to project management",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Note approval",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Reject idea",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Approval decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Employee",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id5"
                                ]
                            },
                            {
                                "id": "id13",
                                "name": "Developers",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "id14",
                                "name": "Project Management",
                                "elemRefs": [
                                    "id10",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id6",
                        "condition": "approved"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "not approved"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "55_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event in the field operations lane of the Viticulture in Outdoor Operations pool.\n\nThe first task is to complete the task.\n\nAfter completing the task, it is determined whether the information needs to be passed on.\n\nIf the information does not need to be passed on, the process moves to the technical contact lane where Jane Doe is contacted.\n\nIf the information needs to be passed on, the information is passed on and then documented.\n\nAfter documenting the information, Jane Doe is contacted in the technical contact lane.\n\nOnce Jane Doe is contacted, it is checked whether she is reachable.\n\nIf Jane Doe is reachable, a completion report is submitted, and the process ends.\n\nIf Jane Doe is not reachable, an attempt is made to reach her again, and the process loops back to contacting Jane Doe.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Complete Task",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Pass on Information",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Document Information",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Contact Jane Doe",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Submit Completion Report",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Attempt to Reach Jane Doe Again",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Information to be Passed On?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Jane Doe Reachable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Viticulture in Outdoor Operations",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Field Operations",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Technical Contact",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id10",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event in the Viticulture Outdoor Operations pool. A field employee completes a task. After this task is completed, it is determined whether the information needs to be passed on. If the information needs to be passed on, the field employee passes the information and then documents it. The documented information is then sent to the technical contact, who attempts to contact Jane Doe.\n\nIf the information does not need to be passed on, the field employee directly sends the information to the technical contact, who then attempts to contact Jane Doe.\n\nOnce the technical contact attempts to contact Jane Doe, it is checked whether Jane Doe is reachable. If Jane Doe is reachable, the technical contact submits a completion report, and the process ends with the submission of the completion report.\n\nIf Jane Doe is not reachable, the technical contact repeats attempts to reach Jane Doe, and the process ends with the inability to submit the completion report.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Task completed by field employee",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Pass information",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Document information",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Contact Jane Doe",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Submit completion report",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Repeats attempts to reach Jane Doe",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Submission of completion report",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Cannot submit completion report",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Information needs to be passed on?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Jane Doe reachable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Viticulture Outdoor Operations",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Field Employee",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3"
                                ]
                            },
                            {
                                "id": "id14",
                                "name": "Technical Contact",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first task is to complete the task. After completing the task, a decision is made on whether the information needs to be passed on. If the information needs to be passed on, the next step is to pass on the information. Once the information is passed on, it is then documented. After documenting the information, the next step is to contact Jane Doe.\n\nIf the information does not need to be passed on, the process directly proceeds to contacting Jane Doe. After attempting to contact Jane Doe, another decision is made on whether Jane Doe is reachable. If Jane Doe is reachable, a completion report is submitted, and the process ends with the submission. If Jane Doe is not reachable, the process loops back to attempting to contact Jane Doe again, and if unsuccessful, the process ends without submission.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Complete task",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Pass on information",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Document information",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Contact Jane Doe",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Submit completion report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "End with submission",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "End with no submission",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Information to be passed on?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Jane Doe reachable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gateway1",
                        "targetRef": "task2",
                        "condition": "yes"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "task4",
                        "condition": "no"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task4",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway2",
                        "targetRef": "task5",
                        "condition": "yes"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway2",
                        "targetRef": "task4",
                        "condition": "no"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task5",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task4",
                        "targetRef": "event3"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "64_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event, which triggers the creation of an application. Once the application is created, it is received by the appropriate party. The next step involves controlling the document to ensure it meets the necessary standards.\n\nAt this point, a decision is made to determine if the document is complete. If the document is complete, it is accepted, and the process concludes with the completion of providing the document.\n\nIf the document is incomplete, it is returned for further action. The missing information is then completed, and the document is admitted. Finally, the process ends with the completion of providing the document.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Control Document",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Accept Document",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Return Document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Complete Missing Information",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Admit Document",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "evt1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "evt2",
                        "name": "Complete Providing",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Document Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "evt1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gw1",
                        "targetRef": "id4",
                        "condition": "complete"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id4",
                        "targetRef": "evt2"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gw1",
                        "targetRef": "id5",
                        "condition": "incomplete"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id7",
                        "targetRef": "evt2"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the creation of an application. Once the application is created, it is received by the appropriate party. The next step involves controlling the document to ensure its accuracy and completeness. \n\nAt this point, a decision is made to determine if the document is complete. If the document is incomplete, it is returned to the applicant for further action. The applicant then admits the document, and the process concludes with the end event indicating that the providing is completed.\n\nIf the document is complete, the process directly concludes with the end event, indicating that the providing is completed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Control Document",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Return to Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Admit Document",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Providing Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Document Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id9",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id8",
                        "targetRef": "id4",
                        "condition": "Document Incomplete"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id7",
                        "condition": "Document Complete"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, where an application is created. Once the application is created, it is received by the appropriate party. The received application is then controlled to check for completeness. \n\nAt this point, a decision is made to determine if the document is complete. If the document is complete, the process ends with the event \"Providing Completed.\"\n\nIf the document is incomplete, it is returned to the applicant. The applicant then completes the missing information. Once the missing information is provided, the document is admitted, and the process ends with the event \"Providing Finished.\"",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Create Application",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Receive Application",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Control Document",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Return Document to Applicant",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Complete Missing Information",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Admit Document",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent1",
                        "name": "Providing Completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "endEvent2",
                        "name": "Providing Finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Document Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task3",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "endEvent1",
                        "condition": "Complete"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway1",
                        "targetRef": "task4",
                        "condition": "Incomplete"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task6",
                        "targetRef": "endEvent2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "78_ground_truth.json": {
        "0": {
            "text": "The process begins with the recording of a requirement. Once the requirement is recorded, offers are obtained and reviewed. If the offer exceeds \u20ac2000, it must be approved before proceeding. If the offer does not exceed \u20ac2000, the process moves directly to ordering the goods. After the goods are ordered, it is checked whether the delivery is on time. If the delivery is not on time, a new delivery deadline is set, and the process checks again if the delivery is on time. If the delivery is on time, the goods undergo final acceptance. Following the final acceptance, the goods are sent to goods receipt, where the delivery is inspected. After the inspection, it is determined whether the delivery is complete. If the delivery is complete, the delivery is confirmed, and payment is initiated, concluding the process with the purchase being completed. If the delivery is not complete, the supplier is contacted, and a new delivery is requested. This request triggers an intermediate event for delivery not being on time, which loops back to check if the delivery is on time again.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record requirement",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Obtain and review offers",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Approve offer",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Order goods",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Set new delivery deadline",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Final acceptance of goods",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Send goods to goods receipt",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Inspect delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Confirm delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Initiate payment",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Contact supplier",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Ask for new delivery",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Purchase completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Delivery not on time",
                        "type": "IntermediateEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Offer exceeds \u20ac2000?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Delivery on time?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Delivery complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id16",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id8",
                        "targetRef": "id18"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id18",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id18",
                        "targetRef": "id11",
                        "condition": "no"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the recording of a requirement. Once the requirement is recorded, offers are obtained and reviewed. The process then checks if the offer exceeds \u20ac2000. Regardless of the offer amount, the next step is to order the goods.\n\nAfter ordering the goods, the process checks if the delivery is on time. If the delivery is not on time, a new delivery deadline is set, and the process checks again if the delivery is on time. If the delivery is on time, the final acceptance of goods takes place.\n\nFollowing the final acceptance, the goods are sent to goods receipt, and the delivery is inspected. The process then checks if the delivery is complete. If the delivery is complete, the delivery is confirmed, and payment is initiated, concluding the process.\n\nIf the delivery is not complete, the supplier is contacted, and a new delivery is requested. The process then returns to checking if the delivery is on time.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Record requirement",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Obtain and review offers",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Order goods",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Set new delivery deadline",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Final acceptance of goods",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Send goods to goods receipt",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Inspect delivery",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Confirm delivery",
                        "type": "User"
                    },
                    {
                        "id": "task9",
                        "name": "Initiate payment",
                        "type": "User"
                    },
                    {
                        "id": "task10",
                        "name": "Contact supplier",
                        "type": "User"
                    },
                    {
                        "id": "task11",
                        "name": "Ask for new delivery",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start Process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "End Process",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Offer exceeds \u20ac2000?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Delivery on time?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Delivery complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "task3",
                        "condition": "No"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "task3",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task3",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway2",
                        "targetRef": "task4",
                        "condition": "No"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task4",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway2",
                        "targetRef": "task5",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task6",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task7",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "gateway3",
                        "targetRef": "task8",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "task8",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "task9",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "gateway3",
                        "targetRef": "task10",
                        "condition": "No"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "task10",
                        "targetRef": "task11"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "task11",
                        "targetRef": "gateway2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the recording of a requirement. Once the requirement is recorded, offers are obtained and reviewed. If the offer is greater than \u20ac2000, it needs to be approved. If the offer is not greater than \u20ac2000, the process moves directly to ordering the goods. After the offer is approved, the goods are ordered.\n\nNext, it is checked whether the delivery is on time. If the delivery is on time, the goods undergo final acceptance, followed by sending the goods to goods receipt. The delivery is then inspected. If the delivery is complete, the delivery is confirmed, and payment is initiated. The payment is then forwarded to Accounting/Controlling, and the process ends.\n\nIf the delivery is not on time, a new delivery deadline is set, and the process checks again whether the delivery is on time. If the delivery is not complete, the supplier is contacted and asked for a new delivery, and the process checks again whether the delivery is on time.\n\nIf the delivery is complete, the delivery is confirmed, and payment is initiated. The payment is then forwarded to Accounting/Controlling, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record requirement",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Obtain and review offers",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Approve offer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Order goods",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Set new delivery deadline",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Final acceptance of goods",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send goods to goods receipt",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Inspect delivery",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Confirm delivery",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Contact supplier",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Ask supplier for new delivery",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Initiate payment",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Forward payment to Accounting/Controlling",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Process start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Process end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Delivery on time",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Delivery not on time",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Delivery complete",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Delivery not complete",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Offer > \u20ac2000?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id21",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id21",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id4",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id20",
                        "targetRef": "id16",
                        "condition": "yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id20",
                        "targetRef": "id17",
                        "condition": "no"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id16",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id8",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id22",
                        "targetRef": "id18",
                        "condition": "Delivery complete"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id22",
                        "targetRef": "id19",
                        "condition": "Delivery not complete"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id18",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id19",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id11",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id17",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id5",
                        "targetRef": "id20"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "36_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event, where the consulting team formulates the consulting service. Once this is completed, the team analyzes the workshop results. Following the analysis, the team develops new strategic opportunities. Afterward, they formulate a report with the results and objectives.\n\nThe report is then read and checked by the management team. At this point, an exclusive decision is made. If the report is in order, it is forwarded directly. If the report is not in order, it is corrected and rechecked. After the corrections, another exclusive decision is made to ensure the report is now in order. Once the report is confirmed to be in order, it is forwarded.\n\nThe process concludes with the end event after the report has been forwarded.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Formulate consulting service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Analyze workshop results",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Develop new strategic opportunities",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Formulate report with results and objectives",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Read and check report",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Correct and recheck report",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Forward report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Administration",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Consulting team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "event1",
                                    "event2"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Management team",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id7",
                                    "gw1",
                                    "gw2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gw1",
                        "targetRef": "id7",
                        "condition": "Report in order"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gw1",
                        "targetRef": "id6",
                        "condition": "Report not in order"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gw2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id7",
                        "targetRef": "event2"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, after which the consulting team formulates the consulting service. Following this, the team analyzes the workshop results. Based on the analysis, they develop new strategic opportunities. Once the opportunities are developed, the team formulates a report with the results and objectives.\n\nThe report is then read and checked by the management team. At this point, a decision is made on whether the report is in order. If the report is not in order, it is corrected and then rechecked by the management team. This cycle of correction and checking continues until the report is deemed in order.\n\nOnce the report is in order, it is forwarded by the management team, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Formulate consulting service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Analyze workshop results",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Develop new strategic opportunities",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Formulate report with results and objectives",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Read and check report",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Correct report",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Forward report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Report in order?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pid1",
                        "name": "SoKnow Process",
                        "lanes": [
                            {
                                "id": "lid1",
                                "name": "Consulting team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4"
                                ]
                            },
                            {
                                "id": "lid2",
                                "name": "Management team",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id10",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the consulting team formulating a consulting service. Once this is done, the results of the workshops are analyzed. Following the analysis, new strategic opportunities are developed. After developing these opportunities, a report is formulated with the results and objectives.\n\nThe report is then read and checked by the management team. At this point, a decision is made on whether the report is in order. If the report is in order, the process proceeds with the management team formulating the consulting service again, and the process ends.\n\nIf the report is not in order, corrections are made to the report. After the corrections, the report is read and checked again by the management team, and the decision on whether the report is in order is revisited. This cycle continues until the report is deemed in order, at which point the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Formulate consulting service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Analyze results of workshops",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Develop new strategic opportunities",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Formulate report with results and objectives",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Read and check the report",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Correct the report",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Formulate consulting service",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Is report in order?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Consulting team",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Management team",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway1",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id7",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway1",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "50_ground_truth.json": {
        "0": {
            "text": "The process begins with the initiation of a new marketing campaign. The first step is to plan the focal points. Once the focal points are planned, the next step is to design ideas and define specifications. After the specifications are defined, an order is sent to an external marketing agency. The external marketing agency is then commissioned to create drafts. \n\nOnce the drafts are created, they are received and evaluated by the marketing department. The drafts are then put to a vote. If the vote is negative, new drafts are requested from the external marketing agency, and the process of receiving and evaluating drafts is repeated. If the vote is positive, management is informed.\n\nManagement then evaluates the drafts. If the management evaluation is negative, new drafts are requested again, and the process of receiving and evaluating drafts is repeated. If the management evaluation is positive, the green light is given to proceed. \n\nAfter receiving the green light, the external marketing agency is commissioned for execution. The campaign is then conducted, and the process ends with the marketing campaign being marked as completed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Plan focal points",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Design ideas and define specifications",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send order to external marketing agency",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Commission external marketing agency",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Create drafts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive and evaluate drafts",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Put drafts to vote",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Ask for new drafts",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Inform management",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Re-evaluate drafts",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Give green light",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Commission agency for execution",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Conduct campaign",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "Initiation of new marketing campaign",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "Marketing campaign marked as completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gid1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid2",
                        "name": "Vote positive?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid3",
                        "name": "Management evaluation positive?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pid1",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "lid1",
                                "name": "Management",
                                "elemRefs": [
                                    "id1",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            },
                            {
                                "id": "lid2",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id2",
                                    "id6",
                                    "id7",
                                    "id13",
                                    "eid2"
                                ]
                            },
                            {
                                "id": "lid3",
                                "name": "External Marketing Agency",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id8",
                                    "id12"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "sid1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sid2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sid3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sid4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sid5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sid6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sid7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sid8",
                        "sourceRef": "id7",
                        "targetRef": "gid1"
                    },
                    {
                        "id": "sid9",
                        "sourceRef": "gid1",
                        "targetRef": "id8",
                        "condition": "negative"
                    },
                    {
                        "id": "sid10",
                        "sourceRef": "id8",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sid11",
                        "sourceRef": "gid1",
                        "targetRef": "id9",
                        "condition": "positive"
                    },
                    {
                        "id": "sid12",
                        "sourceRef": "id9",
                        "targetRef": "gid2"
                    },
                    {
                        "id": "sid13",
                        "sourceRef": "gid2",
                        "targetRef": "id8",
                        "condition": "negative"
                    },
                    {
                        "id": "sid14",
                        "sourceRef": "gid2",
                        "targetRef": "id11",
                        "condition": "positive"
                    },
                    {
                        "id": "sid15",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sid16",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sid17",
                        "sourceRef": "id13",
                        "targetRef": "eid2"
                    },
                    {
                        "id": "sid18",
                        "sourceRef": "id6",
                        "targetRef": "gid3"
                    },
                    {
                        "id": "sid19",
                        "sourceRef": "gid3",
                        "targetRef": "id8",
                        "condition": "negative"
                    },
                    {
                        "id": "sid20",
                        "sourceRef": "gid3",
                        "targetRef": "id11",
                        "condition": "positive"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the start of the campaign. Initially, the management plans the focal points. Following this, the marketing department designs ideas and defines specifications. Once the specifications are defined, an order is sent to the external marketing agency, which then commissions the marketing agency to create drafts.\n\nThe drafts are created by the external marketing agency and sent back to the marketing department, where they are received and evaluated. The marketing department then votes on the drafts. If the vote is negative, new drafts are requested from the external marketing agency, and the process of creating drafts and evaluating them is repeated.\n\nIf the vote is positive, the marketing department informs the management. The management then re-evaluates the drafts. If the management's evaluation is negative, new drafts are again requested from the external marketing agency, and the process of creating drafts and evaluating them is repeated.\n\nIf the management's evaluation is positive, the management gives the green light to proceed. The marketing department then conducts the campaign. After the campaign is conducted, the external marketing agency is commissioned for execution, and the process ends with the campaign being completed.",
            "model": {
                "tasks": [
                    {
                        "id": "t1",
                        "name": "Plan Focal Points",
                        "type": "User"
                    },
                    {
                        "id": "t2",
                        "name": "Design Ideas and Define Specifications",
                        "type": "User"
                    },
                    {
                        "id": "t3",
                        "name": "Send Order to External Marketing Agency",
                        "type": "User"
                    },
                    {
                        "id": "t4",
                        "name": "Commission Marketing Agency",
                        "type": "User"
                    },
                    {
                        "id": "t5",
                        "name": "Create Drafts",
                        "type": "Service"
                    },
                    {
                        "id": "t6",
                        "name": "Receive and Evaluate Drafts",
                        "type": "User"
                    },
                    {
                        "id": "t7",
                        "name": "Vote on Drafts",
                        "type": "User"
                    },
                    {
                        "id": "t8",
                        "name": "Request New Drafts",
                        "type": "User"
                    },
                    {
                        "id": "t9",
                        "name": "Inform Management",
                        "type": "User"
                    },
                    {
                        "id": "t10",
                        "name": "Management Re-evaluate Drafts",
                        "type": "User"
                    },
                    {
                        "id": "t11",
                        "name": "Give Green Light",
                        "type": "User"
                    },
                    {
                        "id": "t12",
                        "name": "Conduct Campaign",
                        "type": "User"
                    },
                    {
                        "id": "t13",
                        "name": "Commission Agency for Execution",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Start Campaign",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "Campaign Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Vote Negative?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Management Evaluation Negative?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "Management",
                                "elemRefs": [
                                    "t1",
                                    "t10",
                                    "t11"
                                ]
                            },
                            {
                                "id": "l2",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "t2",
                                    "t3",
                                    "t6",
                                    "t7",
                                    "t8",
                                    "t9",
                                    "t12"
                                ]
                            },
                            {
                                "id": "l3",
                                "name": "External Marketing Agency",
                                "elemRefs": [
                                    "t5",
                                    "t4",
                                    "t13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "t1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "t1",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "t2",
                        "targetRef": "t3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "t3",
                        "targetRef": "t4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "t4",
                        "targetRef": "t5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "t5",
                        "targetRef": "t6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "t6",
                        "targetRef": "t7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "t7",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "g1",
                        "targetRef": "t8",
                        "condition": "Negative Vote"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "t8",
                        "targetRef": "t5"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "g1",
                        "targetRef": "t9",
                        "condition": "Positive Vote"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "t9",
                        "targetRef": "t10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "t10",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "g2",
                        "targetRef": "t8",
                        "condition": "Negative Evaluation"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "g2",
                        "targetRef": "t11",
                        "condition": "Positive Evaluation"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "t11",
                        "targetRef": "t12"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "t12",
                        "targetRef": "t13"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "t13",
                        "targetRef": "e2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the initiation of a new marketing campaign at SoKnow. The management first plans the focal points. Following this, the marketing department designs ideas and defines specifications. Once the specifications are defined, an order is sent to an external marketing agency to commission their services. The external marketing agency then creates drafts based on the order.\n\nThese drafts are received and evaluated by the marketing department. The drafts are then put to a vote. If the vote result is negative, the marketing department asks the external marketing agency for new drafts. The agency creates new drafts and sends them back to the marketing department for evaluation again. This cycle continues until a positive vote result is achieved.\n\nWhen the vote result is positive, the marketing department informs management. Management then re-evaluates the drafts. If management's evaluation is negative, the marketing department asks the external marketing agency for new drafts again. If management's evaluation is positive, the marketing department proceeds to conduct the campaign.\n\nAfter conducting the campaign, the external marketing agency is commissioned for the execution of the campaign. The process concludes with the completion of the marketing campaign.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Plan focal points",
                        "type": "Task"
                    },
                    {
                        "id": "task2",
                        "name": "Design ideas and define specifications",
                        "type": "Task"
                    },
                    {
                        "id": "task3",
                        "name": "Send order to external marketing agency",
                        "type": "Task"
                    },
                    {
                        "id": "task4",
                        "name": "Commission external marketing agency",
                        "type": "Task"
                    },
                    {
                        "id": "task5",
                        "name": "Create drafts",
                        "type": "Task"
                    },
                    {
                        "id": "task6",
                        "name": "Receive and evaluate drafts",
                        "type": "Task"
                    },
                    {
                        "id": "task7",
                        "name": "Put drafts to a vote",
                        "type": "Task"
                    },
                    {
                        "id": "task8",
                        "name": "Ask for new drafts from agency",
                        "type": "Task"
                    },
                    {
                        "id": "task9",
                        "name": "Inform management",
                        "type": "Task"
                    },
                    {
                        "id": "task10",
                        "name": "Re-evaluate drafts",
                        "type": "Task"
                    },
                    {
                        "id": "task11",
                        "name": "Conduct campaign",
                        "type": "Task"
                    },
                    {
                        "id": "task12",
                        "name": "Commission external marketing agency for execution",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Initiation of new marketing campaign",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "drafts_re_evaluated",
                        "name": "Drafts re-evaluated",
                        "type": "IntermediateThrowEvent"
                    },
                    {
                        "id": "campaign_completed",
                        "name": "Marketing campaign completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Vote result",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Management evaluation",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Management",
                                "elemRefs": [
                                    "task1",
                                    "task10"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "task2",
                                    "task3",
                                    "task6",
                                    "task7",
                                    "task9",
                                    "task11"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "External Marketing Agency",
                                "elemRefs": [
                                    "task4",
                                    "task5",
                                    "task8",
                                    "task12"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "messageFlow1",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "messageFlow2",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    },
                    {
                        "id": "messageFlow3",
                        "sourceRef": "task6",
                        "targetRef": "task8"
                    },
                    {
                        "id": "messageFlow4",
                        "sourceRef": "task8",
                        "targetRef": "task5"
                    },
                    {
                        "id": "messageFlow5",
                        "sourceRef": "task9",
                        "targetRef": "task10"
                    },
                    {
                        "id": "messageFlow6",
                        "sourceRef": "task12",
                        "targetRef": "campaign_completed"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task6",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task7",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway1",
                        "targetRef": "task8",
                        "condition": "negative"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway1",
                        "targetRef": "task9",
                        "condition": "positive"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task9",
                        "targetRef": "task10"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task10",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "gateway2",
                        "targetRef": "task8",
                        "condition": "negative"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "gateway2",
                        "targetRef": "task11",
                        "condition": "positive"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "task11",
                        "targetRef": "task12"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "task12",
                        "targetRef": "campaign_completed"
                    }
                ]
            }
        }
    },
    "80_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event in the accounting lane of the Personnel Administration pool. The first step is to start the payroll program. Once the payroll program is started, the process moves on to control automated debits. After controlling the automated debits, the next step is to calculate labor costs. Following the calculation of labor costs, salaries and social contributions are paid. \n\nNext, the process transitions to the finance lane where health insurance and additional costs are paid. After paying health insurance and additional costs, the process returns to the accounting lane to enter bonuses. \n\nOnce bonuses are entered, financial accounting is controlled. After controlling financial accounting, an invoice is sent. The process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Start payroll program",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Control automated debits",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Calculate labor costs",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Pay salaries and social contributions",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Pay health insurance and additional costs",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Enter bonuses",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Control financial accounting",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Send invoice",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Personnel Administration",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Accounting",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            },
                            {
                                "id": "id13",
                                "name": "Finance",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the management of personnel accounting in the Personnel Administration department.\n\nFirst, the payroll program is started.\n\nNext, automated debits are controlled.\n\nFollowing this, labor costs are calculated.\n\nSalaries and social contributions are then paid.\n\nSubsequently, health insurance and additional costs are paid.\n\nBonuses are entered into the system.\n\nFinancial accounting is then controlled.\n\nFinally, an invoice is sent, and the process concludes with the completion of personnel accounting.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Start payroll program",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Control automated debits",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Calculate labor costs",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Pay salaries and social contributions",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Pay health insurance and additional costs",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Enter bonuses",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Control financial accounting",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Send invoice",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Manage personnel accounting",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Complete personnel accounting",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Personnel Administration",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Personnel accounting",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with the start of the payroll program in the personnel department of SoKnow Personnel Administration. \n\nOnce the payroll program is initiated, automated debits are controlled. \n\nFollowing this, labor costs are calculated. \n\nNext, salaries and social contributions are paid. \n\nAfterward, health insurance and additional costs are paid. \n\nBonuses are then entered into the system. \n\nSubsequently, financial accounting is controlled. \n\nFinally, an invoice is sent, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Start payroll program",
                        "type": "Service"
                    },
                    {
                        "id": "task2",
                        "name": "Control automated debits",
                        "type": "Service"
                    },
                    {
                        "id": "task3",
                        "name": "Calculate labor costs",
                        "type": "Service"
                    },
                    {
                        "id": "task4",
                        "name": "Pay salaries and social contributions",
                        "type": "Service"
                    },
                    {
                        "id": "task5",
                        "name": "Pay health insurance and additional costs",
                        "type": "Service"
                    },
                    {
                        "id": "task6",
                        "name": "Enter bonuses",
                        "type": "Service"
                    },
                    {
                        "id": "task7",
                        "name": "Control financial accounting",
                        "type": "Service"
                    },
                    {
                        "id": "task8",
                        "name": "Send invoice",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "SoKnow Personnel Administration",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Personnel Department",
                                "elemRefs": [
                                    "task1",
                                    "task2",
                                    "task3",
                                    "task4",
                                    "task5",
                                    "task6",
                                    "task7",
                                    "task8",
                                    "event1",
                                    "event2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task6",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task7",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task8",
                        "targetRef": "event2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "48_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event, which triggers the order intake. Following the order intake, the next step is to purchase a knowledge management system. Once the system is purchased, adjustment requests are received from the customer company. These requests are then used to make necessary adjustments.\n\nAfter making the adjustments, a notification is sent to the customer company. Subsequently, a search for a test group is conducted. Once the test group is found, tests are conducted, and the results are evaluated.\n\nIf the test results are negative, further adjustments are made, and the tests are conducted again. This loop continues until the test results are positive. When the results are positive, test group workshops are conducted, followed by employee training.\n\nAfter the training, the development department is informed about the adjustment requests. If adjustment requests are received, further adjustments are made, and the customer is informed that the product is finished. If no adjustment requests are received, the customer is directly informed that the product is finished.\n\nOnce the customer is informed, a decision is made on whether the adjustments are satisfactory. If the adjustments are satisfactory, the process loops back to making adjustments. If the adjustments are not satisfactory, the knowledge management system is implemented, and the process concludes with the completion of the order.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Order intake",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase knowledge management system",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Receive adjustment requests from customer company",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Make adjustments",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send notification to customer company",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Search for test group",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct tests",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Evaluate test results",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Make further adjustments and test again",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Conduct test group workshops",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Employee training",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Inform dev department about adjustment requests",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Make further adjustments",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Inform customer that product is finished",
                        "type": "Task"
                    },
                    {
                        "id": "id15",
                        "name": "Implement knowledge management system",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "Completion of the order",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gw1",
                        "targetRef": "id9",
                        "condition": "results are negative"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "gw1",
                        "targetRef": "id10",
                        "condition": "results are positive"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id12",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "gw2",
                        "targetRef": "id13",
                        "condition": "adjustment requests received"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "gw2",
                        "targetRef": "id14",
                        "condition": "no adjustment requests"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id14",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "gw3",
                        "targetRef": "id4",
                        "condition": "adjustments satisfactory"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "gw3",
                        "targetRef": "id15",
                        "condition": "adjustments not satisfactory"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id15",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the order intake in the development department. Following this, the procurement department purchases the knowledge management system. Once the system is purchased, the development department receives adjustment requests. The development department then makes the necessary adjustments and sends a notification to the customer company. \n\nNext, the development department searches for a test group and conducts tests. The test results are then evaluated. If the test results are negative, further adjustments are made, and the tests are conducted again. If the test results are positive, the development department conducts test group workshops and trains employees. \n\nAfter the training, the development department informs the development department about the adjustment requests. If there are adjustment requests, the development department makes the adjustments. If there are no adjustment requests, the customer company is informed that the product is finished. \n\nIf the adjustments are not satisfactory, the development department makes further adjustments. If the adjustments are satisfactory, the knowledge management system is implemented, and the process ends with the completion of the order.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Order Intake",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase Knowledge Management System",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive Adjustment Requests",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Make Adjustments",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Notification to Customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Search for Test Group",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct Tests",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Evaluate Test Results",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Make Further Adjustments",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Conduct Test Group Workshops",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Train Employees",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Inform Development Department About Adjustment Requests",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Inform Customer Product is Finished",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Implement Knowledge Management System",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Make Adjustments After Requests",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end1",
                        "name": "Completion of Order",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "SoKnow Process",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Development Department",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id15"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Customer Company",
                                "elemRefs": [
                                    "id5",
                                    "id13"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Procurement",
                                "elemRefs": [
                                    "id2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "seq1",
                        "sourceRef": "start1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "seq2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "seq3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "seq4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "seq5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "seq6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "seq7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "seq8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "seq9",
                        "sourceRef": "id8",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "seq10",
                        "sourceRef": "gateway1",
                        "targetRef": "id9",
                        "condition": "Negative Test Results"
                    },
                    {
                        "id": "seq11",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "seq12",
                        "sourceRef": "gateway1",
                        "targetRef": "id10",
                        "condition": "Positive Test Results"
                    },
                    {
                        "id": "seq13",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "seq14",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "seq15",
                        "sourceRef": "id12",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "seq16",
                        "sourceRef": "gateway2",
                        "targetRef": "id4",
                        "condition": "Adjustment Requests"
                    },
                    {
                        "id": "seq17",
                        "sourceRef": "gateway2",
                        "targetRef": "id13",
                        "condition": "No Adjustment Requests"
                    },
                    {
                        "id": "seq18",
                        "sourceRef": "id13",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "seq19",
                        "sourceRef": "gateway3",
                        "targetRef": "id4",
                        "condition": "Adjustments Not Satisfactory"
                    },
                    {
                        "id": "seq20",
                        "sourceRef": "gateway3",
                        "targetRef": "id14",
                        "condition": "Adjustments Satisfactory"
                    },
                    {
                        "id": "seq21",
                        "sourceRef": "id14",
                        "targetRef": "end1"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, which triggers the order intake. Once the order is taken in, the next step is to purchase a knowledge management system. After the purchase, adjustment requests are received. These requests are then processed by making the necessary adjustments. Following the adjustments, a notification is sent to the customer.\n\nNext, a search for a test group is conducted. Once a test group is found, tests are conducted. The results of these tests are then evaluated. If the results are negative, further adjustments are made, and the tests are conducted again. If the results are positive, test group workshops are conducted.\n\nAfter the workshops, employees are trained. The development department is then informed about any adjustment requests. If there are adjustment requests, adjustments are made. If there are no adjustment requests, the customer is informed that the product is finished.\n\nOnce the customer is informed, it is checked whether the adjustments are satisfactory. If the adjustments are not satisfactory, the process loops back to making adjustments. If the adjustments are satisfactory, the knowledge management system is implemented. Finally, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Order intake",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase knowledge management system",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive adjustment requests",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Make adjustments",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send notification to customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Search for test group",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct tests",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Evaluate test results",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Make further adjustments",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Conduct test group workshops",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Train employees",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Inform development department about adjustment requests",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Make adjustments",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Inform customer product is finished",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Check if adjustments are satisfactory",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Implement knowledge management system",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id19",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id19",
                        "targetRef": "id9",
                        "condition": "results are negative"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id19",
                        "targetRef": "id10",
                        "condition": "results are positive"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id12",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id20",
                        "targetRef": "id13",
                        "condition": "adjustment requests"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id20",
                        "targetRef": "id14",
                        "condition": "no adjustment requests"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id15",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id21",
                        "targetRef": "id4",
                        "condition": "not satisfactory"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id21",
                        "targetRef": "id16",
                        "condition": "satisfactory"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id16",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "60_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event at SoKnow's Consulting. The consultants first receive new strategies and opportunities. Once they have received the new strategies, they communicate these strategies. Following the communication of the new strategies, the consultants select suitable systems. After selecting the suitable systems, they proceed to implement these systems. Once the systems are implemented, the consultants communicate the systems. Following this, they coordinate the change processes. Finally, the consultants consult with working groups, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "tid1",
                        "name": "Receive new strategies and opportunities",
                        "type": "Task"
                    },
                    {
                        "id": "tid2",
                        "name": "Communicate new strategies",
                        "type": "Task"
                    },
                    {
                        "id": "tid3",
                        "name": "Select suitable systems",
                        "type": "Task"
                    },
                    {
                        "id": "tid4",
                        "name": "Implement suitable systems",
                        "type": "Task"
                    },
                    {
                        "id": "tid5",
                        "name": "Communicate systems",
                        "type": "Task"
                    },
                    {
                        "id": "tid6",
                        "name": "Coordinate change processes",
                        "type": "Task"
                    },
                    {
                        "id": "tid7",
                        "name": "Consult with working groups",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pid1",
                        "name": "SoKnow's Consulting",
                        "lanes": [
                            {
                                "id": "lid1",
                                "name": "Consultants",
                                "elemRefs": [
                                    "tid1",
                                    "tid2",
                                    "tid3",
                                    "tid4",
                                    "tid5",
                                    "tid6",
                                    "tid7",
                                    "eid1",
                                    "eid2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sid1",
                        "sourceRef": "eid1",
                        "targetRef": "tid1"
                    },
                    {
                        "id": "sid2",
                        "sourceRef": "tid1",
                        "targetRef": "tid2"
                    },
                    {
                        "id": "sid3",
                        "sourceRef": "tid2",
                        "targetRef": "tid3"
                    },
                    {
                        "id": "sid4",
                        "sourceRef": "tid3",
                        "targetRef": "tid4"
                    },
                    {
                        "id": "sid5",
                        "sourceRef": "tid4",
                        "targetRef": "tid5"
                    },
                    {
                        "id": "sid6",
                        "sourceRef": "tid5",
                        "targetRef": "tid6"
                    },
                    {
                        "id": "sid7",
                        "sourceRef": "tid6",
                        "targetRef": "tid7"
                    },
                    {
                        "id": "sid8",
                        "sourceRef": "tid7",
                        "targetRef": "eid2"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step is to receive new strategies and opportunities. Once the new strategies and opportunities are received, they are communicated. Following the communication of new strategies, suitable systems are selected. After selecting the suitable systems, they are implemented. Once the suitable systems are implemented, they are communicated. The next step involves coordinating change processes within the project. Finally, consultations with working groups take place, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive new strategies and opportunities",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Communicate new strategies",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select suitable systems",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Implement suitable systems",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Communicate suitable systems",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Coordinate change processes within project",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Consult with working groups",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event at SoKnow Consulting.\n\nFirst, new strategies and opportunities are received.\n\nThese new strategies are then communicated.\n\nNext, suitable systems are selected.\n\nFollowing the selection, the suitable systems are implemented.\n\nOnce the systems are implemented, they are communicated.\n\nThe process continues with the coordination of change processes within the project.\n\nFinally, consultations about the change processes are held in working groups, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive new strategies and opportunities",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Communicate new strategies",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Select suitable systems",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Implement suitable systems",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Communicate implemented systems",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Coordinate change processes within the project",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Consult about change processes in working groups",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "SoKnow Consulting",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Consulting Services",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "32_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event. The first step is to set the discharge date. Once the discharge date is set, three tasks are initiated in parallel: discussing the further course with the patient and relatives, determining medical care needs, and assessing nursing care needs.\n\nAfter these three tasks are completed, they converge, and the next step is to define the supply facility. Following this, an exclusive decision is made to determine if social services are required.\n\nIf no social services are required, the discharge documentation is created directly. If social services are required, further care services are initiated before creating the discharge documentation.\n\nOnce the discharge documentation is created, advanced tasks for discharge are performed. Concurrently, a doctor's letter is created. Finally, the process concludes with the discharge event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Set discharge date",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Discuss further course with patient and relatives",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine medical care needs",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assess nursing care needs",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create doctor's letter",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Define supply facility",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create discharge documentation",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Initiate further care services",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Advanced tasks for discharge",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end1",
                        "name": "Discharge",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "type": "Parallel"
                    },
                    {
                        "id": "gw2",
                        "type": "Parallel"
                    },
                    {
                        "id": "gw3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gw1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gw1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gw1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id2",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id3",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id4",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gw2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id6",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gw3",
                        "targetRef": "id7",
                        "condition": "No social services required"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gw3",
                        "targetRef": "id8",
                        "condition": "Social services required"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id9",
                        "targetRef": "end1"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event in the hospital department. The first step is to set the discharge date by the doctor. \n\nOnce the discharge date is set, three tasks are initiated in parallel. The doctor discusses the further course with the patient and relatives, determines the medical care needs, and the nursing staff assesses the nursing care needs.\n\nAfter discussing the further course with the patient and relatives, determining the medical care needs, and assessing the nursing care needs, the supply facility is defined.\n\nOnce the supply facility is defined, two tasks are initiated in parallel. The doctor checks if social services are required and creates the doctor's letter.\n\nIf social services are required, further care services are initiated. If social services are not required, the discharge documentation is created. \n\nAfter initiating further care services, the discharge documentation is created.\n\nFollowing the creation of the doctor's letter and the discharge documentation, advanced tasks for discharge are performed.\n\nThe process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Set discharge date",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Discuss further course with patient and relatives",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine medical care needs",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assess nursing care needs",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Define supply facility",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create doctor's letter",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check if social services are required",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Initiate further care services",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Create discharge documentation",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Advanced tasks for discharge",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "Hospital Department",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Doctor",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id10"
                                ]
                            },
                            {
                                "id": "id18",
                                "name": "Nursing staff",
                                "elemRefs": [
                                    "id4"
                                ]
                            },
                            {
                                "id": "id19",
                                "name": "Patient and Relatives",
                                "elemRefs": [
                                    "id2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id15",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first task is to set the discharge date. Once the discharge date is set, three tasks are initiated in parallel: discussing the further course with the patient and relatives, determining medical care needs, and assessing nursing care needs.\n\nAfter discussing the further course with the patient and relatives, determining medical care needs, and assessing nursing care needs, the next step is to define the supply facility. Once the supply facility is defined, a doctor's letter is created.\n\nFollowing the creation of the doctor's letter, it is checked whether social services are required. If social services are required, further care services are initiated. If social services are not required, discharge documentation is created directly.\n\nIf further care services are initiated, the next step is to create the discharge documentation. After the discharge documentation is created, advanced tasks for discharge are carried out. Finally, the process ends with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "t1",
                        "name": "Set discharge date",
                        "type": "User"
                    },
                    {
                        "id": "t2",
                        "name": "Discuss further course with patient and relatives",
                        "type": "User"
                    },
                    {
                        "id": "t3",
                        "name": "Determine medical care needs",
                        "type": "User"
                    },
                    {
                        "id": "t4",
                        "name": "Assess nursing care needs",
                        "type": "User"
                    },
                    {
                        "id": "t5",
                        "name": "Define supply facility",
                        "type": "User"
                    },
                    {
                        "id": "t6",
                        "name": "Create doctor's letter",
                        "type": "User"
                    },
                    {
                        "id": "t7",
                        "name": "Check if social services are required",
                        "type": "User"
                    },
                    {
                        "id": "t8",
                        "name": "Initiate further care services",
                        "type": "User"
                    },
                    {
                        "id": "t9",
                        "name": "Create discharge documentation",
                        "type": "User"
                    },
                    {
                        "id": "t10",
                        "name": "Carry out advanced tasks for discharge",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "type": "Parallel"
                    },
                    {
                        "id": "g2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "Department",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "Doctor",
                                "elemRefs": [
                                    "t1",
                                    "t2",
                                    "t3",
                                    "t5",
                                    "t6",
                                    "t7",
                                    "t10"
                                ]
                            },
                            {
                                "id": "l2",
                                "name": "Nursing Staff",
                                "elemRefs": [
                                    "t4"
                                ]
                            },
                            {
                                "id": "l3",
                                "name": "Social Services",
                                "elemRefs": [
                                    "t8",
                                    "t9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "t1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "t1",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "g1",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "g1",
                        "targetRef": "t3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "g1",
                        "targetRef": "t4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "t2",
                        "targetRef": "t5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "t3",
                        "targetRef": "t5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "t4",
                        "targetRef": "t5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "t5",
                        "targetRef": "t6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "t6",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "g2",
                        "targetRef": "t8",
                        "condition": "Social services required"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "g2",
                        "targetRef": "t9",
                        "condition": "Social services not required"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "t8",
                        "targetRef": "t9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "t9",
                        "targetRef": "t10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "t10",
                        "targetRef": "e2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "54_ground_truth.json": {
        "0": {
            "text": "The process begins with the initiation of a World of Warcraft (WoW) subscription. The first step is to send a subscription form. Once the form is sent, the user selects a payment method. At this point, there is a decision to be made regarding the payment method. If the user chooses to pay by credit card, they proceed to enter their credit card information. Alternatively, if the user opts to pay via bank account, they enter their IBAN and BIC numbers. After entering the payment information, regardless of the method chosen, the user submits the payment information. Following the submission, the WoW subscription is activated. The process concludes with the end of the WoW subscription.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send subscription form",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter IBAN and BIC numbers",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit payment information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Activate WoW subscription",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "WoW subscription initiation",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End of WoW subscription",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Payment method selection",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Credit card"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Bank account"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an applicant initiates the subscription process for the WoW Community.\n\nFirst, the applicant sends a subscription form using the online tool for creating characters.\n\nNext, the applicant selects a payment method.\n\nA decision is then made based on the selected payment method. If the applicant chooses to pay by credit card, they proceed to enter their credit card information. Alternatively, if the applicant opts to pay by bank account, they enter their IBAN and BIC numbers.\n\nAfter entering the necessary payment information, the applicant submits the information.\n\nOnce the information is submitted, the online tool for creating characters activates the WoW subscription.\n\nThe process concludes with the end of the WoW subscription.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send subscription form",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter IBAN and BIC numbers",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Activate WoW subscription",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End of WoW subscription",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Payment method decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id10",
                        "name": "WoW Community",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Applicant",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Online Tool for Creating Characters",
                                "elemRefs": [
                                    "id1",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Pay by credit card"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Pay by bank account"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, which triggers the sending of a subscription form. Once the subscription form is sent, the next step is to select a payment method. \n\nAfter selecting the payment method, a decision is made based on the selected method. If a credit card is selected, the process continues with entering credit card information. If a bank account is selected, the process continues with entering IBAN and BIC numbers.\n\nRegardless of the payment method chosen, the next step is to submit the payment information. Once the payment information is submitted, the WoW subscription is activated. The process concludes with the end of the WoW subscription.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send subscription form",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Select payment method",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Enter credit card information",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Enter IBAN and BIC numbers",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Submit payment information",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Activate WoW subscription",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End of WoW subscription",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Payment method selected?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Credit card selected"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Bank account selected"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "65_ground_truth.json": {
        "0": {
            "text": "The process begins when outdated designs are identified by the SoKnow organization.\n\nThe Marketing Department conducts a brainstorming session to generate ideas for new designs.\n\nFollowing the brainstorming session, the Designers design a new element.\n\nThe new design is then reviewed by the Designers.\n\nIf the design is satisfactory, templates are created by the Designers.\n\nIf the design is not satisfactory, the Designers revise the design and it is reviewed again.\n\nOnce the templates are created, they are reviewed by the Marketing Department.\n\nIf the templates are satisfactory, the Marketing Department communicates with management.\n\nIf the templates are not satisfactory, the Designers revise the design and the process continues with the review of the revised design.\n\nManagement then reviews the communication.\n\nIf management approves, the process ends with the new corporate designs being used.\n\nIf management does not approve, the Designers revise the design and the process continues with the review of the revised design.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conduct brainstorming session",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Design new element",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review design",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create templates",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Review templates",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Communicate with management",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Revise the design",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Identify outdated designs",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "New corporate designs used",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Is design satisfactory?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Are templates satisfactory?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Does management approve?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Designers",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when outdated designs are identified by the marketing department at SoKnow. \n\nA brainstorming session is conducted to generate ideas for new designs. Following this, the designers take over to design the new element. \n\nOnce the new element is designed, it is reviewed by the marketing department. If the design is satisfactory, templates are created by the designers. \n\nThese templates are then reviewed by the marketing department. If the templates are satisfactory, communication with management takes place. \n\nManagement then evaluates the overall process. If management is satisfied, the process concludes with the new corporate designs being used. \n\nIf at any point the design or templates are not satisfactory, the designers revise the design and the process loops back to the design phase for further refinement. This iterative process continues until a satisfactory design and templates are achieved, and management approves the new corporate designs.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conduct brainstorming session",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Design new element",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review design",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create templates",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Review templates",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Communicate with management",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Revise design",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Identify outdated designs",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Using new corporate designs",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id8",
                                    "id1",
                                    "id3",
                                    "id5",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Designers",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Satisfactory"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "Not satisfactory"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "Satisfactory"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "Not satisfactory"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id12",
                        "targetRef": "id9",
                        "condition": "Satisfactory"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "Not satisfactory"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with the start event in the Marketing Department of SoKnow. The first step is to conduct a brainstorming session. Following the brainstorming session, the Designers proceed to design a new element. Once the new element is designed, it is reviewed. \n\nIf the design is satisfactory, templates are created. After the templates are created, they are reviewed by the Marketing Department. \n\nIf the templates are satisfactory, communication with management takes place. Management then evaluates the communication. If management is satisfied, the process ends with the new corporate designs being put into use. \n\nIf at any point the design or templates are not satisfactory, the process loops back to the Designers to revise the design, and the cycle continues until a satisfactory outcome is achieved.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conduct brainstorming session",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Design new element",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review design",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create templates",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Review templates",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Communicate with management",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Revise design",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "New corporate designs in use",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Designers",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Satisfactory"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "Not satisfactory"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "Satisfactory"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Not satisfactory"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id9",
                        "condition": "Satisfactory"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id12",
                        "targetRef": "id2",
                        "condition": "Not satisfactory"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "37_ground_truth.json": {
        "0": {
            "text": "The process begins with the HR department organizing employee interviews. Once the interviews are organized, appointment suggestions are sent out. This leads to three parallel activities: conducting the employee interview, making regular inquiries, and confirming the appointment.\n\nWhen the appointment is confirmed, the employee participates in the interview. After the interview is conducted, training is assigned to the employee. The employee then completes the training. \n\nMeanwhile, the regular inquiries continue in parallel. Once the training is completed, the inquiries are made, and the interview is participated in, the process converges. The interview is then marked as conducted, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Organize employee interviews",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Send appointment suggestions",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct employee interview",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Assign training",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Make regular inquiries",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm appointment",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Participate in interview",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Complete training",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Mark interview as conducted",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "HR Department",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "HR Tasks",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Employee",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id8",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the HR department at SoKnow organizing employee interviews. Once the interviews are organized, appointment suggestions are sent out. \n\nThe process then splits into two parallel paths. In the first path, the employee confirms the appointment and participates in the interview. After participating in the interview, the employee completes the training. \n\nIn the second path, the HR department conducts the employee interview and assigns training. The HR department also makes regular inquiries. \n\nOnce the training is completed, the process converges, and the interview is marked as conducted. The process ends with the interview being conducted and the training being completed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Organize employee interviews",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Send appointment suggestions",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct employee interview",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Assign training",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Make regular inquiries",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm appointment",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Participate in interview",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Complete training",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Mark interview as conducted",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Training completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Interview conducted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Employee interview process",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Training process",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id10",
                                    "id12"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "Employee",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id13",
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id14",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the HR Department organizing employee interviews. Once the interviews are organized, appointment suggestions are sent out. This leads to a branching point where three parallel activities occur: conducting the employee interview, making regular inquiries, and confirming the appointment.\n\nIf the appointment is confirmed, the employee participates in the interview. After participating in the interview, the employee completes the training. Once the training is completed, the process moves to a parallel merge point.\n\nSimultaneously, while the interview is being conducted, the HR Department assigns training. The process then ends with the training being completed.\n\nFinally, after the parallel activities of making regular inquiries and completing the training, the process concludes with the employee interview being conducted.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Organize employee interviews",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Send appointment suggestions",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Conduct employee interview",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Assign training",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Confirm appointment",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Participate in interview",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Complete training",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Make regular inquiries",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Training completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Employee interview conducted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "branching",
                        "type": "Parallel"
                    },
                    {
                        "id": "gateway2",
                        "name": "parallel merge",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "SoKnow Process",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "HR Department",
                                "elemRefs": [
                                    "task1",
                                    "task2",
                                    "task3",
                                    "task4",
                                    "event1",
                                    "event2",
                                    "event3",
                                    "gateway1",
                                    "gateway2"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Employee",
                                "elemRefs": [
                                    "task5",
                                    "task6",
                                    "task7",
                                    "task8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway1",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task4",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task6",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task7",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task8",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "gateway2",
                        "targetRef": "event3"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "79_ground_truth.json": {
        "0": {
            "text": "The process begins when the lunch break starts. Frank first chooses his preferred lunch. If he chooses pizza, he then selects the order method. He decides whether to order online or by phone. If he orders online, he waits for the pizza. The pizza delivery person receives the order, prepares the pizza, and delivers it. Frank then receives the pizza, pays for it, and the pizza delivery person accepts the payment.\n\nIf Frank chooses noodles, he starts the noodle preparation. He boils water and prepares the sauce simultaneously. Once the water is boiled, he adds the noodles and cooks them. Meanwhile, he also cooks the sauce. After both the noodles and sauce are ready, he mixes them together. Finally, he eats his meal.\n\nThe process concludes when the lunch break ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose preferred lunch",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select order method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Order online",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Order by phone",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Wait for the pizza",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive order",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Prepare pizza",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Deliver pizza",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Receive pizza",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Pay for pizza",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Accept payment",
                        "type": "Manual"
                    },
                    {
                        "id": "id12",
                        "name": "Start noodle preparation",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Boil water",
                        "type": "Manual"
                    },
                    {
                        "id": "id14",
                        "name": "Prepare sauce",
                        "type": "Manual"
                    },
                    {
                        "id": "id15",
                        "name": "Add noodles",
                        "type": "Manual"
                    },
                    {
                        "id": "id16",
                        "name": "Cook noodles",
                        "type": "Manual"
                    },
                    {
                        "id": "id17",
                        "name": "Cook sauce",
                        "type": "Manual"
                    },
                    {
                        "id": "id18",
                        "name": "Mix noodles and sauce",
                        "type": "Manual"
                    },
                    {
                        "id": "id19",
                        "name": "Eat meal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id20",
                        "name": "Lunch break begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Lunch break ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id22",
                        "name": "Pizza or noodles?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Online or phone?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id24",
                        "name": "Global Car Manufacturing Inc.",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Frank",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id9",
                                    "id10",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id17",
                                    "id18",
                                    "id19",
                                    "id20",
                                    "id22",
                                    "id23"
                                ]
                            },
                            {
                                "id": "id26",
                                "name": "Pizza Delivery Person",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id20",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id22"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id22",
                        "targetRef": "id2",
                        "condition": "chooses pizza"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id22",
                        "targetRef": "id12",
                        "condition": "chooses noodles"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "id23"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id23",
                        "targetRef": "id3",
                        "condition": "order online"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id23",
                        "targetRef": "id4",
                        "condition": "order by phone"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id14",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id16",
                        "targetRef": "id18"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "id19",
                        "targetRef": "id21"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when the lunch break starts. Frank first chooses his preferred lunch. He then decides between pizza and noodles. If he chooses pizza, he selects the order method. He can either order online or by phone. If he orders online, he waits for the pizza to arrive. If he orders by phone, he directly waits for the pizza to arrive. Once the pizza arrives, he receives it and then pays for it. The payment is accepted, and he proceeds to eat his meal. \n\nIf Frank chooses noodles, he starts the noodle preparation. He then either boils water or prepares the sauce. Once the water is boiled and the sauce is prepared, he adds the noodles and cooks them. After cooking, he mixes the noodles with the sauce. Finally, he eats his meal. \n\nThe lunch break ends after he finishes his meal.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose preferred lunch",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select order method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Order online",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Order by phone",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Wait for pizza",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive online order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Prepare pizza",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Deliver the pizza",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Receive pizza",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Pay for pizza",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Accept payment",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Start noodle preparation",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Boil water",
                        "type": "Manual"
                    },
                    {
                        "id": "id14",
                        "name": "Prepare sauce",
                        "type": "Manual"
                    },
                    {
                        "id": "id15",
                        "name": "Add noodles and cook",
                        "type": "Manual"
                    },
                    {
                        "id": "id16",
                        "name": "Mix noodles and sauce",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Eat meal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "idE1",
                        "name": "Lunch break begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "idE2",
                        "name": "Lunch break ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idG1",
                        "name": "Choose pizza or noodles",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idG2",
                        "name": "Select order method",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Global Car Manufacturing Inc.",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Frank",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id9",
                                    "id10",
                                    "id12",
                                    "id16",
                                    "id17"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Pizza Delivery",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id11",
                                    "id13",
                                    "id14",
                                    "id15"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "idE1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "idG1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "idG1",
                        "targetRef": "id2",
                        "condition": "Pizza"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "idG1",
                        "targetRef": "id12",
                        "condition": "Noodles"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "idG2"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "idG2",
                        "targetRef": "id3",
                        "condition": "Online"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "idG2",
                        "targetRef": "id4",
                        "condition": "Phone"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id17",
                        "targetRef": "idE2"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the lunch break starts. Frank first chooses his preferred lunch. He then decides between pizza or noodles. If he chooses pizza, he selects the order method, either online or by phone. If he orders online, he places the order and waits for the pizza. Once the pizza is ready, it is received by the pizza delivery person, who then prepares the pizza, delivers it, and hands it over to Frank. Frank then pays for the pizza, and the payment is accepted by the delivery person.\n\nIf Frank chooses noodles, he starts the preparation by boiling water and preparing the sauce simultaneously. Once the water is boiled, he adds the noodles and cooks them for eight minutes. Meanwhile, the sauce is cooked for ten minutes. After both the noodles and sauce are ready, he mixes them together. Finally, Frank eats his meal, and the lunch break ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose preferred lunch",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Choose pizza or noodles",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Start preparation",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Boil water",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare sauce",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Add noodles and cook for eight minutes",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Cook sauce for ten minutes",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Mix noodles and sauce together",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Eat meal",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Select order method",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Order online",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Order by phone",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Wait for pizza",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Place order",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Receive order",
                        "type": "Manual"
                    },
                    {
                        "id": "id16",
                        "name": "Prepare pizza",
                        "type": "Manual"
                    },
                    {
                        "id": "id17",
                        "name": "Deliver pizza",
                        "type": "Manual"
                    },
                    {
                        "id": "id18",
                        "name": "Hand over pizza",
                        "type": "Manual"
                    },
                    {
                        "id": "id19",
                        "name": "Receive order",
                        "type": "Manual"
                    },
                    {
                        "id": "id20",
                        "name": "Pay for pizza",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Accept payment",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "Lunch break begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "Lunch break ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Pizza or noodles?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg2",
                        "name": "Order method?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Global Car Manufacturing Inc.",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Frank",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id20",
                                    "eid1",
                                    "eid2"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Pizza delivery person",
                                "elemRefs": [
                                    "id15",
                                    "id16",
                                    "id17",
                                    "id18",
                                    "id19",
                                    "id21"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "idg1",
                        "targetRef": "id10",
                        "condition": "Pizza"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "id3",
                        "condition": "Noodles"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id10",
                        "targetRef": "idg2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "idg2",
                        "targetRef": "id11",
                        "condition": "Online"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "idg2",
                        "targetRef": "id12",
                        "condition": "Phone"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id12",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id14",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id18",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id9",
                        "targetRef": "eid2"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "51_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event. The first step is to retrieve the activity representation. Once this is done, the process splits into two parallel paths. In one path, a requirement profile is created, and in the other path, a job posting is created. After both the requirement profile and the job posting are created, the documents are filed. The process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Retrieve activity representation",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create requirement profile",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create job posting",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "File documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Create documents",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id8",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "id1",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id7",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with a start event. The first step is to retrieve the activity representation. Once this is done, the process splits into two parallel tasks. One task involves creating a requirement profile, while the other task involves creating a job posting. Both tasks are carried out simultaneously. After both tasks are completed, the process converges again, and the next step is to file the documents. Finally, the process concludes with an end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Retrieve activity representation",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Create requirement profile",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Create job posting",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "File documents",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "start1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end1",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "",
                        "type": "Parallel"
                    },
                    {
                        "id": "gateway2",
                        "name": "",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gateway1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id4",
                        "targetRef": "end1"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the HR Personnel Clerk in the HR Department starting the process.\n\nThe first step is to retrieve the activity representation.\n\nOnce the activity representation is retrieved, the process splits into two parallel tasks.\n\nOne task involves creating a requirement profile, while the other task involves creating a job posting.\n\nAfter both the requirement profile and the job posting are created, the process converges back into a single flow.\n\nThe next step is to file the documents.\n\nFinally, the process ends with the completion of filing the documents.",
            "model": {
                "tasks": [
                    {
                        "id": "t1",
                        "name": "Retrieve activity representation",
                        "type": "User"
                    },
                    {
                        "id": "t2",
                        "name": "Create requirement profile",
                        "type": "User"
                    },
                    {
                        "id": "t3",
                        "name": "Create job posting",
                        "type": "User"
                    },
                    {
                        "id": "t4",
                        "name": "File documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "g2",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "HR Department",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "HR Personnel Clerk",
                                "elemRefs": [
                                    "e1",
                                    "t1",
                                    "g1",
                                    "t2",
                                    "t3",
                                    "g2",
                                    "t4",
                                    "e2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "t1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "t1",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "g1",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "g1",
                        "targetRef": "t3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "t2",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "t3",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "g2",
                        "targetRef": "t4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "t4",
                        "targetRef": "e2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "81_ground_truth.json": {
        "0": {
            "text": "The process begins when a sales enquiry is received by the sales department at Accentis.\n\nThe first step is to determine the type of customer. If the customer is inbound, a contact is created. If the customer is outbound, the enquiry is updated.\n\nFollowing either the creation of a contact or the updating of the enquiry, a decision is made on customer approval. If the customer is qualified, the process proceeds to price qualification and interest. If the customer is not qualified, the enquiry status is updated to \"Not approved,\" and the process ends.\n\nAfter price qualification and interest, customer approval is sent. Once customer approval is received, a decision is made on the approval of the price. If the price is approved, a quote is created. If the price is not approved, the enquiry status is updated to \"Not approved,\" and the process ends.\n\nFollowing the creation of a quote, a requirements analysis is conducted. The enquiry status is then updated, and a job is created. The process concludes with the completion of job creation.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enquiry created",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Contact created",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Enquiry updated",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Price qualification and interest",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send customer approval",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Receive customer approval",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Update enquiry status - Not approved",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Create quote",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Conduct requirements analysis",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Update enquiry status",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Create job",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Sales enquiry received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Process ends",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Job creation completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Customer type?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Decision on customer approval",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Decision on quote",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id18",
                        "name": "Accentis",
                        "lanes": [
                            {
                                "id": "id19",
                                "name": "Sales",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14"
                                ]
                            },
                            {
                                "id": "id20",
                                "name": "Customer",
                                "elemRefs": [
                                    "id2",
                                    "id3"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "customer is inbound"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "customer is outbound"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "qualified"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id16",
                        "targetRef": "id7",
                        "condition": "not qualified"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id17",
                        "condition": "price approved"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id17",
                        "targetRef": "id8",
                        "condition": "price approved"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id17",
                        "targetRef": "id7",
                        "condition": "price not approved"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a sales enquiry is received by the Sales Department at Accentis. The first decision point is to determine whether the enquiry is inbound or outbound. If the enquiry is inbound, a contact is created. If the enquiry is outbound, the enquiry is updated.\n\nAfter either creating a contact or updating the enquiry, the next step is to check if the price is approved. If the price is approved, a quote is created. If the price is not approved, the enquiry status is updated, and the process ends with the enquiry not being approved.\n\nOnce the quote is created, a requirements analysis is conducted. Following the requirements analysis, the enquiry status is updated again. After updating the enquiry status, a job is created, and the process ends with the job being created.\n\nAdditionally, if customer approval is required, the process includes sending the customer approval. Once customer approval is received, the process returns to the decision point to check if the price is approved. If the price is approved, the process continues with creating a quote, conducting requirements analysis, updating the enquiry status, creating a job, and ending with the job being created. If the price is not approved, the enquiry status is updated, and the process ends with the enquiry not being approved.",
            "model": {
                "tasks": [
                    {
                        "id": "id_t1",
                        "name": "Create contact",
                        "type": "User"
                    },
                    {
                        "id": "id_t2",
                        "name": "Update enquiry",
                        "type": "User"
                    },
                    {
                        "id": "id_t3",
                        "name": "Create enquiry",
                        "type": "User"
                    },
                    {
                        "id": "id_t4",
                        "name": "Send customer approval",
                        "type": "User"
                    },
                    {
                        "id": "id_t5",
                        "name": "Create quote",
                        "type": "User"
                    },
                    {
                        "id": "id_t6",
                        "name": "Conduct requirements analysis",
                        "type": "User"
                    },
                    {
                        "id": "id_t7",
                        "name": "Update enquiry status",
                        "type": "User"
                    },
                    {
                        "id": "id_t8",
                        "name": "Create job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id_e1",
                        "name": "Sales enquiry received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id_e2",
                        "name": "End process - Job created",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id_e3",
                        "name": "Customer approval received",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id_e4",
                        "name": "End process - Enquiry not approved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id_g1",
                        "name": "Inbound or Outbound?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id_g2",
                        "name": "Price approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Accentis",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Sales Department",
                                "elemRefs": [
                                    "id_t1",
                                    "id_t2",
                                    "id_t3",
                                    "id_t4",
                                    "id_t5",
                                    "id_t6",
                                    "id_t7",
                                    "id_t8",
                                    "id_e1",
                                    "id_e2",
                                    "id_e3",
                                    "id_e4",
                                    "id_g1",
                                    "id_g2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "seq1",
                        "sourceRef": "id_e1",
                        "targetRef": "id_g1"
                    },
                    {
                        "id": "seq2",
                        "sourceRef": "id_g1",
                        "targetRef": "id_t1",
                        "condition": "Inbound"
                    },
                    {
                        "id": "seq3",
                        "sourceRef": "id_g1",
                        "targetRef": "id_t2",
                        "condition": "Outbound"
                    },
                    {
                        "id": "seq4",
                        "sourceRef": "id_t1",
                        "targetRef": "id_g2"
                    },
                    {
                        "id": "seq5",
                        "sourceRef": "id_t2",
                        "targetRef": "id_g2"
                    },
                    {
                        "id": "seq6",
                        "sourceRef": "id_t3",
                        "targetRef": "id_t4"
                    },
                    {
                        "id": "seq7",
                        "sourceRef": "id_t4",
                        "targetRef": "id_e3"
                    },
                    {
                        "id": "seq8",
                        "sourceRef": "id_e3",
                        "targetRef": "id_g2"
                    },
                    {
                        "id": "seq9",
                        "sourceRef": "id_g2",
                        "targetRef": "id_t5",
                        "condition": "Approved"
                    },
                    {
                        "id": "seq10",
                        "sourceRef": "id_g2",
                        "targetRef": "id_t7",
                        "condition": "Not Approved"
                    },
                    {
                        "id": "seq11",
                        "sourceRef": "id_t7",
                        "targetRef": "id_e4"
                    },
                    {
                        "id": "seq12",
                        "sourceRef": "id_t5",
                        "targetRef": "id_t6"
                    },
                    {
                        "id": "seq13",
                        "sourceRef": "id_t6",
                        "targetRef": "id_t7"
                    },
                    {
                        "id": "seq14",
                        "sourceRef": "id_t7",
                        "targetRef": "id_t8"
                    },
                    {
                        "id": "seq15",
                        "sourceRef": "id_t8",
                        "targetRef": "id_e2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, which triggers the receipt of a sales enquiry request. Upon receiving the enquiry, a contact is created, and the enquiry is updated. Both actions lead to a decision point.\n\nAt this decision point, if the conditions are met, an enquiry is created. This leads to another decision point where the price approval is evaluated. If the client does not approve the price, the enquiry status is updated accordingly, and the process ends.\n\nIf the price is approved, a quote is created, followed by conducting a requirements analysis. After the analysis, the enquiry status is updated, and a job is created. Finally, the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create a contact",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Update the enquiry",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create enquiry",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create a quote",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct requirements analysis",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Update enquiry status (client does not approve)",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Update enquiry status",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Create job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "receiveEnquiry",
                        "name": "Receive sales enquiry request",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "customerApprovalReceived",
                        "name": "Customer approval received",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "priceApproved",
                        "name": "Client does not approve",
                        "type": "IntermediateNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Decision Point",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Decision Point",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Accentis",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer Interaction",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "start",
                                    "receiveEnquiry",
                                    "customerApprovalReceived",
                                    "priceApproved"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Sales",
                                "elemRefs": [
                                    "id3",
                                    "gateway1",
                                    "id4",
                                    "id5",
                                    "id7",
                                    "gateway2",
                                    "id6",
                                    "end"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Job Management",
                                "elemRefs": [
                                    "id8",
                                    "end"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "receiveEnquiry"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "receiveEnquiry",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "receiveEnquiry",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id3",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway2",
                        "targetRef": "id6",
                        "condition": "Price not approved"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway2",
                        "targetRef": "id4",
                        "condition": "Price approved"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id8",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "0_ground_truth.json": {
        "0": {
            "text": "The process begins when an application is received by the Human Resources Department at ACME AG. \n\nFirst, a receipt confirmation is sent to the applicant. Following this, the applicant is verified. \n\nNext, the application status is determined by the Head of Human Resources. \n\nIf the application is rejected, a rejection notice is sent to the applicant, and the process ends with the applicant being rejected. \n\nIf the application is accepted, an invitation to a job interview is sent to the applicant. \n\nAfter the invitation, an employment agreement is prepared. \n\nSubsequently, a job interview is conducted. \n\nFollowing the interview, the applicant's suitability is determined. \n\nIf the applicant is found not suitable, a rejection notice is sent to the applicant, and the process ends with the applicant being rejected. \n\nIf the applicant is found suitable, an employment contract is sent to the applicant. \n\nThe process then waits for the signed employment contract to be returned. \n\nOnce the signed employment contract is received, the process ends with the signed employment contract being received.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send receipt confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify applicant",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine application status",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection to applicant",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send invitation to job interview",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare employment agreement",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct job interview",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Determine applicant's suitability",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send employment contract to applicant",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Wait for signed employment contract",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Application received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Applicant rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Signed employment contract received",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Is application accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Is applicant suitable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Human Resources Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15"
                                ]
                            },
                            {
                                "id": "id18",
                                "name": "Head of Human Resources",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id19",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Applicant",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "rejected"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "accepted"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id15",
                        "targetRef": "id4",
                        "condition": "not suitable"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "suitable"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an application is received by the Human Resources Department at ACME AG.\n\nFirst, a receipt confirmation is sent to the applicant.\n\nNext, the applicant is verified.\n\nBased on the verification, a decision is made. If the applicant is rejected, a rejection notification is sent, and the process ends with the applicant being rejected.\n\nIf the applicant is accepted, an invitation to a job interview is sent.\n\nFollowing this, an employment agreement is prepared.\n\nThe job interview is then conducted.\n\nAfter the interview, another decision is made. If the applicant is found not suitable, a rejection notification is sent, and the process ends with the applicant being rejected.\n\nIf the applicant is found suitable, an employment contract is sent.\n\nThe process then waits for the signed employment contract to be returned.\n\nOnce the signed employment contract is received, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send receipt confirmation",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Verify applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Send rejection notification",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send invitation to job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare employment agreement",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Send employment contract",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Wait for signed employment contract",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Application received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Applicant rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Signed employment contract received",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Human Resources Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Head of Human Resources",
                                "elemRefs": [
                                    "id3",
                                    "id7",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "rejected"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id4",
                        "condition": "accepted"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id3",
                        "condition": "not suitable"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "suitable"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when an applicant submits their application, triggering the start event.\n\nFirst, the Human Resources Department sends a receipt confirmation to the applicant.\n\nNext, the applicant is verified.\n\nFollowing verification, the application status is determined by the Head of Human Resources.\n\nAt this point, an exclusive decision is made. If the application is rejected, a rejection notice is sent to the applicant, and the process ends with the applicant being rejected.\n\nIf the application is accepted, an invitation to a job interview is sent to the applicant.\n\nThe Human Resources Department then prepares the employment agreement.\n\nA job interview is carried out.\n\nAfter the interview, the suitability of the applicant is determined.\n\nAnother exclusive decision is made. If the applicant is deemed not suitable, a rejection notice is sent, and the process ends with the applicant being rejected.\n\nIf the applicant is deemed suitable, an employment contract is sent to the applicant.\n\nThe process then waits for the signed employment contract to be returned.\n\nOnce the signed employment contract is received, the process ends with the signed employment contract being received.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send receipt confirmation",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Verify applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Determine application status",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send invitation to job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare employment agreement",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Carry out job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Determine suitability",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Send employment contract",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Wait for signed employment contract",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End - Applicant Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End - Signed Employment Contract Received",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Human Resources Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id12",
                                    "id13"
                                ]
                            },
                            {
                                "id": "id19",
                                "name": "Applicant",
                                "elemRefs": [
                                    "id4",
                                    "id11"
                                ]
                            },
                            {
                                "id": "id20",
                                "name": "Head of Human Resources",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "Application Rejected"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "Application Accepted"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id15",
                        "targetRef": "id4",
                        "condition": "Applicant Not Suitable"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "Applicant Suitable"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    }
                ]
            }
        }
    },
    "63_ground_truth.json": {
        "0": {
            "text": "The process begins when a booking request is received by the Taxi Booking System.\n\nFirst, the customer service operator checks the data provided by the customer.\n\nIf the necessary data is not sent, the process ends with a cancellation message being sent.\n\nIf the data is complete, the customer service operator checks for available cars.\n\nIf no cars are available in the next 30 minutes, the process ends with a cancellation message being sent.\n\nIf a car is available, the system displays a list of options.\n\nThe customer service operator then picks the nearest car with the client.\n\nNext, the system calculates the time of arrival.\n\nFinally, the customer service operator books the taxi, and the process ends with a booking confirmation being sent.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check data provided by customer",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for available cars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Display list of options",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Pick nearest car with client",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Calculate time of arrival",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Book taxi",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Booking request received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Booking confirmation sent",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Cancellation message sent",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Taxi Booking System",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Customer Service Operator",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id14",
                                "name": "Taxi System",
                                "elemRefs": [
                                    "id5",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id9",
                        "condition": "Necessary data not sent"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "Data complete"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "No cars available in next 30 minutes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "Car available"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a booking request is received from the customer. The customer service operator first checks the data provided by the user. If the data is incomplete, a cancellation message is sent, and the process ends with the booking being cancelled due to incomplete data.\n\nIf the data is complete, the customer service operator checks for available cars. If no cars are available within 30 minutes, a cancellation message is sent, and the process ends with the booking being cancelled due to unavailability.\n\nIf cars are available within 30 minutes, the system displays a list of available options. The customer service operator then picks the nearest car. The system calculates the time of arrival, and the customer service operator proceeds to book the taxi. Finally, the system sends a booking confirmation, and the process ends with the booking being confirmed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check data provided by user",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for available cars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send cancellation message",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Display list of available options",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Pick nearest car",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Calculate time of arrival",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Book taxi",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send booking confirmation",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Booking request received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Booking confirmed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Booking cancelled due to incomplete data",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Booking cancelled due to unavailability",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Data complete?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Cars available in 30 minutes?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "Taxi Booking System",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Taxi System",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id6",
                                    "id8",
                                    "id12"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "Customer Service Operator",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5",
                                    "id7"
                                ]
                            },
                            {
                                "id": "id18",
                                "name": "Customer",
                                "elemRefs": [
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id13",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id13",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id14",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a booking request is received by the taxi booking system. The customer service operator first checks the data provided by the user. If the data is incomplete, a cancellation message is sent to the customer, ending the process. If the data is complete, the operator checks for available cars. If no cars are available, another cancellation message is sent to the customer, ending the process. If cars are available, the taxi system displays a list of options. The customer service operator then picks the nearest car. The system calculates the time of arrival, and the operator proceeds to book the taxi. Finally, a booking confirmation is sent to the customer, concluding the process.",
            "model": {
                "tasks": [
                    {
                        "id": "id2",
                        "name": "Check data provided by user",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check for available cars",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Display a list of options",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Pick the nearest car",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Calculate time of arrival",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Book the taxi",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id1",
                        "name": "Booking Request Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id3",
                        "name": "Cancellation message to customer",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "Cancellation message to customer",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Booking Confirmation Sent",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Data complete?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "Cars Available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Taxi Booking System",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer Service Operator",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id9",
                                    "id11"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Taxi System",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id5",
                                    "id6",
                                    "id10",
                                    "id12",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id7",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id7",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id8",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id8",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "19_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event. The first step is to perform a BKR check and a Jane Doe check in parallel. If both checks are accepted, a credibility check is performed. If either check is not accepted, a rejection letter is sent to the client, and the process ends.\n\nIf the credibility check is accepted, the credibility assessment is reviewed. If the assessment is accepted, the client is called to complement the information. If the client picks up the call, a loan offer is created and then checked. If the client does not pick up the call, an intermediate event waits for one hour before attempting to call the client again.\n\nAfter the loan offer is checked, it is sent to the client. If the client accepts the offer, a welcome letter is sent. If the client does not accept the offer within one hour, the offer is sent again. Once the welcome letter is sent, the loan application is activated, validated, and the initial payment is executed. Finally, the documents are returned to the client, and the process ends.\n\nIf the credibility check is not accepted, a rejection letter is sent to the client, and the process ends. If the client does not pick up the call, an intermediate event waits for one hour before attempting to call the client again. If the client accepts the offer, a welcome letter is sent. If the client does not accept the offer within one hour, the offer is sent again. Once the welcome letter is sent, the loan application is activated, validated, and the initial payment is executed. Finally, the documents are returned to the client, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "sid-1",
                        "name": "Perform BKR check",
                        "type": "Task"
                    },
                    {
                        "id": "sid-2",
                        "name": "Perform Jane Doe check",
                        "type": "Task"
                    },
                    {
                        "id": "sid-3",
                        "name": "Perform credibility check",
                        "type": "Task"
                    },
                    {
                        "id": "sid-4",
                        "name": "Review credibility assessment",
                        "type": "Task"
                    },
                    {
                        "id": "sid-5",
                        "name": "Send rejection letter",
                        "type": "Task"
                    },
                    {
                        "id": "sid-6",
                        "name": "Call client to complement information",
                        "type": "Task"
                    },
                    {
                        "id": "sid-7",
                        "name": "Create loan offer",
                        "type": "Task"
                    },
                    {
                        "id": "sid-8",
                        "name": "Check loan offer",
                        "type": "Task"
                    },
                    {
                        "id": "sid-9",
                        "name": "Send loan offer to client",
                        "type": "Task"
                    },
                    {
                        "id": "sid-10",
                        "name": "Send welcome letter",
                        "type": "Task"
                    },
                    {
                        "id": "sid-11",
                        "name": "Activate loan application",
                        "type": "Task"
                    },
                    {
                        "id": "sid-12",
                        "name": "Validate loan activation",
                        "type": "Task"
                    },
                    {
                        "id": "sid-13",
                        "name": "Execute initial payment",
                        "type": "Task"
                    },
                    {
                        "id": "sid-14",
                        "name": "Return documents to client",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "sid-15",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "sid-16",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "sid-17",
                        "name": "Wait one hour",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "sid-18",
                        "name": "Client does not pick up call",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "sid-19",
                        "name": "Client does not accept offer within one hour",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "sid-20",
                        "name": "Client accepts offer",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "sid-21",
                        "name": "Assessments accepted?",
                        "type": "Parallel"
                    },
                    {
                        "id": "sid-22",
                        "name": "Credibility confirmed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "sid-23",
                        "name": "Assessment accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "sid-24",
                        "name": "Client picked up call?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "sid-25",
                        "name": "Offer accepted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "sid-26",
                        "name": "DLL",
                        "lanes": [
                            {
                                "id": "sid-27",
                                "name": "Risk Manager",
                                "elemRefs": [
                                    "sid-1",
                                    "sid-2",
                                    "sid-3",
                                    "sid-4"
                                ]
                            },
                            {
                                "id": "sid-28",
                                "name": "Senior Risk Manager",
                                "elemRefs": [
                                    "sid-4"
                                ]
                            },
                            {
                                "id": "sid-29",
                                "name": "Administrator",
                                "elemRefs": [
                                    "sid-5",
                                    "sid-10",
                                    "sid-14"
                                ]
                            },
                            {
                                "id": "sid-30",
                                "name": "Customer Relation Team",
                                "elemRefs": [
                                    "sid-6",
                                    "sid-6"
                                ]
                            },
                            {
                                "id": "sid-31",
                                "name": "Finance Team",
                                "elemRefs": [
                                    "sid-11",
                                    "sid-12",
                                    "sid-13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sid-32",
                        "sourceRef": "sid-15",
                        "targetRef": "sid-21"
                    },
                    {
                        "id": "sid-33",
                        "sourceRef": "sid-21",
                        "targetRef": "sid-1"
                    },
                    {
                        "id": "sid-34",
                        "sourceRef": "sid-21",
                        "targetRef": "sid-2"
                    },
                    {
                        "id": "sid-35",
                        "sourceRef": "sid-1",
                        "targetRef": "sid-22"
                    },
                    {
                        "id": "sid-36",
                        "sourceRef": "sid-2",
                        "targetRef": "sid-22"
                    },
                    {
                        "id": "sid-37",
                        "sourceRef": "sid-22",
                        "targetRef": "sid-3",
                        "condition": "yes"
                    },
                    {
                        "id": "sid-38",
                        "sourceRef": "sid-22",
                        "targetRef": "sid-5",
                        "condition": "no"
                    },
                    {
                        "id": "sid-39",
                        "sourceRef": "sid-3",
                        "targetRef": "sid-23"
                    },
                    {
                        "id": "sid-40",
                        "sourceRef": "sid-23",
                        "targetRef": "sid-4",
                        "condition": "yes"
                    },
                    {
                        "id": "sid-41",
                        "sourceRef": "sid-23",
                        "targetRef": "sid-5",
                        "condition": "no"
                    },
                    {
                        "id": "sid-42",
                        "sourceRef": "sid-4",
                        "targetRef": "sid-6",
                        "condition": "accepted"
                    },
                    {
                        "id": "sid-43",
                        "sourceRef": "sid-6",
                        "targetRef": "sid-24"
                    },
                    {
                        "id": "sid-44",
                        "sourceRef": "sid-24",
                        "targetRef": "sid-7",
                        "condition": "yes"
                    },
                    {
                        "id": "sid-45",
                        "sourceRef": "sid-24",
                        "targetRef": "sid-18",
                        "condition": "no"
                    },
                    {
                        "id": "sid-46",
                        "sourceRef": "sid-7",
                        "targetRef": "sid-8"
                    },
                    {
                        "id": "sid-47",
                        "sourceRef": "sid-8",
                        "targetRef": "sid-9"
                    },
                    {
                        "id": "sid-48",
                        "sourceRef": "sid-9",
                        "targetRef": "sid-25"
                    },
                    {
                        "id": "sid-49",
                        "sourceRef": "sid-25",
                        "targetRef": "sid-10",
                        "condition": "yes"
                    },
                    {
                        "id": "sid-50",
                        "sourceRef": "sid-25",
                        "targetRef": "sid-19",
                        "condition": "no"
                    },
                    {
                        "id": "sid-51",
                        "sourceRef": "sid-19",
                        "targetRef": "sid-9"
                    },
                    {
                        "id": "sid-52",
                        "sourceRef": "sid-10",
                        "targetRef": "sid-11"
                    },
                    {
                        "id": "sid-53",
                        "sourceRef": "sid-11",
                        "targetRef": "sid-12"
                    },
                    {
                        "id": "sid-54",
                        "sourceRef": "sid-12",
                        "targetRef": "sid-13"
                    },
                    {
                        "id": "sid-55",
                        "sourceRef": "sid-13",
                        "targetRef": "sid-14"
                    },
                    {
                        "id": "sid-56",
                        "sourceRef": "sid-14",
                        "targetRef": "sid-16"
                    },
                    {
                        "id": "sid-57",
                        "sourceRef": "sid-18",
                        "targetRef": "sid-17"
                    },
                    {
                        "id": "sid-58",
                        "sourceRef": "sid-17",
                        "targetRef": "sid-6"
                    },
                    {
                        "id": "sid-59",
                        "sourceRef": "sid-20",
                        "targetRef": "sid-10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step is to perform both a BKR check and a Jane Doe check. \n\nIf both assessments are accepted, a credibility check is performed. If either assessment is rejected, a rejection letter is sent to the client, and the process ends.\n\nIf the credibility check is accepted, the credibility assessment is reviewed. If the credibility check is rejected, a rejection letter is sent to the client, and the process ends.\n\nAfter reviewing the credibility assessment, the client is called to complement the information. If the client picks up the call, a loan offer is created. If the client does not pick up the call, another attempt is made to call the client.\n\nOnce the loan offer is created, it is checked and then sent to the client. The process then waits for the client to accept the offer.\n\nIf the offer is accepted, a welcome letter is sent to the client, and the loan application is activated. The loan activation is then validated, and the initial payment is executed. Finally, the documents are returned to the client, and the process ends.\n\nIf the offer is not accepted, a reminder is sent to the client to accept the offer, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id_1",
                        "name": "Perform BKR check",
                        "type": "User"
                    },
                    {
                        "id": "id_2",
                        "name": "Perform Jane Doe check",
                        "type": "User"
                    },
                    {
                        "id": "id_3",
                        "name": "Credibility check",
                        "type": "User"
                    },
                    {
                        "id": "id_4",
                        "name": "Review credibility assessment",
                        "type": "User"
                    },
                    {
                        "id": "id_5",
                        "name": "Send rejection letter",
                        "type": "User"
                    },
                    {
                        "id": "id_6",
                        "name": "Call client to complement information",
                        "type": "User"
                    },
                    {
                        "id": "id_7",
                        "name": "Create loan offer",
                        "type": "User"
                    },
                    {
                        "id": "id_8",
                        "name": "Check loan offer",
                        "type": "User"
                    },
                    {
                        "id": "id_9",
                        "name": "Send loan offer to client",
                        "type": "User"
                    },
                    {
                        "id": "id_10",
                        "name": "Send welcome letter",
                        "type": "User"
                    },
                    {
                        "id": "id_11",
                        "name": "Activate loan application",
                        "type": "User"
                    },
                    {
                        "id": "id_12",
                        "name": "Validate loan activation",
                        "type": "User"
                    },
                    {
                        "id": "id_13",
                        "name": "Execute initial payment",
                        "type": "User"
                    },
                    {
                        "id": "id_14",
                        "name": "Return documents to client",
                        "type": "User"
                    },
                    {
                        "id": "id_15",
                        "name": "Remind client of offer acceptance",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway_1",
                        "name": "Both assessments accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway_2",
                        "name": "Credibility confirmed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway_3",
                        "name": "Assessment accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway_4",
                        "name": "Client picks up call?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway_5",
                        "name": "Offer accepted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool_1",
                        "name": "DLL",
                        "lanes": [
                            {
                                "id": "lane_1",
                                "name": "Risk Manager",
                                "elemRefs": [
                                    "id_1",
                                    "id_2",
                                    "gateway_1",
                                    "id_3",
                                    "gateway_2"
                                ]
                            },
                            {
                                "id": "lane_2",
                                "name": "Senior Risk Manager",
                                "elemRefs": [
                                    "id_4",
                                    "gateway_3"
                                ]
                            },
                            {
                                "id": "lane_3",
                                "name": "Customer Relations",
                                "elemRefs": [
                                    "id_6",
                                    "gateway_4"
                                ]
                            },
                            {
                                "id": "lane_4",
                                "name": "Administrator",
                                "elemRefs": [
                                    "id_5",
                                    "id_10",
                                    "id_14"
                                ]
                            },
                            {
                                "id": "lane_5",
                                "name": "Finance Department",
                                "elemRefs": [
                                    "id_11",
                                    "id_12",
                                    "id_13"
                                ]
                            },
                            {
                                "id": "lane_6",
                                "name": "Client",
                                "elemRefs": [
                                    "gateway_5",
                                    "id_7",
                                    "id_8",
                                    "id_9",
                                    "id_15"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow_1",
                        "sourceRef": "start_event",
                        "targetRef": "gateway_1"
                    },
                    {
                        "id": "flow_2",
                        "sourceRef": "gateway_1",
                        "targetRef": "id_1"
                    },
                    {
                        "id": "flow_3",
                        "sourceRef": "gateway_1",
                        "targetRef": "id_2"
                    },
                    {
                        "id": "flow_4",
                        "sourceRef": "id_1",
                        "targetRef": "gateway_2"
                    },
                    {
                        "id": "flow_5",
                        "sourceRef": "id_2",
                        "targetRef": "gateway_2"
                    },
                    {
                        "id": "flow_6",
                        "sourceRef": "gateway_2",
                        "targetRef": "id_3",
                        "condition": "accepted"
                    },
                    {
                        "id": "flow_7",
                        "sourceRef": "gateway_2",
                        "targetRef": "id_5",
                        "condition": "rejected"
                    },
                    {
                        "id": "flow_8",
                        "sourceRef": "id_3",
                        "targetRef": "gateway_3"
                    },
                    {
                        "id": "flow_9",
                        "sourceRef": "gateway_3",
                        "targetRef": "id_4",
                        "condition": "accepted"
                    },
                    {
                        "id": "flow_10",
                        "sourceRef": "gateway_3",
                        "targetRef": "id_5",
                        "condition": "rejected"
                    },
                    {
                        "id": "flow_11",
                        "sourceRef": "id_4",
                        "targetRef": "id_6"
                    },
                    {
                        "id": "flow_12",
                        "sourceRef": "id_6",
                        "targetRef": "gateway_4"
                    },
                    {
                        "id": "flow_13",
                        "sourceRef": "gateway_4",
                        "targetRef": "id_7",
                        "condition": "picked up"
                    },
                    {
                        "id": "flow_14",
                        "sourceRef": "gateway_4",
                        "targetRef": "id_6",
                        "condition": "not picked up"
                    },
                    {
                        "id": "flow_15",
                        "sourceRef": "id_7",
                        "targetRef": "id_8"
                    },
                    {
                        "id": "flow_16",
                        "sourceRef": "id_8",
                        "targetRef": "id_9"
                    },
                    {
                        "id": "flow_17",
                        "sourceRef": "id_9",
                        "targetRef": "gateway_5"
                    },
                    {
                        "id": "flow_18",
                        "sourceRef": "gateway_5",
                        "targetRef": "id_10",
                        "condition": "accepted"
                    },
                    {
                        "id": "flow_19",
                        "sourceRef": "gateway_5",
                        "targetRef": "id_15",
                        "condition": "not accepted"
                    },
                    {
                        "id": "flow_20",
                        "sourceRef": "id_10",
                        "targetRef": "id_11"
                    },
                    {
                        "id": "flow_21",
                        "sourceRef": "id_11",
                        "targetRef": "id_12"
                    },
                    {
                        "id": "flow_22",
                        "sourceRef": "id_12",
                        "targetRef": "id_13"
                    },
                    {
                        "id": "flow_23",
                        "sourceRef": "id_13",
                        "targetRef": "id_14"
                    },
                    {
                        "id": "flow_24",
                        "sourceRef": "id_14",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, after which two checks are performed in parallel: a BKR check and a Jane Doe check by the Risk Manager. \n\nOnce both checks are completed, an exclusive decision is made based on the results. If both checks are accepted, a credibility check is performed. \n\nIf the credibility check is confirmed, another exclusive decision is made. If the credibility assessment is accepted, the Senior Risk Manager reviews the credibility assessment. \n\nIf the assessment is rejected, a rejection letter is sent to the client. \n\nIf the credibility assessment is accepted, the Customer Relation Team calls the client. \n\nIf the client picks up the call, a loan offer is created. If the client does not pick up, the process waits for one hour before attempting to call the client again. \n\nAfter the loan offer is created, it is checked and then sent to the client. \n\nAn exclusive decision is made based on the client's response. If the offer is accepted, a welcome letter is sent to the client. If the offer is not accepted, the process waits for one hour before attempting to call the client again. \n\nAfter the welcome letter is sent, the Finance Department activates the loan application, validates the loan activation, and executes the initial payment. \n\nFinally, the documents are returned to the client, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Perform BKR Check",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Perform Jane Doe Check",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review Credibility Assessment",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Call Client",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send Loan Offer to Client",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Welcome Letter",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Validate Loan Activation",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Return Documents to Client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Wait 1 Hour",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Offer Accepted",
                        "type": "IntermediateEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "type": "Parallel"
                    },
                    {
                        "id": "gw2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw5",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "DLL",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Risk Manager",
                                "elemRefs": [
                                    "id1",
                                    "id2"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Senior Risk Manager",
                                "elemRefs": [
                                    "id4",
                                    "id5"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Customer Relation Team",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id9"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Administrator",
                                "elemRefs": [
                                    "id5",
                                    "id10",
                                    "id14"
                                ]
                            },
                            {
                                "id": "lane5",
                                "name": "Finance Department",
                                "elemRefs": [
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id15",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "gw1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gw1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id1",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gw2",
                        "targetRef": "id3",
                        "condition": "Both Accepted"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id3",
                        "targetRef": "gw3",
                        "condition": "Confirmed"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gw3",
                        "targetRef": "id4",
                        "condition": "Accepted"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gw3",
                        "targetRef": "id5",
                        "condition": "Rejected"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id4",
                        "targetRef": "id6",
                        "condition": "Accepted"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id7",
                        "condition": "Picked up"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id6",
                        "targetRef": "id17",
                        "condition": "Not picked up"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id17",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id9",
                        "targetRef": "gw4"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "gw4",
                        "targetRef": "id10",
                        "condition": "Accepted"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "gw4",
                        "targetRef": "id17",
                        "condition": "Not accepted"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "57_ground_truth.json": {
        "0": {
            "text": "The process begins when an application arrives at the Savings Bank. The HR team sends a receipt confirmation to the applicant. Next, the HR team reviews the application to determine if it is in order. If the application is not in order, a rejection notice is sent to the applicant, and the process ends. If the application is in order, it is evaluated by the IT department to assess the applicant's suitability.\n\nIf the applicant is not suitable, a rejection notice is sent. If the applicant is suitable, the HR team prepares and conducts an interview. After the interview, it is determined whether the applicant declines the invitation. If the applicant declines, the application documents are archived, and the process ends. If the applicant accepts the invitation, the HR team evaluates if the applicant is good.\n\nIf the applicant is not good, a rejection notice is sent. If the applicant is good, the HR team puts the applicant on the list and selects them. The application is then sent to the board of directors for approval. If the approval is not granted, a rejection notice is sent. If the approval is granted, the HR team confirms the applicant and prepares the contract.\n\nThe contract is then signed by the applicant. After signing, the HR team occupies the position in the system, and the process ends with the application process being completed. If the applicant declines the job offer after the contract preparation, the application documents are archived, and the process ends. If the applicant accepts the job offer, the process ends with the application process being completed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send receipt confirmation",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Review application",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Send rejection notice",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Evaluate by IT department",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare and conduct interview",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Archive application documents",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Put applicant on the list and select",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Obtain approval from the board of directors",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Confirm applicant and prepare contract",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Sign contract",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Occupy position in the system",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Application arrives",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Application process completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Is Application in order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Is Applicant suitable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Does Applicant decline invitation?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Is Applicant good?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Is Approval granted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Does Applicant decline position?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Savings Bank",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "HR Team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id6"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "IT Department",
                                "elemRefs": [
                                    "id4"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Board of Directors",
                                "elemRefs": [
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "Not in order"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id15",
                        "targetRef": "id4",
                        "condition": "In order"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id16",
                        "targetRef": "id3",
                        "condition": "Not suitable"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "Suitable"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "Declines invitation"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id17",
                        "targetRef": "id18",
                        "condition": "Accepts invitation"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id18",
                        "targetRef": "id3",
                        "condition": "Not good"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "Good"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id19",
                        "targetRef": "id3",
                        "condition": "Not granted"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id19",
                        "targetRef": "id9",
                        "condition": "Granted"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "id9",
                        "targetRef": "id20",
                        "condition": "Job offer"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "id20",
                        "targetRef": "id6",
                        "condition": "Declined"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "id20",
                        "targetRef": "id13",
                        "condition": "Accepted"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an application arrives at the Savings Bank.\n\nFirst, the HR team sends a receipt confirmation.\n\nNext, the application is reviewed by the HR team.\n\nIf the application is in order, it proceeds to the IT department for evaluation. If the application is not in order, the process ends.\n\nIf the applicant is deemed suitable by the IT department, the HR team prepares and conducts an interview. If the applicant is not suitable, the process ends.\n\nAfter the interview, if the applicant declines the invitation, the process ends. If the applicant attends the interview, the HR team evaluates the applicant.\n\nIf the applicant is not good, the process ends. If the applicant is good, the applicant is put on the list and selected.\n\nThe selected applicant then requires approval from the board of directors.\n\nIf the approval is granted, the HR team confirms the applicant and prepares the contract. If the approval is not granted, the process ends.\n\nFinally, the contract is signed, and the applicant is placed in the position, completing the process.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send receipt confirmation",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Review application",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate by IT department",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare and conduct interview",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Archive application documents",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Put on the list and select",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Obtain approval from board of directors",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "HR team confirms applicant and prepares contract",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Sign contract and place applicant in position",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "startEv",
                        "name": "Application arrives",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEv",
                        "name": "Process completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Savings Bank",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "HR Team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id8"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "IT Department",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Board of Directors",
                                "elemRefs": [
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "startEv",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "gw1",
                        "targetRef": "gw6",
                        "condition": "Application in order"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "gw2",
                        "targetRef": "id4",
                        "condition": "Applicant suitable"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "gw1",
                        "targetRef": "endEv",
                        "condition": "Application not in order"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "gw2",
                        "targetRef": "endEv",
                        "condition": "Applicant not suitable"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gw3",
                        "targetRef": "endEv",
                        "condition": "Applicant declines invitation"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "gw3",
                        "targetRef": "gw4",
                        "condition": "Applicant attends interview"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "gw4",
                        "targetRef": "gw5",
                        "condition": "Applicant not good"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "gw4",
                        "targetRef": "id6",
                        "condition": "Applicant good"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id7",
                        "targetRef": "gw6"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "gw6",
                        "targetRef": "id8",
                        "condition": "Approval granted"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "gw6",
                        "targetRef": "endEv",
                        "condition": "Approval not granted"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id9",
                        "targetRef": "endEv"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when an application arrives at the Savings Bank. The HR team sends a receipt confirmation to the applicant and then reviews the application. If the application is not in order, a rejection notice is sent to the applicant, and the application documents are archived, ending the process with the applicant being rejected.\n\nIf the application is in order, it is evaluated by the IT department. If the applicant is deemed not suitable, a rejection notice is sent to the applicant, and the application documents are archived, ending the process with the applicant being rejected.\n\nIf the applicant is suitable, an interview is prepared and conducted. If the applicant declines the invitation, the application documents are archived, ending the process with the applicant being rejected.\n\nIf the applicant is good, they are put on a list and selected. The board of directors then needs to approve the selection. If the approval is not granted, a rejection notice is sent to the applicant, and the application documents are archived, ending the process with the applicant being rejected.\n\nIf the approval is granted, the HR team confirms and prepares the contract, which is then signed by the applicant. The applicant is then placed in the position and occupied in the system, completing the process with the applicant being hired.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send receipt confirmation to applicant",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate application by IT department",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare and conduct interview",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Archive application documents",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Put on list and select",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Obtain board of directors' approval",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Confirm and prepare contract",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Sign contract",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Place applicant in position and occupy in system",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Send rejection notice to applicant",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent1",
                        "name": "Application arrives",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "intermediateEvent1",
                        "name": "Invitation Declined",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "endEvent1",
                        "name": "Process Completed and Applicant Hired",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "endEvent2",
                        "name": "Process Ended with Applicant Rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Savings Bank",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "HR Team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id8"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "IT Department",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Board of Directors",
                                "elemRefs": [
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "id11",
                        "condition": "Application not in order"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "id3",
                        "condition": "Application in order"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway2",
                        "targetRef": "id11",
                        "condition": "Applicant not suitable"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway2",
                        "targetRef": "id4",
                        "condition": "Applicant suitable"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id4",
                        "targetRef": "intermediateEvent1"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "intermediateEvent1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id4",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gateway3",
                        "targetRef": "id6",
                        "condition": "Applicant is good"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "gateway3",
                        "targetRef": "id11",
                        "condition": "Applicant not good"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id7",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "gateway4",
                        "targetRef": "id8",
                        "condition": "Approval granted"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "gateway4",
                        "targetRef": "id11",
                        "condition": "Approval not granted"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id10",
                        "targetRef": "endEvent1"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "gateway5",
                        "targetRef": "id11",
                        "condition": "Applicant declines position"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "gateway6",
                        "targetRef": "id5",
                        "condition": "Reject after interview"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "id5",
                        "targetRef": "endEvent2"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "28_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event, which triggers the order intake. Following the order intake, the requirements are described. Next, a workshop is conducted to gather more detailed information. After the workshop, a project sketch is created.\n\nThe process then waits for appointment confirmation. Once the appointment is confirmed, a customer conversation is conducted. Based on this conversation, a specification sheet is written. This specification sheet is then sent to the customer.\n\nThe process continues with receiving customer feedback. After receiving the feedback, project and capacity planning are performed. The next step involves checking standard open-source products. Following this, use cases are defined.\n\nCosts are then calculated, leading to a decision point. If existing products can be used, the knowledge management systems are adjusted accordingly. If new products need to be developed, the development process begins.\n\nRegardless of the path taken, the next step is product acceptance. After the product is accepted, customer feedback is obtained. Finally, follow-up projects are identified, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Order Intake",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Describe Requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct Workshop",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Create Project Sketch",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Wait for Appointment Confirmation",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct Customer Conversation",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Write Specification Sheet",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Send Specification Sheet to Customer",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Receive Customer Feedback",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Perform Project and Capacity Planning",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Check Standard Open-Source Products",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Define Use Cases",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Calculate Costs",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Adjust Knowledge Management Systems",
                        "type": "Task"
                    },
                    {
                        "id": "id15",
                        "name": "Develop Product",
                        "type": "Task"
                    },
                    {
                        "id": "id16",
                        "name": "Perform Product Acceptance",
                        "type": "Task"
                    },
                    {
                        "id": "id17",
                        "name": "Obtain Customer Feedback",
                        "type": "Task"
                    },
                    {
                        "id": "id18",
                        "name": "Identify Follow-Up Projects",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gid1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pid1",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "lid1",
                                "name": "Development Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "gid1",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id17",
                                    "id18",
                                    "eid1",
                                    "eid2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sid1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sid2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sid3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sid4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sid5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sid6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sid7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sid8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sid9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sid10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sid11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sid12",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sid13",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sid14",
                        "sourceRef": "id13",
                        "targetRef": "gid1"
                    },
                    {
                        "id": "sid15",
                        "sourceRef": "gid1",
                        "targetRef": "id14",
                        "condition": "use existing products"
                    },
                    {
                        "id": "sid16",
                        "sourceRef": "gid1",
                        "targetRef": "id15",
                        "condition": "develop new products"
                    },
                    {
                        "id": "sid17",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sid18",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sid19",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sid20",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sid21",
                        "sourceRef": "id18",
                        "targetRef": "eid2"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the order intake by the development team. Following the order intake, the requirements are described. Next, a workshop is conducted to further elaborate on the requirements. After the workshop, a project sketch is created.\n\nOnce the project sketch is ready, an appointment confirmation is received, leading to a customer conversation. During this conversation, the requirements are discussed in detail, and a specification sheet is written. This specification sheet is then sent to the customer for review.\n\nThe process continues as feedback is received from the customer. Based on this feedback, project and capacity planning are performed. The next step involves checking standard open-source products to see if they meet the project requirements. Use cases are then defined, and costs are calculated.\n\nAt this point, an exclusive decision is made. If existing products are selected, the knowledge management systems are adjusted accordingly. If new products need to be developed, the development team proceeds with the development of the new product.\n\nRegardless of the path taken, the next step is product acceptance. After the product is accepted, customer feedback is obtained. Finally, follow-up projects are identified, and the process concludes with the order being completed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Order intake",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Describe requirements",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct workshop",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Create project sketch",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct customer conversation",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Write specification sheet",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Send specification sheet to customer",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Receive feedback from customer",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Perform project and capacity planning",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Check standard open-source products",
                        "type": "Manual"
                    },
                    {
                        "id": "id11",
                        "name": "Define use cases",
                        "type": "Manual"
                    },
                    {
                        "id": "id12",
                        "name": "Calculate costs",
                        "type": "Manual"
                    },
                    {
                        "id": "id13",
                        "name": "Adjust knowledge management systems",
                        "type": "Manual"
                    },
                    {
                        "id": "id14",
                        "name": "Develop new product",
                        "type": "Manual"
                    },
                    {
                        "id": "id15",
                        "name": "Perform product acceptance",
                        "type": "Manual"
                    },
                    {
                        "id": "id16",
                        "name": "Obtain customer feedback",
                        "type": "Manual"
                    },
                    {
                        "id": "id17",
                        "name": "Identify follow-up projects",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event1",
                        "name": "Appointment confirmation received",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "end1",
                        "name": "Order is completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Development Department",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Development Team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id17",
                                    "start",
                                    "event1",
                                    "end1",
                                    "gw1",
                                    "gw2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "event1"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "event1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id12",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "gw1",
                        "targetRef": "id13",
                        "condition": "Existing products selected"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "gw1",
                        "targetRef": "id14",
                        "condition": "New products to be developed"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "id17",
                        "targetRef": "end1"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the order intake at SoKnow's Development Department. The first step is to describe the requirements. Following this, a workshop is conducted. After the workshop, a project sketch is created. Once the project sketch is ready, an appointment confirmation is received. This leads to a customer conversation. \n\nAfter the conversation with the customer, a specification sheet is written. The specification sheet is then sent to the customer. The next step is to receive customer feedback. Following the feedback, project and capacity planning is performed. \n\nNext, standard open-source products are checked. Use cases are then defined. After defining the use cases, costs are calculated. \n\nAt this point, a decision is made on whether to develop new products or use existing ones. If existing products are selected, the knowledge management systems are adjusted. If new products are to be developed, the development of the new product takes place. \n\nRegardless of the decision, the next step is to perform product acceptance. After product acceptance, customer feedback is obtained. Finally, follow-up projects are identified, and the process concludes with the order being completed.",
            "model": {
                "tasks": [
                    {
                        "id": "t1",
                        "name": "Describe requirements",
                        "type": "Task"
                    },
                    {
                        "id": "t2",
                        "name": "Conduct workshop",
                        "type": "Task"
                    },
                    {
                        "id": "t3",
                        "name": "Create project sketch",
                        "type": "Task"
                    },
                    {
                        "id": "t4",
                        "name": "Customer conversation",
                        "type": "Task"
                    },
                    {
                        "id": "t5",
                        "name": "Write specification sheet",
                        "type": "Task"
                    },
                    {
                        "id": "t6",
                        "name": "Send specification sheet to customer",
                        "type": "Task"
                    },
                    {
                        "id": "t7",
                        "name": "Receive customer feedback",
                        "type": "Task"
                    },
                    {
                        "id": "t8",
                        "name": "Perform project and capacity planning",
                        "type": "Task"
                    },
                    {
                        "id": "t9",
                        "name": "Check standard open-source products",
                        "type": "Task"
                    },
                    {
                        "id": "t10",
                        "name": "Define use cases",
                        "type": "Task"
                    },
                    {
                        "id": "t11",
                        "name": "Calculate costs",
                        "type": "Task"
                    },
                    {
                        "id": "t12",
                        "name": "Adjust knowledge management systems",
                        "type": "Task"
                    },
                    {
                        "id": "t13",
                        "name": "Develop new product",
                        "type": "Task"
                    },
                    {
                        "id": "t14",
                        "name": "Perform product acceptance",
                        "type": "Task"
                    },
                    {
                        "id": "t15",
                        "name": "Obtain customer feedback",
                        "type": "Task"
                    },
                    {
                        "id": "t16",
                        "name": "Identify follow-up projects",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Order intake",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "Appointment confirmation received",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "e3",
                        "name": "Order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Decision: Develop new products or use existing ones",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "Development Department",
                                "elemRefs": [
                                    "e1",
                                    "t1",
                                    "t2",
                                    "t3",
                                    "e2",
                                    "t4",
                                    "t5",
                                    "t6",
                                    "t7",
                                    "t8",
                                    "t9",
                                    "t10",
                                    "t11",
                                    "g1",
                                    "t12",
                                    "t13",
                                    "t14",
                                    "t15",
                                    "t16",
                                    "e3"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "t1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "t1",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "t2",
                        "targetRef": "t3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "t3",
                        "targetRef": "e2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "e2",
                        "targetRef": "t4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "t4",
                        "targetRef": "t5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "t5",
                        "targetRef": "t6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "t6",
                        "targetRef": "t7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "t7",
                        "targetRef": "t8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "t8",
                        "targetRef": "t9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "t9",
                        "targetRef": "t10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "t10",
                        "targetRef": "t11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "t11",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "g1",
                        "targetRef": "t12",
                        "condition": "Existing products selected"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "g1",
                        "targetRef": "t13",
                        "condition": "New products to be developed"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "t12",
                        "targetRef": "t14"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "t13",
                        "targetRef": "t14"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "t14",
                        "targetRef": "t15"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "t15",
                        "targetRef": "t16"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "t16",
                        "targetRef": "e3"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "66_ground_truth.json": {
        "0": {
            "text": "The process begins when the customer feels hungry. The first step is to choose a pizza from the menu. After selecting the pizza, the customer orders the pizza by phone. Once the order is placed, the customer waits for 60 minutes. After this waiting period, the customer checks if the pizza has arrived.\n\nIf the pizza has arrived, the customer proceeds to pay the delivery boy. After paying, the customer eats the pizza, and the process ends with the customer's hunger being satisfied.\n\nIf the pizza has not arrived after 60 minutes, the customer calls again to inquire about the order status. This step continues until the pizza arrives. Once the pizza arrives, the customer eats the pizza, and the process concludes with the customer's hunger being satisfied.",
            "model": {
                "tasks": [
                    {
                        "id": "id2",
                        "name": "Choose pizza from menu",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Order pizza by phone",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Inquire about order status",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Pay delivery boy",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Eat pizza",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id1",
                        "name": "Hungry",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id4",
                        "name": "60 minutes passed",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id5",
                        "name": "Pizza arrived",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Call again",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Hunger satisfied",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Pizza arrived?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Actions",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id8",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id8",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when the customer decides to order a pizza. The customer starts by choosing a pizza from the menu. Once the choice is made, the customer orders the pizza by phone. \n\nAfter placing the order, the customer faces a decision point. If the customer decides to wait, they wait for 60 minutes. After the waiting period, the customer checks if the pizza has arrived. If the pizza has not arrived, the customer calls the pizzeria to inquire about the status of the order. \n\nIf the customer decides not to wait initially, they call the pizzeria to inquire about the status of the order directly. \n\nOnce the customer has called the pizzeria, they proceed to pay the delivery boy when the pizza arrives. After paying, the customer eats the pizza, and the process concludes with the customer's hunger being satisfied.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose a pizza from the menu",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Order pizza by phone",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Wait 60 minutes",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Call the pizzeria to inquire about the status of the order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Pay the delivery boy",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Eat the pizza",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Hungry satisfied",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Main Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Wait 60 minutes"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Call to inquire"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Call to inquire again"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "Pizza arrived"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the customer is hungry. The first step is to choose a pizza. After selecting the pizza, the customer orders the pizza by phone. \n\nNext, the customer decides whether to wait for 60 minutes or call the pizzeria to inquire about the order. If the customer chooses to wait, they wait for 60 minutes and then check if the pizza has arrived. If the pizza has arrived, the process continues with the pizza arriving. If the pizza has not arrived, the customer calls the pizzeria to inquire about the order.\n\nOnce the pizza arrives, the customer pays the delivery boy. After paying, the customer eats the pizza, and the process ends with the customer's hunger being satisfied.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose pizza",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Order pizza by phone",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Wait 60 minutes",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Call pizzeria to inquire",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Pay delivery boy",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Eat pizza",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Customer is hungry",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Pizza arrived",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Hunger satisfied",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Wait or inquire",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Pizza arrived?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "Wait 60 minutes"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Call pizzeria"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id11",
                        "targetRef": "id8",
                        "condition": "Pizza arrived"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "Call pizzeria"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "34_ground_truth.json": {
        "0": {
            "text": "The process begins at Harro H\u00f6fliger Verpackungsmaschinen GmbH within the Production / Design and Development lane. It starts with the generation of the software and document draft. Once this is completed, an overview of the machine is obtained. \n\nFollowing this, the process checks if all programs are ready. This is a parallel gateway, meaning that the following tasks can be performed concurrently: completing the SPS project by station, completing the HMI project in stages, and completing the safety project. \n\nOnce these tasks are completed, the software is tested. After the software testing, a software design review is conducted. \n\nFinally, the process concludes with the software being ready for commissioning.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Generate software and document draft",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Obtain overview of the machine",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Complete SPS project by station",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Complete HMI project in stages",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Complete safety project",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Test software",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct software design review",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Software ready for commissioning",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "All programs ready?",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Harro H\u00f6fliger Verpackungsmaschinen GmbH",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Production / Design and Development",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the start event at Harro H\u00f6fliger Verpackungsmaschinen GmbH in the Production / Design and Development lane.\n\nFirst, the software and document draft are generated.\n\nNext, an overview of the machine is obtained.\n\nFollowing this, the process splits into three parallel tasks: completing the SPS project by station, completing the HMI project in stages, and completing the safety project.\n\nOnce all three tasks are completed, the process converges, indicating that all programs are ready.\n\nThe next step is to test the software.\n\nAfter testing, a software design review is conducted.\n\nFinally, the software is deemed ready for commissioning, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Generate software and document draft",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Obtain overview of the machine",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Complete SPS project by station",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Complete HMI project in stages",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Complete safety project",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Test software",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct software design review",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Software ready for commissioning",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Parallel tasks",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "All programs ready",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Harro H\u00f6fliger Verpackungsmaschinen GmbH",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Production / Design and Development",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "startEvent",
                                    "endEvent",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id9",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id8",
                        "targetRef": "endEvent"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins at Harro H\u00f6fliger Verpackungsmaschinen GmbH with the initiation of the project.\n\nFirst, a software and document draft is generated.\n\nNext, an overview of the machine is obtained.\n\nFollowing this, three tasks are carried out in parallel: completing the SPS project by station, completing the HMI project in stages, and completing the safety project.\n\nOnce all these programs are ready, the software is tested.\n\nAfter testing, a software design review is conducted.\n\nFinally, the software is declared ready for commissioning, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Generate software and document draft",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Obtain overview of the machine",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Complete SPS project by station",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Complete HMI project in stages",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Complete safety project",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Test software",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct software design review",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Software ready for commissioning",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gid1",
                        "name": "Parallel tasks",
                        "type": "Parallel"
                    },
                    {
                        "id": "gid2",
                        "name": "All programs ready",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pid1",
                        "name": "Harro H\u00f6fliger Verpackungsmaschinen GmbH",
                        "lanes": [
                            {
                                "id": "lid1",
                                "name": "Production / Design and Development",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "eid1",
                                    "eid2",
                                    "gid1",
                                    "gid2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "gid1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "gid1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "gid1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "gid1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "gid2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "gid2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "gid2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gid2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "eid2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "52_ground_truth.json": {
        "0": {
            "text": "The process begins with the HR Clerk retrieving the requirement profile. Next, the HR Clerk retrieves the job posting. Following this, the HR Clerk creates and forwards a co-signature note to the Section Manager. The Section Manager then reviews the note. At this point, a decision is made on whether there are any comments. If there are comments, the HR Clerk creates and forwards a new co-signature note, which is then reviewed again by the Section Manager. If there are no comments, the note is forwarded to the Department Head for review. The Department Head reviews the note and decides if there are any comments. If there are comments, the note is sent back to the Section Manager for further review. If there are no comments, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Retrieve requirement profile",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve job posting",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create and forward co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review note",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Review note by department head",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create and forward new co-signature note",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Any comments?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Head comments?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Company",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "HR Clerk",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id13",
                                "name": "Section Manager",
                                "elemRefs": [
                                    "id4"
                                ]
                            },
                            {
                                "id": "id14",
                                "name": "Department Head",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id9",
                        "targetRef": "id5",
                        "condition": "No comments"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id9",
                        "targetRef": "id6",
                        "condition": "Comments"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id10",
                        "targetRef": "id8",
                        "condition": "No comments"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Comments"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step is to retrieve the requirement profile. Once the requirement profile is retrieved, the job posting is then retrieved. Following this, a co-signature note is created and forwarded. The co-signature note is then reviewed. \n\nAt this point, it is determined whether there are comments from the section manager. If there are comments, a new co-signature note is created and forwarded, and the process loops back to the review of the co-signature note. If there are no comments from the section manager, it is then determined whether there are comments from the department head. If there are comments from the department head, the process loops back to the creation and forwarding of the co-signature note. If there are no comments from the department head, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Retrieve requirement profile",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve job posting",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Create and forward co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create and forward new co-signature note",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Comments from section manager?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id9",
                        "name": "Comments from department head?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id8",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id8",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id9",
                        "targetRef": "id7",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the HR department when the requirement profile is retrieved by the HR clerk. Following this, the HR clerk retrieves the job posting. Next, the HR clerk creates and forwards a co-signature note. This note is then reviewed by either the section manager or the department head. \n\nAfter the review, a decision is made. If there are comments on the note, it is sent back to the HR clerk to create and forward a new co-signature note. This new note is then reviewed again by the section manager or the department head. \n\nIf there are no comments, the process proceeds to another decision point. If comments are made at this stage, the note is reviewed again by the section manager or the department head. If there are no comments, the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Retrieve requirement profile",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve job posting",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Create and forward co-signature note",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Review note",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create and forward new co-signature note",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pid1",
                        "name": "HR Department",
                        "lanes": [
                            {
                                "id": "lid1",
                                "name": "HR Clerk",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id5"
                                ]
                            },
                            {
                                "id": "lid2",
                                "name": "Section Manager",
                                "elemRefs": [
                                    "id4"
                                ]
                            },
                            {
                                "id": "lid3",
                                "name": "Department Head",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id6",
                        "targetRef": "id3",
                        "condition": "Comments"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7",
                        "condition": "No Comments"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id4",
                        "condition": "Comments"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "eid2",
                        "condition": "No Comments"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_ground_truth.json": {
        "0": {
            "text": "The process begins when the need to procure work equipment is identified in the ACME AG Procurement Department. The process starts with checking the stock of the required work equipment. \n\nIf the work equipment is in stock, it is retrieved from the storeroom, and the process ends with the work equipment being removed from the storeroom.\n\nIf the work equipment is not in stock, the requirements are specified and quantified. Following this, an order is placed for the work equipment. \n\nAfter placing the order, the process waits for the receipt of the work equipment. \n\nOnce the waiting period is over, it is checked whether the work equipment has been received. If the work equipment has been received, the process ends with the work equipment being procured.\n\nIf the work equipment has not been received, it is checked whether five days have passed. If five days have passed, an order is placed by e-mail. \n\nAfter placing the order by e-mail, the work equipment is received, and the process ends with the work equipment being procured.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check stock",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Specify and quantify requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Place order",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Retrieve work equipment from storeroom",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Wait for receipt of work equipment",
                        "type": "IntermediateTimerCatchEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Place order by e-mail",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Receive work equipment",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Work equipment procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Work equipment removed from storeroom",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Is work equipment in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Received work equipment?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "After 5 days?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "ACME AG Procurement Department",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "In stock"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Not in stock"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id12",
                        "targetRef": "id9",
                        "condition": "Work equipment received"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id12",
                        "targetRef": "id13",
                        "condition": "Not received"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "After 5 days"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a need arises in the Procurement Department. The first step is to check the stock for work equipment availability. If the work equipment is in stock, it is retrieved from the storeroom, and the process ends with the work equipment being retrieved from the storeroom.\n\nIf the work equipment is not in stock, the requirements are specified and quantified. Following this, an order is placed. The process then waits for the receipt of the work equipment from the supplier. \n\nIf the receipt is received within 5 days, the process continues with the receipt of the work equipment and ends with the work equipment being procured. \n\nIf the receipt is not received within 5 days, an order is placed by e-mail. After placing the order by e-mail, the process continues with the receipt of the work equipment and ends with the work equipment being procured.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check stock for work equipment availability",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve work equipment from storeroom",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and quantify requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Place order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Wait for receipt of work equipment from supplier",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Place order by e-mail",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Need arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Work equipment retrieved from storeroom",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Work equipment procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Receipt of work equipment",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Work equipment in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Receipt received within 5 days?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Procurement Department",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Stock Check and Retrieval",
                                "elemRefs": [
                                    "id1",
                                    "id2"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Order Placement",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id6"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Receipt and Procurement",
                                "elemRefs": [
                                    "id5",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Work equipment in stock"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "Work equipment not in stock"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id12",
                        "targetRef": "id10",
                        "condition": "Receipt received within 5 days"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "Receipt not received within 5 days"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id10",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a need arises for work equipment in the Procurement Department.\n\nThe first step is to check the stock availability of the required work equipment.\n\nIf the work equipment is in stock, it is retrieved from the storeroom, and the process ends with the work equipment being removed from the storeroom.\n\nIf the work equipment is not in stock, the requirements are specified and quantified.\n\nFollowing this, an order is placed.\n\nAfter placing the order, it is checked whether the receipt is received within 5 days.\n\nIf the receipt is received within 5 days, the process continues with the receipt being received.\n\nIf the receipt is not received after 5 days, the order is placed again by email.\n\nOnce the receipt is received, the process ends with the work equipment being procured.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check stock for required work equipment",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve work equipment from storeroom",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and quantify requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Place order",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Place order by email",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Need arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Work equipment removed from storeroom",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Work equipment procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Receipt received",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Check stock availability",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Receipt received within 5 days?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Procurement Department",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Procurement Team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            },
                            {
                                "id": "id14",
                                "name": "Supplier",
                                "elemRefs": [
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "Work equipment in stock"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "Work equipment not in stock"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "Yes, received within 5 days"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "No, not received after 5 days"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id9",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "30_ground_truth.json": {
        "0": {
            "text": "The process begins when a client initiates a new service by entering the store and looking for a specific service. If the client does not find the service, the process ends. If the client finds the service, they take a ticket. The process then checks where the ticket was taken. If the ticket was taken via an app, the client waits and looks for a product. If the ticket was taken physically, the client waits for their turn. In both cases, the client eventually asks for a specific request.\n\nThe request assistant then registers the request and checks if there are enough requests. If there are not enough requests, the process continues to register requests until there are enough. Once there are enough requests, the request assistant sends the order request document to the shop assistants' team. The shop assistants' team then prepares the order and delivers it. The process ends when the order is delivered.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Client enters the store and looks for a specific service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Client takes a ticket",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check where the ticket was taken",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Client waits and looks for product",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Client waits for their turn",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Client asks for a specific request",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Request assistant registers the request",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Request assistant checks if there are enough requests",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Continue to register requests",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Request assistant sends the order request document",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Shop assistants' team prepares the order",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Shop assistants' team delivers the order",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Client initiates new service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "Process ends",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e3",
                        "name": "Client finds the service",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "e4",
                        "name": "Registering Over",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Where was ticket taken?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "Enough requests?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "Client",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "Client's Actions",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "e1",
                                    "e2",
                                    "e3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p2",
                        "name": "Store",
                        "lanes": [
                            {
                                "id": "l2",
                                "name": "Request Assistant",
                                "elemRefs": [
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "e4"
                                ]
                            },
                            {
                                "id": "l3",
                                "name": "Shop Assistants' Team",
                                "elemRefs": [
                                    "id11",
                                    "id12"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "e1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "id1",
                        "targetRef": "g1"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "g1",
                        "targetRef": "e2",
                        "condition": "Service not found"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "g1",
                        "targetRef": "e3",
                        "condition": "Service found"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "e3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "id2",
                        "targetRef": "g2"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "g2",
                        "targetRef": "id4",
                        "condition": "Ticket taken in app"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "g2",
                        "targetRef": "id5",
                        "condition": "Ticket taken physically"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "id8",
                        "targetRef": "g3"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "g3",
                        "targetRef": "id9",
                        "condition": "Not enough requests"
                    },
                    {
                        "id": "f15",
                        "sourceRef": "id9",
                        "targetRef": "id8"
                    },
                    {
                        "id": "f16",
                        "sourceRef": "g3",
                        "targetRef": "id10",
                        "condition": "Enough requests"
                    },
                    {
                        "id": "f17",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "f18",
                        "sourceRef": "id11",
                        "targetRef": "e4"
                    },
                    {
                        "id": "f19",
                        "sourceRef": "e4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "f20",
                        "sourceRef": "id12",
                        "targetRef": "e2"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a client initiates a new service. The client first looks for a specific service. If the service is not found, the process ends. If the service is found, the client takes a ticket. Depending on whether the ticket is taken physically or through an app, the client either waits for their turn physically or waits for the waiting time in the app. If the client is using the app, they proceed to look for the product, check specific criteria, and check the number of tickets ahead. Once the client's turn comes, either through the app or physically, they ask for a specific request.\n\nThe request assistant then registers the request and checks if there are enough requests to respond to customer demand. If there are not enough requests, additional requests are registered, and the check is repeated. Once there are enough requests, an order request document is sent to the shop assistants' team. The shop assistants' team prepares the order, and once the order is prepared, it is delivered to the client. The process ends after the order is delivered.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Look for specific service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Take ticket",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Wait for waiting time (app)",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Look for product (app)",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check specific criteria (app)",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check tickets ahead (app)",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Wait for turn (physically)",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Ask for specific request",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Register request",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check if enough requests to respond to customer demand",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Register additional requests",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Send order request document to shop assistants' team",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Prepare order",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Deliver order to client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Initiate new service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Process ends",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Turn comes (app/physically)",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Order prepared",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Order delivered",
                        "type": "IntermediateNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id24",
                        "name": "Client",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Client",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id15",
                                    "id16",
                                    "id17",
                                    "id19"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id26",
                        "name": "Request Assistant",
                        "lanes": [
                            {
                                "id": "id27",
                                "name": "Request Assistant",
                                "elemRefs": [
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id17",
                                    "id18"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id28",
                        "name": "Shop Assistants' Team",
                        "lanes": [
                            {
                                "id": "id29",
                                "name": "Shop Assistants' Team",
                                "elemRefs": [
                                    "id13",
                                    "id18",
                                    "id14",
                                    "id19"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id30",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id1",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id20",
                        "targetRef": "id16",
                        "condition": "Service not found"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id20",
                        "targetRef": "id2",
                        "condition": "Service found"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id2",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id21",
                        "targetRef": "id7",
                        "condition": "Ticket taken physically"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id21",
                        "targetRef": "id3",
                        "condition": "Ticket taken in app"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id17",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id10",
                        "targetRef": "id11",
                        "condition": "Not enough requests"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id11",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id10",
                        "targetRef": "id12",
                        "condition": "Enough requests"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id12",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id18",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id14",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id19",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the client enters the store. The client then looks for a specific service. If the service is not found, the process ends with the client not finding the service. If the service is found, the client takes a ticket. The client then decides whether to use a physical or app ticket. If the client uses an app ticket, they wait for the waiting time, look for the product and specific criteria, and check the tickets ahead. If the client uses a physical ticket, they wait for their turn. Once it is the client's turn, they request the specific service and communicate the request to the request assistant.\n\nThe request assistant registers the request and checks if there are enough requests. If there are not enough requests, the request assistant continues to register requests until there are enough. Once there are enough requests, the request assistant sends the order request document to the shop assistant team. The shop assistant team then prepares the order and delivers it to the client, ending the process with the client collecting the order.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter store",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Look for a specific service",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Take a ticket",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Wait for the waiting time",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Look for the product and specific criteria",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check tickets ahead",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Wait for turn",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Request specific service",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Communicate request to request assistant",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Register the request",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check if enough requests",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Continue to register requests",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send order request document to shop assistant team",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Prepare order",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Deliver order to the client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "End - Client doesn't find service",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "End - Collect Order",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Turn of the client",
                        "type": "IntermediateEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "name": "Service found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Physical or App Ticket?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Enough requests?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id23",
                        "name": "Client",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Client",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id19"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id25",
                        "name": "Staff",
                        "lanes": [
                            {
                                "id": "id26",
                                "name": "Request Assistant",
                                "elemRefs": [
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            },
                            {
                                "id": "id27",
                                "name": "Shop Assistant Team",
                                "elemRefs": [
                                    "id14",
                                    "id15"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id2",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id20",
                        "targetRef": "id17",
                        "condition": "No"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id20",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id3",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id21",
                        "targetRef": "id4",
                        "condition": "App"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id21",
                        "targetRef": "id7",
                        "condition": "Physical"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id6",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id7",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id19",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id11",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id11",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id12",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id15",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "56_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event. The first step is to send a request to the Sales Department (SD). The Sales Department then accepts and processes the request. Following this, the Sales Department processes the offer. Once the offer is processed, it is copied to an order and sent to the customer. The customer then accepts and processes the offer and sends the order back to the Sales Department.\n\nThe Sales Department accepts and processes the order and then checks the inventory. At this point, a decision is made on whether the product is in stock. If the product is in stock, a request for the product is made, and the customer order is processed. If the product is not in stock, the goods are procured or ordered, and then the customer order is processed.\n\nAfter the customer order is processed, a delivery note is created. Inventory control is then performed, followed by picking, packing, and sending the goods. The customer registers the goods receipt, and the inventory is checked again.\n\nNext, the Finance Department creates an invoice and sends it to the customer. The customer receives the invoice and settles it. The Finance Department then processes the incoming payment. Finally, the Sales Department edits and displays the document flow, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create customer master data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Update customer data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send request to SD",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Accept and process request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Process offer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Copy offer to order and send to customer",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Accept and process offer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send order to SD",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Accept and process order",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check inventory",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Request product",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Procure/order goods",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Process customer order",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Create delivery note",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Perform inventory control",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Pick, pack, and send goods",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Register goods receipt",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Check inventory",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Create invoice",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Send invoice to customer",
                        "type": "Service"
                    },
                    {
                        "id": "id21",
                        "name": "Receive invoice",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Settle invoice",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Process incoming payment",
                        "type": "User"
                    },
                    {
                        "id": "id24",
                        "name": "Edit and display document flow",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id25",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id26",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id27",
                        "name": "Product in stock?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id28",
                        "name": "The Bike Zone",
                        "lanes": [
                            {
                                "id": "id29",
                                "name": "Customer",
                                "elemRefs": [
                                    "id7",
                                    "id8",
                                    "id21",
                                    "id22",
                                    "id17"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id30",
                        "name": "GBI",
                        "lanes": [
                            {
                                "id": "id31",
                                "name": "Sales Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id9",
                                    "id14",
                                    "id16",
                                    "id24"
                                ]
                            },
                            {
                                "id": "id32",
                                "name": "Material Management",
                                "elemRefs": [
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id15",
                                    "id18"
                                ]
                            },
                            {
                                "id": "id33",
                                "name": "Finance Department",
                                "elemRefs": [
                                    "id19",
                                    "id20",
                                    "id23"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id34",
                        "sourceRef": "id25",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id10",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id27",
                        "targetRef": "id11",
                        "condition": "yes"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id27",
                        "targetRef": "id12",
                        "condition": "no"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id22",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id23",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id24",
                        "targetRef": "id26"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the customer initializing a request. This request is then sent to the sales department at GBI, where customer master data is created. Following this, the customer data is updated. The sales department then accepts and processes the customer request.\n\nNext, the sales department processes an offer, which is subsequently copied to an order and sent to the customer. The customer then accepts and processes the order, which is communicated back to the sales department.\n\nThe sales department checks the inventory. If the product is not in stock, a request is made to procure the goods. Once the product is available, the customer order is processed. A delivery note is created, and inventory control is performed. The goods are then picked, packed, and sent to the customer.\n\nUpon receiving the goods, the customer registers the goods receipt, which is communicated back to the sales department. The sales department then creates an invoice, which is sent to the finance department. The finance department sends the invoice to the customer.\n\nThe customer receives the invoice and proceeds to settle it. The finance department processes the incoming payment. Finally, the sales department edits and displays the document flow, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Initialize Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create Customer Master Data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Update Customer Data",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Accept and Process Customer Request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Process Offer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Copy Offer to Order and Send to Customer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Accept and Process Order",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Inventory",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Request Product / Procure Goods",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Process Customer Order",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Create Delivery Note",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Perform Inventory Control",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Pick, Pack, and Send Goods",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Register Goods Receipt",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Create Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Send Invoice to Customer",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Receive Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Settle Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Process Incoming Payment",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Edit and Display Document Flow",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "The Bike Zone",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "Customer",
                                "elemRefs": [
                                    "id1",
                                    "id7",
                                    "id14",
                                    "id17",
                                    "id18"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p2",
                        "name": "GBI",
                        "lanes": [
                            {
                                "id": "l2",
                                "name": "Sales Department (SD)",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id10",
                                    "id11",
                                    "id13",
                                    "id20"
                                ]
                            },
                            {
                                "id": "l3",
                                "name": "Material Management (MM)",
                                "elemRefs": [
                                    "id8",
                                    "id9",
                                    "id12",
                                    "id15"
                                ]
                            },
                            {
                                "id": "l4",
                                "name": "Finance Department (FI)",
                                "elemRefs": [
                                    "id15",
                                    "id16",
                                    "id19"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "g1",
                        "targetRef": "id9",
                        "condition": "Product not in stock"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "g1",
                        "targetRef": "id10",
                        "condition": "Product in stock"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id20",
                        "targetRef": "e2"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "id14",
                        "targetRef": "id18"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when a customer requests initiation. The first step is to create and update customer master data. Once this is done, a request is sent to the SD department of GBI. The SD department then accepts and processes the request, followed by processing the offer. The offer is then copied to an order and sent to the customer.\n\nThe customer accepts and processes the offer, and then orders bicycles and sends the order to the SD department. The SD department accepts and processes the order and checks the inventory.\n\nIf the inventory check reveals that the items are out of stock, a request for the product is made. If the items are in stock, the process continues directly to processing the customer order and creating a delivery note. If the product was requested, the goods are procured or ordered, and then the customer order is processed and a delivery note is created.\n\nNext, inventory control is performed, followed by picking the material, packing, and sending the goods. The goods receipt is then registered, and another inventory check is performed.\n\nFollowing the inventory check, an invoice is created and sent to the customer. The customer receives the invoice and settles it. The incoming payment is then processed, and the document flow is edited and displayed. Finally, the process is completed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create and update customer master data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send request to SD of GBI",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Accept and process request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Process offer",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Copy offer to order and send to customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Accept and process offer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Order bicycles and send order to SD",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Accept and process order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check inventory",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Request product",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Procure/Order goods",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Process customer order and create delivery note",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Perform inventory control",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Pick material, pack, and send goods",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Register goods receipt",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Check inventory",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Create invoice",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Send invoice to customer",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Receive invoice",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Settle invoice",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Process incoming payment",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Edit and display document flow",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent",
                        "name": "Customer requests initiation",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent",
                        "name": "Process completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Inventory check",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "GBI",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "SD",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id8",
                                    "id12",
                                    "id14",
                                    "id22"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "MM",
                                "elemRefs": [
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id13",
                                    "id15",
                                    "id16"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "FI",
                                "elemRefs": [
                                    "id17",
                                    "id18",
                                    "id21"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "The Bike Zone",
                        "lanes": [
                            {
                                "id": "lane4",
                                "name": "Customer",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id19",
                                    "id20"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id8",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway1",
                        "targetRef": "id10",
                        "condition": "Out of stock"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway1",
                        "targetRef": "id10",
                        "condition": "In stock"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id11",
                        "targetRef": "id12",
                        "condition": "Goods procured/ordered"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "id22",
                        "targetRef": "endEvent"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "18_ground_truth.json": {
        "0": {
            "text": "The process begins with the start event. The first step is to prepare the workplace. Once the workplace is prepared, the motherboard is placed on an anti-static mat. Following this, the CPU is inserted into the processor. After the CPU is in place, thermal paste is applied.\n\nAt this point, a decision is made to determine if the installation is possible. If the installation is possible, the process ends.\n\nIf the installation is not possible, the process moves to the next troubleshooting step. Depending on the issue encountered, different troubleshooting tasks are performed. If no image is displayed, troubleshooting for no image displayed is carried out. If the hard drive is not recognized, troubleshooting for the hard drive not recognized is performed. If there is no power, troubleshooting for no power is conducted. If a boot loop occurs, troubleshooting for the boot loop is done.\n\nAfter each troubleshooting task, the process loops back to the decision point to check if the installation is now possible. This loop continues until the installation is successfully completed, at which point the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare workplace",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Place motherboard on anti-static mat",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Insert CPU into processor",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Apply thermal paste",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Troubleshoot no image displayed",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Troubleshoot hard drive not recognized",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Troubleshoot no power",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Troubleshoot boot loop",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Installation possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Next troubleshooting step",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id10",
                        "condition": "Installation possible"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id12",
                        "condition": "Installation not possible"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "No image displayed"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "Hard drive not recognized"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "No power"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "Boot loop occurs"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the preparation of the workplace. Once the workplace is prepared, the motherboard is placed on an anti-static mat. Following this, the CPU is inserted into the processor. After the CPU is in place, thermal paste is applied.\n\nNext, a decision is made to determine if the installation is possible. If the installation is possible, the process ends.\n\nIf the installation is not possible, a troubleshooting decision is made. Depending on the issue identified, different troubleshooting tasks are performed. If there is no image displayed, troubleshooting for no image is performed. If the hard drive is not recognized, troubleshooting for hard drive not recognized is performed. If there is no power, troubleshooting for no power is performed. If a boot loop occurs, troubleshooting for boot loop is performed.\n\nAfter any of these troubleshooting tasks are completed, the process returns to the decision point to determine if the installation is now possible. This loop continues until the installation is successfully completed, at which point the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Prepare workplace",
                        "type": "Manual"
                    },
                    {
                        "id": "task2",
                        "name": "Place motherboard on anti-static mat",
                        "type": "Manual"
                    },
                    {
                        "id": "task3",
                        "name": "Insert CPU into processor",
                        "type": "Manual"
                    },
                    {
                        "id": "task4",
                        "name": "Apply thermal paste",
                        "type": "Manual"
                    },
                    {
                        "id": "task5",
                        "name": "Perform troubleshooting for no image",
                        "type": "Manual"
                    },
                    {
                        "id": "task6",
                        "name": "Perform troubleshooting for hard drive not recognized",
                        "type": "Manual"
                    },
                    {
                        "id": "task7",
                        "name": "Perform troubleshooting for no power",
                        "type": "Manual"
                    },
                    {
                        "id": "task8",
                        "name": "Perform troubleshooting for boot loop",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Installation possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Troubleshooting decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task4",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway1",
                        "targetRef": "event2",
                        "condition": "Installation possible"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway1",
                        "targetRef": "gateway2",
                        "condition": "Installation not possible"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway2",
                        "targetRef": "task5",
                        "condition": "No image displayed"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway2",
                        "targetRef": "task6",
                        "condition": "Hard drive not recognized"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway2",
                        "targetRef": "task7",
                        "condition": "No power"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway2",
                        "targetRef": "task8",
                        "condition": "Boot loop occurs"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task5",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task6",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "task7",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "task8",
                        "targetRef": "gateway1"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, which triggers the preparation of the workplace. Once the workplace is prepared, the motherboard is placed on an anti-static mat. Following this, the CPU is inserted into the processor. After the CPU is in place, thermal paste is applied. \n\nNext, the installation possibility is checked. If the installation is possible, the process ends successfully. However, if the installation is not possible, the process moves to the next steps for troubleshooting.\n\nDepending on the issue identified, different troubleshooting steps are taken. If there is no image, no power, the hard drive is not recognized, or there is a boot loop, the respective troubleshooting steps are followed. Each of these troubleshooting tasks leads back to checking the installation possibility again. This loop continues until the installation is possible, at which point the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare workplace",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Place motherboard on anti-static mat",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Insert CPU into processor",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Apply thermal paste",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Check installation possibility",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "No image troubleshooting",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Hard drive not recognized troubleshooting",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "No power troubleshooting",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Boot loop troubleshooting",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Installation possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Next steps if installation not possible",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway1",
                        "targetRef": "end",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway1",
                        "targetRef": "gateway2",
                        "condition": "No"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway2",
                        "targetRef": "id6",
                        "condition": "No image"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway2",
                        "targetRef": "id7",
                        "condition": "Hard drive not recognized"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway2",
                        "targetRef": "id8",
                        "condition": "No power"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gateway2",
                        "targetRef": "id9",
                        "condition": "Boot loop"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id7",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id9",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "4_ground_truth.json": {
        "0": {
            "text": "The process begins when an application is received by the HR Department at ACME AG. \n\nFirst, an acknowledgment of receipt is sent to the applicant. \n\nNext, the applicant is checked. \n\nFollowing this, the application status is determined. \n\nIf the application is rejected at this stage, a rejection is sent to the applicant, and the process ends with the rejection of the applicant. \n\nIf the application is accepted, an invitation to a job interview is sent to the applicant. \n\nThe HR Department then prepares for the job interview. \n\nThe job interview is conducted, and the suitability of the applicant is determined. \n\nIf the applicant is found not suitable, a rejection is sent to the applicant, and the process ends with the rejection of the applicant after the interview. \n\nIf the applicant is found suitable, an employment contract is prepared and sent to the applicant. \n\nThe process then waits for the signed employment contract to be returned. \n\nOnce the signed employment contract is available, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send acknowledgment of receipt",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check applicant",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine application status",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection to applicant",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Send invitation to job interview",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare employment contract",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct job interview",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Determine suitability of applicant",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send employment contract",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Wait for signed employment contract",
                        "type": "Receive"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Receipt of application",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "Rejection of applicant",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e3",
                        "name": "Rejection of applicant after interview",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e4",
                        "name": "Availability of signed employment contract",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Application status?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Suitable applicant?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "e1",
                                    "e2",
                                    "e3",
                                    "e4",
                                    "g1",
                                    "g2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "e1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "id3",
                        "targetRef": "g1"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "g1",
                        "targetRef": "id4",
                        "condition": "Rejected"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "id4",
                        "targetRef": "e2"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "g1",
                        "targetRef": "id5",
                        "condition": "Accepted"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "id8",
                        "targetRef": "g2"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "g2",
                        "targetRef": "id4",
                        "condition": "Not suitable"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "id4",
                        "targetRef": "e3"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "g2",
                        "targetRef": "id9",
                        "condition": "Suitable"
                    },
                    {
                        "id": "f15",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "f16",
                        "sourceRef": "id10",
                        "targetRef": "e4"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins at ACME AG when an application is received. The HR department sends an acknowledgment of receipt to the applicant. Next, the HR department checks the applicant's details. Based on this check, the HR manager determines the application status.\n\nIf the application is rejected, the HR manager sends a rejection notice to the applicant, and the process ends with the application being rejected.\n\nIf the application is accepted, the HR department sends an invitation to the applicant for a job interview. Following this, the HR department prepares the employment contract. The HR manager then conducts the job interview.\n\nAfter the interview, the HR manager determines the applicant's suitability. If the applicant is deemed not suitable, the HR manager sends a rejection notice to the applicant, and the process ends with the application being rejected.\n\nIf the applicant is deemed suitable, the HR manager sends the employment contract to the applicant. The HR department then waits for the signed contract to be returned. Once the signed employment contract is available, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send acknowledgment of receipt",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Send rejection to applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send invitation to job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare employment contract",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Send employment contract to applicant",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Application rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Signed employment contract available",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Wait for signed contract",
                        "type": "IntermediateNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Determine application status",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Determine suitability",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "HR department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id8",
                                    "id11"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "HR manager",
                                "elemRefs": [
                                    "id3",
                                    "id6",
                                    "id7",
                                    "id9",
                                    "id10",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "rejected"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id12",
                        "targetRef": "id4",
                        "condition": "accepted"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id13",
                        "targetRef": "id3",
                        "condition": "not suitable"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "suitable"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id11",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when an application is received by the HR department at ACME AG.\n\nFirst, an acknowledgment of receipt is sent to the applicant.\n\nNext, the applicant is checked.\n\nBased on the application status decision, if the applicant is rejected, a rejection is sent to the applicant, and the process ends with the rejection.\n\nIf the applicant is accepted, an invitation to a job interview is sent.\n\nFollowing this, an employment contract is prepared.\n\nThe job interview is then conducted.\n\nAfter the interview, a determination of the applicant's suitability is made.\n\nIf the applicant is found not suitable, a rejection is sent to the applicant, and the process ends with the rejection.\n\nIf the applicant is found suitable, the employment contract is sent to the applicant.\n\nThe process then waits for the signed contract to be returned.\n\nOnce the signed contract is received, the process ends with the signed employment contract.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send acknowledgment of receipt",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Send rejection to applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send invitation to job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare employment contract",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Send employment contract to applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Wait for signed contract",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End with rejection",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End with signed employment contract",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Application status decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Determine suitability",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "ACME AG HR Department",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "HR",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Rejected"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id12",
                        "targetRef": "id4",
                        "condition": "Accepted"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id13",
                        "targetRef": "id3",
                        "condition": "Not suitable"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "Suitable"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "29_ground_truth.json": {
        "0": {
            "text": "The process begins when an order is received from a hotel guest at Hotel Evanstonian. The Room Service Manager creates and forwards the order ticket. \n\nOnce the order ticket is forwarded, three tasks are initiated in parallel. The kitchen staff prepares the meals, the cart and non-alcoholic beverages are prepared, and the sommelier checks if wine is desired. \n\nIf wine is desired, the sommelier fetches the wine from the cellar and then checks if other alcoholic beverages are desired. If other alcoholic beverages are desired, the sommelier prepares them. \n\nAll prepared items, including meals, cart, non-alcoholic beverages, and any alcoholic beverages, are then consolidated. \n\nThe consolidated order is delivered to the hotel guest. \n\nAfter the delivery, it is checked if there are no other orders to process. If there are no other orders, the customer's account is debited, and the process ends with the customer order being completed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create and forward the order ticket",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare meals",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare cart and non-alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check if wine is desired",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Fetch wine from cellar",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check if other alcoholic beverages desired",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Prepare other alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Consolidate all prepared items",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Deliver order to hotel guest",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check if there are no other orders to process",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Debit customer's account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start1",
                        "name": "Order received from hotel guest",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end1",
                        "name": "Customer order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "type": "Parallel"
                    },
                    {
                        "id": "gw2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Hotel Evanstonian",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Room Service Manager",
                                "elemRefs": [
                                    "start1",
                                    "id1"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Kitchen & Waiter",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Sommelier",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "gw1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "gw1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "gw1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "gw2",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gw3",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id11",
                        "condition": "true"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id11",
                        "targetRef": "end1"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an order is received at Hotel Evanstonian. The Room Service Manager creates and forwards the order ticket. This triggers three parallel activities: the kitchen prepares the meals, the waiter prepares the cart and non-alcoholic beverages, and a decision is made on whether wine is desired. \n\nIf wine is desired, the sommelier fetches the wine from the cellar. This is followed by another decision on whether other alcoholic beverages are desired. If other alcoholic beverages are desired, the sommelier prepares them. If not, the process continues without this step. \n\nAll prepared items, including meals, cart, non-alcoholic beverages, and any alcoholic beverages, are then consolidated. The waiter then delivers the order to the guest. \n\nAfter the delivery, a check is made to see if there are other orders to process. If there are no other orders, the waiter's next step is to debit the customer's account. The process concludes with the customer's order being completed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create and forward order ticket",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare meals",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare cart and non-alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Fetch wine from cellar",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare other alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Consolidate prepared items",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Deliver order to guest",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Debit customer's account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Order received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Customer order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Wine desired?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Other alcoholic beverages desired?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Other orders to process?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "Hotel Evanstonian",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Room Service Manager",
                                "elemRefs": [
                                    "id1"
                                ]
                            },
                            {
                                "id": "id19",
                                "name": "Kitchen",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "id20",
                                "name": "Waiter",
                                "elemRefs": [
                                    "id3",
                                    "id7",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id21",
                                "name": "Sommelier",
                                "elemRefs": [
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id14",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id14",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id14",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id11",
                        "targetRef": "id15",
                        "condition": "No"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id15",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id12",
                        "targetRef": "id16",
                        "condition": "No"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id16",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "No other orders"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when an order is received by the Room Service Manager at Hotel Evanstonian. The manager creates and forwards the order ticket. This triggers three parallel activities: the kitchen prepares the meals, the waiter prepares the cart and non-alcoholic beverages, and the sommelier checks if wine is desired.\n\nIf wine is desired, the sommelier fetches the wine from the cellar. After fetching the wine, the sommelier checks if other alcoholic beverages are desired. If no wine is desired, the sommelier directly checks if other alcoholic beverages are desired. If other alcoholic beverages are desired, the sommelier prepares them. \n\nAll these activities converge, and the waiter consolidates all items. The waiter then delivers the order to the guest. After delivering the order, the waiter checks for other orders. If there are other orders, the process loops back to the sommelier checking if other alcoholic beverages are desired. If there are no other orders, the customer's account is debited, and the process ends with the order being completed.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Create and forward order ticket",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Prepare meals",
                        "type": "Service"
                    },
                    {
                        "id": "task3",
                        "name": "Prepare cart and non-alcoholic beverages",
                        "type": "Service"
                    },
                    {
                        "id": "task4",
                        "name": "Check if wine is desired",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Fetch wine from cellar",
                        "type": "Manual"
                    },
                    {
                        "id": "task6",
                        "name": "Check if other alcoholic beverages are desired",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Prepare other alcoholic beverages",
                        "type": "Service"
                    },
                    {
                        "id": "task8",
                        "name": "Consolidate all items",
                        "type": "Service"
                    },
                    {
                        "id": "task9",
                        "name": "Deliver order to guest",
                        "type": "Service"
                    },
                    {
                        "id": "task10",
                        "name": "Check for other orders",
                        "type": "User"
                    },
                    {
                        "id": "task11",
                        "name": "Debit customer's account",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent1",
                        "name": "Order received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent1",
                        "name": "Order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "exclusiveGateway1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "exclusiveGateway2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "exclusiveGateway3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "parallelGateway1",
                        "type": "Parallel"
                    },
                    {
                        "id": "parallelGateway2",
                        "type": "Parallel"
                    },
                    {
                        "id": "parallelGateway3",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Hotel Evanstonian",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Room Service Manager",
                                "elemRefs": [
                                    "task1",
                                    "startEvent1"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Kitchen",
                                "elemRefs": [
                                    "task2"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Waiter",
                                "elemRefs": [
                                    "task3",
                                    "task8",
                                    "task9",
                                    "task10",
                                    "task11"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Sommelier",
                                "elemRefs": [
                                    "task4",
                                    "task5",
                                    "task6",
                                    "task7"
                                ]
                            },
                            {
                                "id": "lane5",
                                "name": "Customer",
                                "elemRefs": [
                                    "endEvent1"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "parallelGateway1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "parallelGateway1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "parallelGateway1",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "parallelGateway1",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task4",
                        "targetRef": "exclusiveGateway1"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "exclusiveGateway1",
                        "targetRef": "task5",
                        "condition": "yes"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task5",
                        "targetRef": "exclusiveGateway2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "exclusiveGateway1",
                        "targetRef": "exclusiveGateway2",
                        "condition": "no"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "exclusiveGateway2",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task6",
                        "targetRef": "exclusiveGateway3"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "exclusiveGateway3",
                        "targetRef": "task7",
                        "condition": "yes"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "exclusiveGateway3",
                        "targetRef": "parallelGateway2",
                        "condition": "no"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "task7",
                        "targetRef": "parallelGateway2"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "task2",
                        "targetRef": "parallelGateway2"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "task3",
                        "targetRef": "parallelGateway2"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "task6",
                        "targetRef": "parallelGateway2"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "task7",
                        "targetRef": "parallelGateway2"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "parallelGateway2",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "task8",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "task9",
                        "targetRef": "task10"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "task10",
                        "targetRef": "exclusiveGateway3"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "exclusiveGateway3",
                        "targetRef": "task11",
                        "condition": "yes"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "task11",
                        "targetRef": "endEvent1"
                    }
                ]
            }
        }
    },
    "53_ground_truth.json": {
        "0": {
            "text": "The process begins with fixing the travel details. Once the travel details are fixed, a checklist for preparations is prepared. After the checklist is ready, the necessary papers are checked and completed. \n\nNext, it is determined whether a visa is required. If a visa is required, an application for the visa is made. Once the visa application is completed, any unfinished business is cleared. If a visa is not required, the process moves directly to clearing unfinished business.\n\nAfter clearing unfinished business, it is checked whether there are pets to take care of. If there are pets, arrangements for their care are made. Following this, the process continues with either unsubscribing from post or arranging for a neighbor to fetch it. If there are no pets to take care of, the process directly moves to unsubscribing from post or arranging for a neighbor to fetch it.\n\nOnce the post arrangements are made, several tasks are carried out in parallel. These tasks include obtaining necessary vaccinations, checking and applying for additional insurance coverage, gathering travel documents and addresses, making copies of ID cards and travel documents, buying or lending guidebooks and city maps, and preparing a first-aid kit.\n\nAfter gathering travel documents and addresses, copies of ID cards and travel documents are made. Finally, the process concludes with the travel preparations being complete.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare checklist for preparations",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check and complete necessary papers",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Apply for visa",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Clear unfinished business",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Arrange care for pets",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Unsubscribe from post or arrange neighbor to fetch it",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Obtain necessary vaccinations",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check and apply for additional insurance coverage",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Gather travel documents and addresses",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Make copies of ID cards and travel documents",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Buy or lend guidebooks and city maps",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Prepare first-aid kit",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Fix travel details",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Travel preparations complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Visa Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Pets to take care of?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id15",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id17",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id17",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id17",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id17",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id17",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id17",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id3",
                        "targetRef": "id18"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the start event, indicating the commencement of travel preparations. The first task is to prepare a checklist. Once the checklist is prepared, the next step is to check and complete the necessary papers.\n\nFollowing this, a decision is made on whether a visa is required. If a visa is required, the next step is to apply for the visa, and the visa application is communicated to the embassy. After this communication, the process continues with clearing any unfinished business.\n\nIf a visa is not required, the process directly proceeds to clearing any unfinished business. After clearing unfinished business, another decision is made on whether there are pets to take care of. If there are pets to take care of, the next step is to arrange pet care. If there are no pets to take care of, the process moves to unsubscribing from post or arranging for a neighbor to handle it.\n\nAfter arranging pet care or unsubscribing from post, the next step is to obtain necessary vaccinations. Following the vaccinations, the next task is to check insurance coverage. If additional coverage is needed, the next step is to apply for additional coverage, and this application is communicated to the insurance company. After this communication, the process continues with gathering travel documents and addresses.\n\nIf no additional coverage is needed, the process directly proceeds to gathering travel documents and addresses. Once the travel documents and addresses are gathered, three tasks can be performed in parallel: making copies of ID cards and travel documents, buying or lending guidebooks and city maps, and preparing a first-aid kit.\n\nFinally, the process concludes with the end event, indicating that travel preparations are complete.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare checklist",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Check and complete necessary papers",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Apply for visa",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Clear unfinished business",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Arrange pet care",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Unsubscribe from post or arrange for neighbor",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Obtain necessary vaccinations",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check insurance coverage",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Apply for additional coverage",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Gather travel documents and addresses",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Make copies of ID cards and travel documents",
                        "type": "Manual"
                    },
                    {
                        "id": "id12",
                        "name": "Buy or lend guidebooks and city maps",
                        "type": "Manual"
                    },
                    {
                        "id": "id13",
                        "name": "Prepare first-aid kit",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Travel preparations complete",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Visa application communicated to embassy",
                        "type": "IntermediateThrowEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Communicate additional coverage to insurance company",
                        "type": "IntermediateThrowEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Visa required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Pets to take care of?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id18",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id18",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id16",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id19",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id19",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id17",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id8",
                        "targetRef": "id10",
                        "condition": "No additional coverage needed"
                    },
                    {
                        "id": "af1",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "bf1",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "ce1",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id11",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, after which a checklist for preparations is prepared. Following this, necessary papers are checked and completed. \n\nNext, it is determined whether a visa is required. If a visa is required, an application for the visa is made, and the visa application is communicated to the embassy. After this, any unfinished business is cleared.\n\nIf a visa is not required, the process directly proceeds to clearing any unfinished business.\n\nAfter clearing any unfinished business, it is determined whether there are pets to take care of. If there are pets to take care of, arrangements for pet care are made. If there are no pets to take care of, the process moves directly to unsubscribing from post or arranging for a neighbor to fetch it.\n\nFollowing the arrangement for pet care, the process continues with unsubscribing from post or arranging for a neighbor to fetch it. \n\nNext, necessary vaccinations are obtained, and insurance coverage is checked. If additional insurance coverage is needed, an application for additional insurance coverage is made, and this is communicated to the insurance company. \n\nAfter checking insurance coverage or communicating additional insurance coverage, travel documents and addresses are gathered. Copies of ID cards and travel documents are then made. \n\nSubsequently, guidebooks and city maps are bought or borrowed, and a first-aid kit is prepared. The process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare a checklist for preparations",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Check and complete necessary papers",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Apply for visa",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Communicate visa application to embassy",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Clear any unfinished business",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Arrange for pet care",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Unsubscribe from post or arrange for neighbor to fetch it",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Obtain necessary vaccinations",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check insurance coverage",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Apply for additional insurance coverage",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Communicate additional insurance coverage to insurance company",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Gather travel documents and addresses",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Make copies of ID cards and travel documents",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Buy or lend guidebooks and city maps",
                        "type": "Manual"
                    },
                    {
                        "id": "id15",
                        "name": "Prepare a first-aid kit",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "evt1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "evt2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Visa required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "name": "Pets to take care of?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "evt1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "gw1",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "gw1",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "gw2",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gw2",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id15",
                        "targetRef": "evt2"
                    }
                ],
                "messageFlows": []
            }
        }
    }
}